(* 
Bug related to simplify/otheruses: the event termS is finally
removed
*)


proof {
crypto enc;
show_game occ;
insert_event Encrypt 263;
simplify;
simplify;
simplify coll_elim pw;
auto
}

(* set interactiveMode = true. *)

param NU, NS, NP.

type G [large, fixed].
type passwd [password, fixed].
     (* I want to eliminate collisions with the password in 
     some cases but not others. I want to eliminate them in the protocol
     itself, but not in enc_dec_oracle (because if I eliminate them in
     enc_dec_oracle, the probability of attack will depend on qE/|passwd| 
     and/or qD/|passwd| so it may become too large). *)


type host [bounded].

(* Ideal cipher model *)

expand ICM_cipher(passwd, G, enc, dec, enc_dec_oracle, qE, qD).

(* Queries *)

channel c1, c2, c3, c4, c5, c6, c7, c8, c9, cp,
	start, finish.

const U : host.
const S : host.

event termS.

query 
	event termS ==> false.

(* Client *)

let processU =
	in(c1, ());
	new X: G;
	out(c2, (U, X));
        in(c5, (=S, Ystar_u: G));
	let Y_u:G = dec(Ystar_u, pw) in
	out(c6, ()).

(* Server *)

let processS =
	in(c3, (=U, X_s: G));
	new Y: G;
	let Ystar = enc(Y, pw) in
	out(c4, (S, Ystar));
	in(c7, ());
	find j <= NU suchthat defined(X[j],Y_u[j]) && X[j] = X_s && Y_u[j] = Y then
	event termS.


process 
	in(start, ());
	new pw: passwd;
	out(c8, ());
	((! NU processU) |
	 (! NS processS) | 
	 enc_dec_oracle)

