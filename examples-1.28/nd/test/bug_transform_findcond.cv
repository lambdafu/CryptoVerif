(* Internal error 
The transformation of h(x[j]) defines 

let m = x[j] in find ... and makes a look up on m.

When we do that inside a condition of find, we end up making a look up
on a variable m defined in a condition of find, which is forbidden.

We should forbid such transformations (which ones precisely?).

*)

param N.

type G [large, fixed].
type hashinput.
type hash [fixed].
type host.


type hashkey [fixed].

expand ROM_hash(hashkey, hashinput, hash, h).

param qH [noninteractive].
channel hc1, hc2.
let hashoracle = ! qH in(hc1, y: hashinput); out(hc2, h(hk,y)).

(* Queries *)

query secret s.

channel c1, c2, c3, c4, c5, c6, c7, c8, c9,  
	hstart, hret, start, finish.


let processU =
	in(c1, m: hash);
	find j<= N suchthat defined(x[j]) && m=h(hk,x[j]) then
	out(c2, true)
	else
	out(c2, false).

let processS =
	in(c3, x: hashinput);
	new s: G;
        out(c4, s).

process 
	in(hstart, ());
	new hk: hashkey;
	out(hret, ());
	((! N processU) |
	 (! N processS) | hashoracle)


(* EXPECTED
RESULT Could not prove secrecy of s.
0.020s (user 0.020s + system 0.000s), max rss 16480K
END *)
