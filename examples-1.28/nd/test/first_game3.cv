(* The "let y" inside the condition of find should not be expanded,
because we must make sure that x is defined before being able to
execute the "let".
This file causes an internal error at invariant checking after 
the expansion of if/let/find/new.

Fix 23/11/2009 This file is rejected: if/let/find/new are not accepted inside
conditions of find.
That's ok. I could be more permissive and accept this file.

Fix 23/11/2009, file accepted, but there is still a bug in expansion 
of terms/processes

Fix 23/11/2009 expansion bug fixed, but now I get an internal error
in simplification!

Fix 23/11/2009 simplification bug fixed. I get the same bug as in 
bug_transform_findcond.cv
*)

param N.

type G [large, fixed].
type hashinput.
type hash [fixed].
type host.


type hashkey [fixed].

expand ROM_hash(hashkey, hashinput, hash, h).

param qH [noninteractive].
channel hc1, hc2.
let hashoracle = ! qH in(hc1, z: hashinput); out(hc2, h(hk,z)).

(* Queries *)

query secret s.

channel c1, c2, c3, c4, c5, c6, c7, c8, c9,  
	hstart, hret, start, finish.


let processU =
	in(c1, m: hash);
	find suchthat defined(x) && let y:hashinput = x in m = h(hk,y) then
	out(c2, true)
	else
	out(c2, false).

let processS =
	in(c3, x: hashinput);
	new s: G;
        out(c4, s).

process 
	in(hstart, ());
	new hk: hashkey;
	out(hret, ());
	((! N processU) |
	 (processS) | hashoracle)


(* EXPECTED
RESULT Could not prove secrecy of s.
0.030s (user 0.010s + system 0.020s), max rss 16480K
END *)
