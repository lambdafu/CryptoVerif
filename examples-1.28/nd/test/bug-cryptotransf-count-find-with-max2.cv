(* CryptoVerif makes a wrong computation of probabilities.
To count the number of calls to the encryption oracle,
it computes a "max" between the two branches of find,
but this is correct only when the current replication index
appears as a factor. Here, the encryption oracle
is called N2 times in each branch of find.
In total, it is called 2 N2 times.
*)

param N.
param N2.
param N3.

type nonce [fixed].
type key [fixed].
type keyseed [fixed].
type seed [fixed].

(* Shared-key encryption (IND-CPA) *)

proba Penc.

expand IND_CPA_sym_enc(keyseed, key, bitstring, bitstring, seed, kgen, enc, dec, injbot, Z, Penc).

(* Queries *)

query secret1 N.

channel c1, c2, c3, c4, c5, c6, c7, c8, c9, start, finish.

let processA = 
	in(start, (x:bitstring));
	find j <= N2 suchthat defined(m1[j],r1[j]) && m1[j] = x then
	   out(c1, enc(m1[j],Kas,r1[j]))
        orfind j <= N2 suchthat defined(m2[j],r2[j]) && m2[j] = x then
	   out(c1, enc(m2[j],Kas,r2[j])).

process 
	in(start, ());
	new rKas: keyseed;
	let Kas = kgen(rKas) in
	new N: nonce;
	out(c9, N);
	(! N processA) | (!N2 in(c3, m1:bitstring); new r1:seed)
	     	       | (!N2 in(c4, m2:bitstring); new r2:seed)

(* EXPECTED
RESULT Could not prove one-session secrecy of N.
0.020s (user 0.020s + system 0.000s), max rss 16720K
END *)
