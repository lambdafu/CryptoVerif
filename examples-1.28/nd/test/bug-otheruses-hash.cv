(* 
Bug related to simplify/otheruses: the event termS is finally
removed
*)


proof {
crypto hash;
simplify;
simplify;
auto
}

(* set interactiveMode = true. *)

param NU, NS, NP.

type G [large, fixed].
type nonce [large, fixed].
type thash [large, fixed].

type host [bounded].

(* Hash functions in the random oracle model *)

param N, qH.

fun hash(G, nonce):thash.

equiv (x1: G, x2: nonce) N -> hash(x1, x2) [all]
      <=(0)=>
      (x1: G, x2: nonce) N -> find[unique] j <= N suchthat defined(x1[j],x2[j],r[j]) && otheruses(r[j]) && x1 = x1[j] && x2 = x2[j] then r[j] else
			 new r:thash; r.

channel c10, c20.

let hash_oracle = ! qH in(c10, (x1: G, x2: nonce)); out(c20, hash(x1,x2)). 

(* Queries *)

channel c1, c2, c3, c4, c5, c6, c7, c8, c9, cp,
	start, finish.

const U : host.
const S : host.

event termS.

query 
	event termS ==> false.

(* Client *)

let processU =
	in(c1, ());
	new X: G;
	out(c2, (U, X));
        in(c5, (=S, Ystar_u: G));
	let Y_u:thash = hash(Ystar_u, pw) in
	out(c6, ()).

(* Server *)

let processS =
	in(c3, (=U, X_s: G));
	new Ystar: G;
	let Y = hash(Ystar, pw) in
	out(c4, (S, Ystar));
	in(c7, ());
	find j <= NU suchthat defined(X[j],Y_u[j]) && X[j] = X_s && Y_u[j] = Y then
	event termS.


process 
	in(start, ());
	new pw: nonce;
	out(c8, ());
	((! NU processU) |
	 (! NS processS) | 
	 hash_oracle)


(* EXPECTED
RESULT Could not prove event termS ==> false.
0.040s (user 0.030s + system 0.010s), max rss 19936K
END *)
