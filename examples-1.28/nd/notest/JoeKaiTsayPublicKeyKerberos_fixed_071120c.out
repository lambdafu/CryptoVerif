bash-3.1$ prover examplesnd/JoeKaiTsayPublicKeyKerberos_fixed_071120c
Doing expand if, let, find
Doing simplify
Run simplify 1 time(s). Fixpoint reached.
Doing move new all binders
Doing remove assignments of useless
Please enter a command: crypto sign rkCA
Doing equivalence
equiv ! !_7 <= N3 new r: skeyseed; (
  () -> spkgen(r),
  ! !_8 <= N2 new r2: sseed; (x: sblocksize) -> sign(x, sskgen(r), r2)), ! !_9 <= N4 (m: sblocksize, y: spkey, si: signature) -> check(m, y, si) [all]
<=(N3 * Psign(time, N2))=>
      ! !_10 <= N3 new r: skeyseed; (
  () -> spkgen2(r),
  ! !_11 <= N2 new r2: sseed; (x_47: sblocksize) -> let x: sblocksize = x_47 in sign2(x, sskgen2(r), r2)), ! !_12 <= N4 (m: sblocksize, y: spkey, si: signature) -> find j <= N2, k_14 <= N3 suchthat defined(x[j, k_14], r[k_14]) && ((y = spkgen2(r[k_14])) && ((m = x[j, k_14]) && check2(m, y, si))) then true else find k_13 <= N3 suchthat defined(r[k_13]) && (y = spkgen2(r[k_13])) then false else check(m, y, si)
with rkCA
Doing remove assignments of binder skCA
Doing equivalence
equiv ! !_7 <= N3 new r: skeyseed; (
  () -> spkgen(r),
  ! !_8 <= N2 new r2: sseed; (x: sblocksize) -> sign(x, sskgen(r), r2)), ! !_9 <= N4 (m: sblocksize, y: spkey, si: signature) -> check(m, y, si) [all]
<=(N3 * Psign(time, N2))=>
      ! !_10 <= N3 new r: skeyseed; (
  () -> spkgen2(r),
  ! !_11 <= N2 new r2: sseed; (x_47: sblocksize) -> let x: sblocksize = x_47 in sign2(x, sskgen2(r), r2)), ! !_12 <= N4 (m: sblocksize, y: spkey, si: signature) -> find j <= N2, k_14 <= N3 suchthat defined(x[j, k_14], r[k_14]) && ((y = spkgen2(r[k_14])) && ((m = x[j, k_14]) && check2(m, y, si))) then true else find k_13 <= N3 suchthat defined(r[k_13]) && (y = spkgen2(r[k_13])) then false else check(m, y, si)
with rkCA
Doing simplify
Run simplify 2 time(s). Maximum reached.
Doing move new all binders
Doing remove assignments of useless
Please enter a command: crypto sign rkCs
Doing equivalence
equiv ! !_7 <= N3 new r: skeyseed; (
  () -> spkgen(r),
  ! !_8 <= N2 new r2: sseed; (x: sblocksize) -> sign(x, sskgen(r), r2)), ! !_9 <= N4 (m: sblocksize, y: spkey, si: signature) -> check(m, y, si) [all]
<=(N3 * Psign(time, N2))=>
      ! !_10 <= N3 new r: skeyseed; (
  () -> spkgen2(r),
  ! !_11 <= N2 new r2: sseed; (x_47: sblocksize) -> let x: sblocksize = x_47 in sign2(x, sskgen2(r), r2)), ! !_12 <= N4 (m: sblocksize, y: spkey, si: signature) -> find j <= N2, k_14 <= N3 suchthat defined(x[j, k_14], r[k_14]) && ((y = spkgen2(r[k_14])) && ((m = x[j, k_14]) && check2(m, y, si))) then true else find k_13 <= N3 suchthat defined(r[k_13]) && (y = spkgen2(r[k_13])) then false else check(m, y, si)
with rkCs
Doing remove assignments of binder sskC
Doing equivalence
equiv ! !_7 <= N3 new r: skeyseed; (
  () -> spkgen(r),
  ! !_8 <= N2 new r2: sseed; (x: sblocksize) -> sign(x, sskgen(r), r2)), ! !_9 <= N4 (m: sblocksize, y: spkey, si: signature) -> check(m, y, si) [all]
<=(N3 * Psign(time, N2))=>
      ! !_10 <= N3 new r: skeyseed; (
  () -> spkgen2(r),
  ! !_11 <= N2 new r2: sseed; (x_47: sblocksize) -> let x: sblocksize = x_47 in sign2(x, sskgen2(r), r2)), ! !_12 <= N4 (m: sblocksize, y: spkey, si: signature) -> find j <= N2, k_14 <= N3 suchthat defined(x[j, k_14], r[k_14]) && ((y = spkgen2(r[k_14])) && ((m = x[j, k_14]) && check2(m, y, si))) then true else find k_13 <= N3 suchthat defined(r[k_13]) && (y = spkgen2(r[k_13])) then false else check(m, y, si)
with rkCs
Doing simplify
Run simplify 2 time(s). Fixpoint reached.
Eliminated collisions between rkCs and rkCA Probability: 1. / |skeyseed|
Reduced (spkgen2(rkCs) = spkgen2(rkCA)) to (rkCs = rkCA) Probability: Psigncoll
Doing move new all binders
Doing remove assignments of useless
Please enter a command: crypto enc rkC
Doing equivalence
equiv ! !_1 <= N3 new r: keyseed; (
  () -> pkgen(r),
  ! !_2 <= N2 (m: bitstring) -> dec(m, skgen(r))), ! !_3 <= N4 new r2: seed; (x: blocksize, y: pkey) -> enc(x, y, r2) [all]
<=(N3 * N4 * Penc(time, N2))=>
      ! !_4 <= N3 new r: keyseed; (
  () -> pkgen2(r),
  ! !_5 <= N2 (m: bitstring) -> find j <= N4 suchthat defined(m2[j], y[j], x[j]) && ((y[j] = pkgen2(r)) && (m = m2[j])) then injbot1(x[j]) else dec2(m, skgen2(r))), ! !_6 <= N4 new r2: seed; new r3: seed; (x_49: blocksize, y_48: pkey) -> let x: blocksize = x_49 in let y: pkey = y_48 in find k <= N3 suchthat defined(r[k]) && (y = pkgen2(r[k])) then let m2: bitstring = enc2(Z, y, r2) in m2 else enc(x, y, r3)
with rkC
Doing remove assignments of binder skC
Doing equivalence
equiv ! !_1 <= N3 new r: keyseed; (
  () -> pkgen(r),
  ! !_2 <= N2 (m: bitstring) -> dec(m, skgen(r))), ! !_3 <= N4 new r2: seed; (x: blocksize, y: pkey) -> enc(x, y, r2) [all]
<=(N3 * N4 * Penc(time, N2))=>
      ! !_4 <= N3 new r: keyseed; (
  () -> pkgen2(r),
  ! !_5 <= N2 (m: bitstring) -> find j <= N4 suchthat defined(m2[j], y[j], x[j]) && ((y[j] = pkgen2(r)) && (m = m2[j])) then injbot1(x[j]) else dec2(m, skgen2(r))), ! !_6 <= N4 new r2: seed; new r3: seed; (x_49: blocksize, y_48: pkey) -> let x: blocksize = x_49 in let y: pkey = y_48 in find k <= N3 suchthat defined(r[k]) && (y = pkgen2(r[k])) then let m2: bitstring = enc2(Z, y, r2) in m2 else enc(x, y, r3)
with r7_107, r7_99, rkC
Doing simplify
Run simplify 2 time(s). Maximum reached.
Doing move new all binders
Doing remove assignments of useless
Please enter a command: crypto sign rkKs
Doing equivalence
equiv ! !_7 <= N3 new r: skeyseed; (
  () -> spkgen(r),
  ! !_8 <= N2 new r2: sseed; (x: sblocksize) -> sign(x, sskgen(r), r2)), ! !_9 <= N4 (m: sblocksize, y: spkey, si: signature) -> check(m, y, si) [all]
<=(N3 * Psign(time, N2))=>
      ! !_10 <= N3 new r: skeyseed; (
  () -> spkgen2(r),
  ! !_11 <= N2 new r2: sseed; (x_47: sblocksize) -> let x: sblocksize = x_47 in sign2(x, sskgen2(r), r2)), ! !_12 <= N4 (m: sblocksize, y: spkey, si: signature) -> find j <= N2, k_14 <= N3 suchthat defined(x[j, k_14], r[k_14]) && ((y = spkgen2(r[k_14])) && ((m = x[j, k_14]) && check2(m, y, si))) then true else find k_13 <= N3 suchthat defined(r[k_13]) && (y = spkgen2(r[k_13])) then false else check(m, y, si)
with rkKs
Doing simplify
Run simplify 2 time(s). Fixpoint reached.
Eliminated collisions between rkKs and rkCs Probability: 1. / |skeyseed|
Eliminated collisions between rkKs and rkCA Probability: 1. / |skeyseed|
Reduced (spkgen2(rkKs) = spkgen2(rkCs)) to (rkKs = rkCs) Probability: Psigncoll
Reduced (spkgen2(rkKs) = spkgen2(rkCA)) to (rkKs = rkCA) Probability: Psigncoll
Doing move new all binders
Doing remove assignments of useless
Please enter a command: auto
Doing equivalence
equiv ! !_25 <= N3 new r: mkeyseed; (
  ! !_26 <= N (x: maxmac) -> mac(x, mkgen(r)),
  ! !_27 <= N2 (m: maxmac, ma: macs) -> checkmac(m, mkgen(r), ma))
<=(N3 * Pmac(time, N, N2))=>
      ! !_28 <= N3 new r: mkeyseed; (
  ! !_29 <= N (x_45: maxmac) -> let x: maxmac = x_45 in mac2(x, mkgen2(r)),
  ! !_30 <= N2 (m: maxmac, ma: macs) -> find j <= N suchthat defined(x[j]) && ((m = x[j]) && (ma = mac2(x[j], mkgen2(r)))) then true else false)

Doing equivalence
equiv ! !_19 <= N2 new r: symkeyseed; (
  ! !_20 <= N new r2: symseed; (x: maxenc) -> encsym(x, kgen(r), r2),
  ! !_21 <= N3 (y: maxmac) -> decsym(y, kgen(r)))
<=(N2 * Pencctxt(time, N, N3))=>
      ! !_22 <= N2 new r: symkeyseed; (
  ! !_23 <= N new r2: symseed; (x_46: maxenc) -> let x: maxenc = x_46 in let z: maxmac = encsym(x, kgen2(r), r2) in z,
  ! !_24 <= N3 (y: maxmac) -> find j <= N suchthat defined(x[j], r2[j], z[j]) && (z[j] = y) then injbot2(x[j]) else bottom)

Doing equivalence
equiv ! !_15 <= N2 new r: symkeyseed; ! !_16 <= N new r2: symseed; (x: maxenc) -> encsym(x, kgen2(r), r2)
<=(N2 * Penc(time, N))=>
      ! !_17 <= N2 new r: symkeyseed; ! !_18 <= N new r2: symseed; (x: maxenc) -> encsym2(Z2(x), kgen2(r), r2)

Doing equivalence
equiv ! !_7 <= N3 new r: skeyseed; (
  () -> spkgen(r),
  ! !_8 <= N2 new r2: sseed; (x: sblocksize) -> sign(x, sskgen(r), r2)), ! !_9 <= N4 (m: sblocksize, y: spkey, si: signature) -> check(m, y, si) [all]
<=(N3 * Psign(time, N2))=>
      ! !_10 <= N3 new r: skeyseed; (
  () -> spkgen2(r),
  ! !_11 <= N2 new r2: sseed; (x_47: sblocksize) -> let x: sblocksize = x_47 in sign2(x, sskgen2(r), r2)), ! !_12 <= N4 (m: sblocksize, y: spkey, si: signature) -> find j <= N2, k_14 <= N3 suchthat defined(x[j, k_14], r[k_14]) && ((y = spkgen2(r[k_14])) && ((m = x[j, k_14]) && check2(m, y, si))) then true else find k_13 <= N3 suchthat defined(r[k_13]) && (y = spkgen2(r[k_13])) then false else check(m, y, si)

Doing equivalence
equiv ! !_1 <= N3 new r: keyseed; (
  () -> pkgen(r),
  ! !_2 <= N2 (m: bitstring) -> dec(m, skgen(r))), ! !_3 <= N4 new r2: seed; (x: blocksize, y: pkey) -> enc(x, y, r2) [all]
<=(N3 * N4 * Penc(time, N2))=>
      ! !_4 <= N3 new r: keyseed; (
  () -> pkgen2(r),
  ! !_5 <= N2 (m: bitstring) -> find j <= N4 suchthat defined(m2[j], y[j], x[j]) && ((y[j] = pkgen2(r)) && (m = m2[j])) then injbot1(x[j]) else dec2(m, skgen2(r))), ! !_6 <= N4 new r2: seed; new r3: seed; (x_49: blocksize, y_48: pkey) -> let x: blocksize = x_49 in let y: pkey = y_48 in find k <= N3 suchthat defined(r[k]) && (y = pkgen2(r[k])) then let m2: bitstring = enc2(Z, y, r2) in m2 else enc(x, y, r3)

Doing remove assignments of binder k2
Doing SA rename k2
Doing remove assignments of binder k2_152
Doing remove assignments of binder k2_151
Doing equivalence
equiv ! !_25 <= N3 new r: mkeyseed; (
  ! !_26 <= N (x: maxmac) -> mac(x, mkgen(r)),
  ! !_27 <= N2 (m: maxmac, ma: macs) -> checkmac(m, mkgen(r), ma))
<=(N3 * Pmac(time, N, N2))=>
      ! !_28 <= N3 new r: mkeyseed; (
  ! !_29 <= N (x_45: maxmac) -> let x: maxmac = x_45 in mac2(x, mkgen2(r)),
  ! !_30 <= N2 (m: maxmac, ma: macs) -> find j <= N suchthat defined(x[j]) && ((m = x[j]) && (ma = mac2(x[j], mkgen2(r)))) then true else false)
with s2_102
Doing simplify
Run simplify 2 time(s). Maximum reached.
Eliminated collisions between n2 and n2 Probability: 0.5 * N * N / |nonce|
Doing move new all binders
Doing remove assignments of useless
Doing equivalence
equiv ! !_25 <= N3 new r: mkeyseed; (
  ! !_26 <= N (x: maxmac) -> mac(x, mkgen(r)),
  ! !_27 <= N2 (m: maxmac, ma: macs) -> checkmac(m, mkgen(r), ma))
<=(N3 * Pmac(time, N, N2))=>
      ! !_28 <= N3 new r: mkeyseed; (
  ! !_29 <= N (x_45: maxmac) -> let x: maxmac = x_45 in mac2(x, mkgen2(r)),
  ! !_30 <= N2 (m: maxmac, ma: macs) -> find j <= N suchthat defined(x[j]) && ((m = x[j]) && (ma = mac2(x[j], mkgen2(r)))) then true else false)

Doing simplify
Run simplify 2 time(s). Maximum reached.
Doing move new all binders
Doing remove assignments of useless
Doing equivalence
equiv ! !_25 <= N3 new r: mkeyseed; (
  ! !_26 <= N (x: maxmac) -> mac(x, mkgen(r)),
  ! !_27 <= N2 (m: maxmac, ma: macs) -> checkmac(m, mkgen(r), ma))
<=(N3 * Pmac(time, N, N2))=>
      ! !_28 <= N3 new r: mkeyseed; (
  ! !_29 <= N (x_45: maxmac) -> let x: maxmac = x_45 in mac2(x, mkgen2(r)),
  ! !_30 <= N2 (m: maxmac, ma: macs) -> find j <= N suchthat defined(x[j]) && ((m = x[j]) && (ma = mac2(x[j], mkgen2(r)))) then true else false)

Doing equivalence
equiv ! !_19 <= N2 new r: symkeyseed; (
  ! !_20 <= N new r2: symseed; (x: maxenc) -> encsym(x, kgen(r), r2),
  ! !_21 <= N3 (y: maxmac) -> decsym(y, kgen(r)))
<=(N2 * Pencctxt(time, N, N3))=>
      ! !_22 <= N2 new r: symkeyseed; (
  ! !_23 <= N new r2: symseed; (x_46: maxenc) -> let x: maxenc = x_46 in let z: maxmac = encsym(x, kgen2(r), r2) in z,
  ! !_24 <= N3 (y: maxmac) -> find j <= N suchthat defined(x[j], r2[j], z[j]) && (z[j] = y) then injbot2(x[j]) else bottom)

Doing equivalence
equiv ! !_15 <= N2 new r: symkeyseed; ! !_16 <= N new r2: symseed; (x: maxenc) -> encsym(x, kgen2(r), r2)
<=(N2 * Penc(time, N))=>
      ! !_17 <= N2 new r: symkeyseed; ! !_18 <= N new r2: symseed; (x: maxenc) -> encsym2(Z2(x), kgen2(r), r2)

Doing equivalence
equiv ! !_7 <= N3 new r: skeyseed; (
  () -> spkgen(r),
  ! !_8 <= N2 new r2: sseed; (x: sblocksize) -> sign(x, sskgen(r), r2)), ! !_9 <= N4 (m: sblocksize, y: spkey, si: signature) -> check(m, y, si) [all]
<=(N3 * Psign(time, N2))=>
      ! !_10 <= N3 new r: skeyseed; (
  () -> spkgen2(r),
  ! !_11 <= N2 new r2: sseed; (x_47: sblocksize) -> let x: sblocksize = x_47 in sign2(x, sskgen2(r), r2)), ! !_12 <= N4 (m: sblocksize, y: spkey, si: signature) -> find j <= N2, k_14 <= N3 suchthat defined(x[j, k_14], r[k_14]) && ((y = spkgen2(r[k_14])) && ((m = x[j, k_14]) && check2(m, y, si))) then true else find k_13 <= N3 suchthat defined(r[k_13]) && (y = spkgen2(r[k_13])) then false else check(m, y, si)

Doing equivalence
equiv ! !_1 <= N3 new r: keyseed; (
  () -> pkgen(r),
  ! !_2 <= N2 (m: bitstring) -> dec(m, skgen(r))), ! !_3 <= N4 new r2: seed; (x: blocksize, y: pkey) -> enc(x, y, r2) [all]
<=(N3 * N4 * Penc(time, N2))=>
      ! !_4 <= N3 new r: keyseed; (
  () -> pkgen2(r),
  ! !_5 <= N2 (m: bitstring) -> find j <= N4 suchthat defined(m2[j], y[j], x[j]) && ((y[j] = pkgen2(r)) && (m = m2[j])) then injbot1(x[j]) else dec2(m, skgen2(r))), ! !_6 <= N4 new r2: seed; new r3: seed; (x_49: blocksize, y_48: pkey) -> let x: blocksize = x_49 in let y: pkey = y_48 in find k <= N3 suchthat defined(r[k]) && (y = pkgen2(r[k])) then let m2: bitstring = enc2(Z, y, r2) in m2 else enc(x, y, r3)

Doing remove assignments of binder k1
Doing SA rename k1
Doing remove assignments of binder k1_200
Doing remove assignments of binder k1_199
Doing equivalence
equiv ! !_19 <= N2 new r: symkeyseed; (
  ! !_20 <= N new r2: symseed; (x: maxenc) -> encsym(x, kgen(r), r2),
  ! !_21 <= N3 (y: maxmac) -> decsym(y, kgen(r)))
<=(N2 * Pencctxt(time, N, N3))=>
      ! !_22 <= N2 new r: symkeyseed; (
  ! !_23 <= N new r2: symseed; (x_46: maxenc) -> let x: maxenc = x_46 in let z: maxmac = encsym(x, kgen2(r), r2) in z,
  ! !_24 <= N3 (y: maxmac) -> find j <= N suchthat defined(x[j], r2[j], z[j]) && (z[j] = y) then injbot2(x[j]) else bottom)
with r5_105
Doing simplify
Run simplify 2 time(s). Fixpoint reached.
Eliminated collisions between injbot2(concat4(?, n1[!_31], ?, ?)) and bottom Probability: N / |nonce|
(injbot2(concat4(?, n1[!_31], ?, ?)) characterizes a part of n1[!_31] of type(s) nonce;
 bottom does not depend on n1[!_31])
Doing move new all binders
Doing remove assignments of useless
Doing equivalence
equiv ! !_25 <= N3 new r: mkeyseed; (
  ! !_26 <= N (x: maxmac) -> mac(x, mkgen(r)),
  ! !_27 <= N2 (m: maxmac, ma: macs) -> checkmac(m, mkgen(r), ma))
<=(N3 * Pmac(time, N, N2))=>
      ! !_28 <= N3 new r: mkeyseed; (
  ! !_29 <= N (x_45: maxmac) -> let x: maxmac = x_45 in mac2(x, mkgen2(r)),
  ! !_30 <= N2 (m: maxmac, ma: macs) -> find j <= N suchthat defined(x[j]) && ((m = x[j]) && (ma = mac2(x[j], mkgen2(r)))) then true else false)

Doing equivalence
equiv ! !_19 <= N2 new r: symkeyseed; (
  ! !_20 <= N new r2: symseed; (x: maxenc) -> encsym(x, kgen(r), r2),
  ! !_21 <= N3 (y: maxmac) -> decsym(y, kgen(r)))
<=(N2 * Pencctxt(time, N, N3))=>
      ! !_22 <= N2 new r: symkeyseed; (
  ! !_23 <= N new r2: symseed; (x_46: maxenc) -> let x: maxenc = x_46 in let z: maxmac = encsym(x, kgen2(r), r2) in z,
  ! !_24 <= N3 (y: maxmac) -> find j <= N suchthat defined(x[j], r2[j], z[j]) && (z[j] = y) then injbot2(x[j]) else bottom)

Doing simplify
Run simplify 2 time(s). Fixpoint reached.
Eliminated collisions between injbot2(concat4(?, n1[!_31], ?, ?)) and bottom Probability: N / |nonce|
(injbot2(concat4(?, n1[!_31], ?, ?)) characterizes a part of n1[!_31] of type(s) nonce;
 bottom does not depend on n1[!_31])
Doing move new all binders
Doing remove assignments of useless
Proved query event fullCK(K, T, N, w, x, y) ==> fullKC(C, T, N, w', z, y)
Doing equivalence
equiv ! !_25 <= N3 new r: mkeyseed; (
  ! !_26 <= N (x: maxmac) -> mac(x, mkgen(r)),
  ! !_27 <= N2 (m: maxmac, ma: macs) -> checkmac(m, mkgen(r), ma))
<=(N3 * Pmac(time, N, N2))=>
      ! !_28 <= N3 new r: mkeyseed; (
  ! !_29 <= N (x_45: maxmac) -> let x: maxmac = x_45 in mac2(x, mkgen2(r)),
  ! !_30 <= N2 (m: maxmac, ma: macs) -> find j <= N suchthat defined(x[j]) && ((m = x[j]) && (ma = mac2(x[j], mkgen2(r)))) then true else false)

Doing equivalence
equiv ! !_19 <= N2 new r: symkeyseed; (
  ! !_20 <= N new r2: symseed; (x: maxenc) -> encsym(x, kgen(r), r2),
  ! !_21 <= N3 (y: maxmac) -> decsym(y, kgen(r)))
<=(N2 * Pencctxt(time, N, N3))=>
      ! !_22 <= N2 new r: symkeyseed; (
  ! !_23 <= N new r2: symseed; (x_46: maxenc) -> let x: maxenc = x_46 in let z: maxmac = encsym(x, kgen2(r), r2) in z,
  ! !_24 <= N3 (y: maxmac) -> find j <= N suchthat defined(x[j], r2[j], z[j]) && (z[j] = y) then injbot2(x[j]) else bottom)

Doing equivalence
equiv ! !_15 <= N2 new r: symkeyseed; ! !_16 <= N new r2: symseed; (x: maxenc) -> encsym(x, kgen2(r), r2)
<=(N2 * Penc(time, N))=>
      ! !_17 <= N2 new r: symkeyseed; ! !_18 <= N new r2: symseed; (x: maxenc) -> encsym2(Z2(x), kgen2(r), r2)

Doing simplify
Run simplify 2 time(s). Fixpoint reached.
Doing move new all binders
Doing remove assignments of useless
Doing equivalence
equiv ! !_25 <= N3 new r: mkeyseed; (
  ! !_26 <= N (x: maxmac) -> mac(x, mkgen(r)),
  ! !_27 <= N2 (m: maxmac, ma: macs) -> checkmac(m, mkgen(r), ma))
<=(N3 * Pmac(time, N, N2))=>
      ! !_28 <= N3 new r: mkeyseed; (
  ! !_29 <= N (x_45: maxmac) -> let x: maxmac = x_45 in mac2(x, mkgen2(r)),
  ! !_30 <= N2 (m: maxmac, ma: macs) -> find j <= N suchthat defined(x[j]) && ((m = x[j]) && (ma = mac2(x[j], mkgen2(r)))) then true else false)

Doing equivalence
equiv ! !_19 <= N2 new r: symkeyseed; (
  ! !_20 <= N new r2: symseed; (x: maxenc) -> encsym(x, kgen(r), r2),
  ! !_21 <= N3 (y: maxmac) -> decsym(y, kgen(r)))
<=(N2 * Pencctxt(time, N, N3))=>
      ! !_22 <= N2 new r: symkeyseed; (
  ! !_23 <= N new r2: symseed; (x_46: maxenc) -> let x: maxenc = x_46 in let z: maxmac = encsym(x, kgen2(r), r2) in z,
  ! !_24 <= N3 (y: maxmac) -> find j <= N suchthat defined(x[j], r2[j], z[j]) && (z[j] = y) then injbot2(x[j]) else bottom)

Doing equivalence
equiv ! !_15 <= N2 new r: symkeyseed; ! !_16 <= N new r2: symseed; (x: maxenc) -> encsym(x, kgen2(r), r2)
<=(N2 * Penc(time, N))=>
      ! !_17 <= N2 new r: symkeyseed; ! !_18 <= N new r2: symseed; (x: maxenc) -> encsym2(Z2(x), kgen2(r), r2)

Doing simplify
Run simplify 2 time(s). Fixpoint reached.
Doing move new all binders
Doing remove assignments of useless
Doing equivalence
equiv ! !_25 <= N3 new r: mkeyseed; (
  ! !_26 <= N (x: maxmac) -> mac(x, mkgen(r)),
  ! !_27 <= N2 (m: maxmac, ma: macs) -> checkmac(m, mkgen(r), ma))
<=(N3 * Pmac(time, N, N2))=>
      ! !_28 <= N3 new r: mkeyseed; (
  ! !_29 <= N (x_45: maxmac) -> let x: maxmac = x_45 in mac2(x, mkgen2(r)),
  ! !_30 <= N2 (m: maxmac, ma: macs) -> find j <= N suchthat defined(x[j]) && ((m = x[j]) && (ma = mac2(x[j], mkgen2(r)))) then true else false)

Doing equivalence
equiv ! !_19 <= N2 new r: symkeyseed; (
  ! !_20 <= N new r2: symseed; (x: maxenc) -> encsym(x, kgen(r), r2),
  ! !_21 <= N3 (y: maxmac) -> decsym(y, kgen(r)))
<=(N2 * Pencctxt(time, N, N3))=>
      ! !_22 <= N2 new r: symkeyseed; (
  ! !_23 <= N new r2: symseed; (x_46: maxenc) -> let x: maxenc = x_46 in let z: maxmac = encsym(x, kgen2(r), r2) in z,
  ! !_24 <= N3 (y: maxmac) -> find j <= N suchthat defined(x[j], r2[j], z[j]) && (z[j] = y) then injbot2(x[j]) else bottom)

Doing equivalence
equiv ! !_15 <= N2 new r: symkeyseed; ! !_16 <= N new r2: symseed; (x: maxenc) -> encsym(x, kgen2(r), r2)
<=(N2 * Penc(time, N))=>
      ! !_17 <= N2 new r: symkeyseed; ! !_18 <= N new r2: symseed; (x: maxenc) -> encsym2(Z2(x), kgen2(r), r2)

Doing equivalence
equiv ! !_7 <= N3 new r: skeyseed; (
  () -> spkgen(r),
  ! !_8 <= N2 new r2: sseed; (x: sblocksize) -> sign(x, sskgen(r), r2)), ! !_9 <= N4 (m: sblocksize, y: spkey, si: signature) -> check(m, y, si) [all]
<=(N3 * Psign(time, N2))=>
      ! !_10 <= N3 new r: skeyseed; (
  () -> spkgen2(r),
  ! !_11 <= N2 new r2: sseed; (x_47: sblocksize) -> let x: sblocksize = x_47 in sign2(x, sskgen2(r), r2)), ! !_12 <= N4 (m: sblocksize, y: spkey, si: signature) -> find j <= N2, k_14 <= N3 suchthat defined(x[j, k_14], r[k_14]) && ((y = spkgen2(r[k_14])) && ((m = x[j, k_14]) && check2(m, y, si))) then true else find k_13 <= N3 suchthat defined(r[k_13]) && (y = spkgen2(r[k_13])) then false else check(m, y, si)

Doing equivalence
equiv ! !_1 <= N3 new r: keyseed; (
  () -> pkgen(r),
  ! !_2 <= N2 (m: bitstring) -> dec(m, skgen(r))), ! !_3 <= N4 new r2: seed; (x: blocksize, y: pkey) -> enc(x, y, r2) [all]
<=(N3 * N4 * Penc(time, N2))=>
      ! !_4 <= N3 new r: keyseed; (
  () -> pkgen2(r),
  ! !_5 <= N2 (m: bitstring) -> find j <= N4 suchthat defined(m2[j], y[j], x[j]) && ((y[j] = pkgen2(r)) && (m = m2[j])) then injbot1(x[j]) else dec2(m, skgen2(r))), ! !_6 <= N4 new r2: seed; new r3: seed; (x_49: blocksize, y_48: pkey) -> let x: blocksize = x_49 in let y: pkey = y_48 in find k <= N3 suchthat defined(r[k]) && (y = pkgen2(r[k])) then let m2: bitstring = enc2(Z, y, r2) in m2 else enc(x, y, r3)

Doing remove assignments of binder Qkey
Doing SA rename Qkey
Doing remove assignments of binder Qkey_296
Doing remove assignments of binder Qkey_295
Doing equivalence
equiv ! !_19 <= N2 new r: symkeyseed; (
  ! !_20 <= N new r2: symseed; (x: maxenc) -> encsym(x, kgen(r), r2),
  ! !_21 <= N3 (y: maxmac) -> decsym(y, kgen(r)))
<=(N2 * Pencctxt(time, N, N3))=>
      ! !_22 <= N2 new r: symkeyseed; (
  ! !_23 <= N new r2: symseed; (x_46: maxenc) -> let x: maxenc = x_46 in let z: maxmac = encsym(x, kgen2(r), r2) in z,
  ! !_24 <= N3 (y: maxmac) -> find j <= N suchthat defined(x[j], r2[j], z[j]) && (z[j] = y) then injbot2(x[j]) else bottom)
with r4_103
Doing remove assignments of binder AK_35
Doing equivalence
equiv ! !_19 <= N2 new r: symkeyseed; (
  ! !_20 <= N new r2: symseed; (x: maxenc) -> encsym(x, kgen(r), r2),
  ! !_21 <= N3 (y: maxmac) -> decsym(y, kgen(r)))
<=(N2 * Pencctxt(time, N, N3))=>
      ! !_22 <= N2 new r: symkeyseed; (
  ! !_23 <= N new r2: symseed; (x_46: maxenc) -> let x: maxenc = x_46 in let z: maxmac = encsym(x, kgen2(r), r2) in z,
  ! !_24 <= N3 (y: maxmac) -> find j <= N suchthat defined(x[j], r2[j], z[j]) && (z[j] = y) then injbot2(x[j]) else bottom)
with s3_100
Doing remove assignments of binder Qkey
Doing SA rename Qkey
Doing remove assignments of binder Qkey_322
Doing remove assignments of binder Qkey_321
Doing equivalence
equiv ! !_19 <= N2 new r: symkeyseed; (
  ! !_20 <= N new r2: symseed; (x: maxenc) -> encsym(x, kgen(r), r2),
  ! !_21 <= N3 (y: maxmac) -> decsym(y, kgen(r)))
<=(N2 * Pencctxt(time, N, N3))=>
      ! !_22 <= N2 new r: symkeyseed; (
  ! !_23 <= N new r2: symseed; (x_46: maxenc) -> let x: maxenc = x_46 in let z: maxmac = encsym(x, kgen2(r), r2) in z,
  ! !_24 <= N3 (y: maxmac) -> find j <= N suchthat defined(x[j], r2[j], z[j]) && (z[j] = y) then injbot2(x[j]) else bottom)
with r4_95
Doing remove assignments of binder AK_35
Doing equivalence
equiv ! !_19 <= N2 new r: symkeyseed; (
  ! !_20 <= N new r2: symseed; (x: maxenc) -> encsym(x, kgen(r), r2),
  ! !_21 <= N3 (y: maxmac) -> decsym(y, kgen(r)))
<=(N2 * Pencctxt(time, N, N3))=>
      ! !_22 <= N2 new r: symkeyseed; (
  ! !_23 <= N new r2: symseed; (x_46: maxenc) -> let x: maxenc = x_46 in let z: maxmac = encsym(x, kgen2(r), r2) in z,
  ! !_24 <= N3 (y: maxmac) -> find j <= N suchthat defined(x[j], r2[j], z[j]) && (z[j] = y) then injbot2(x[j]) else bottom)
with s3_92
Doing remove assignments of binder Kt
Doing equivalence
equiv ! !_19 <= N2 new r: symkeyseed; (
  ! !_20 <= N new r2: symseed; (x: maxenc) -> encsym(x, kgen(r), r2),
  ! !_21 <= N3 (y: maxmac) -> decsym(y, kgen(r)))
<=(N2 * Pencctxt(time, N, N3))=>
      ! !_22 <= N2 new r: symkeyseed; (
  ! !_23 <= N new r2: symseed; (x_46: maxenc) -> let x: maxenc = x_46 in let z: maxmac = encsym(x, kgen2(r), r2) in z,
  ! !_24 <= N3 (y: maxmac) -> find j <= N suchthat defined(x[j], r2[j], z[j]) && (z[j] = y) then injbot2(x[j]) else bottom)
with rKt
Doing remove assignments of binder Qkey
Doing SA rename Qkey
Doing remove assignments of binder Qkey_348
Doing remove assignments of binder Qkey_347
Doing equivalence
equiv ! !_19 <= N2 new r: symkeyseed; (
  ! !_20 <= N new r2: symseed; (x: maxenc) -> encsym(x, kgen(r), r2),
  ! !_21 <= N3 (y: maxmac) -> decsym(y, kgen(r)))
<=(N2 * Pencctxt(time, N, N3))=>
      ! !_22 <= N2 new r: symkeyseed; (
  ! !_23 <= N new r2: symseed; (x_46: maxenc) -> let x: maxenc = x_46 in let z: maxmac = encsym(x, kgen2(r), r2) in z,
  ! !_24 <= N3 (y: maxmac) -> find j <= N suchthat defined(x[j], r2[j], z[j]) && (z[j] = y) then injbot2(x[j]) else bottom)
with rKt
Doing simplify
Run simplify 1 time(s). Fixpoint reached.
Doing move new all binders
Doing remove assignments of useless
Doing equivalence
equiv ! !_25 <= N3 new r: mkeyseed; (
  ! !_26 <= N (x: maxmac) -> mac(x, mkgen(r)),
  ! !_27 <= N2 (m: maxmac, ma: macs) -> checkmac(m, mkgen(r), ma))
<=(N3 * Pmac(time, N, N2))=>
      ! !_28 <= N3 new r: mkeyseed; (
  ! !_29 <= N (x_45: maxmac) -> let x: maxmac = x_45 in mac2(x, mkgen2(r)),
  ! !_30 <= N2 (m: maxmac, ma: macs) -> find j <= N suchthat defined(x[j]) && ((m = x[j]) && (ma = mac2(x[j], mkgen2(r)))) then true else false)

Doing equivalence
equiv ! !_19 <= N2 new r: symkeyseed; (
  ! !_20 <= N new r2: symseed; (x: maxenc) -> encsym(x, kgen(r), r2),
  ! !_21 <= N3 (y: maxmac) -> decsym(y, kgen(r)))
<=(N2 * Pencctxt(time, N, N3))=>
      ! !_22 <= N2 new r: symkeyseed; (
  ! !_23 <= N new r2: symseed; (x_46: maxenc) -> let x: maxenc = x_46 in let z: maxmac = encsym(x, kgen2(r), r2) in z,
  ! !_24 <= N3 (y: maxmac) -> find j <= N suchthat defined(x[j], r2[j], z[j]) && (z[j] = y) then injbot2(x[j]) else bottom)

Doing equivalence
equiv ! !_15 <= N2 new r: symkeyseed; ! !_16 <= N new r2: symseed; (x: maxenc) -> encsym(x, kgen2(r), r2)
<=(N2 * Penc(time, N))=>
      ! !_17 <= N2 new r: symkeyseed; ! !_18 <= N new r2: symseed; (x: maxenc) -> encsym2(Z2(x), kgen2(r), r2)

Doing simplify
Run simplify 2 time(s). Fixpoint reached.
Doing move new all binders
Doing remove assignments of useless
Doing equivalence
equiv ! !_25 <= N3 new r: mkeyseed; (
  ! !_26 <= N (x: maxmac) -> mac(x, mkgen(r)),
  ! !_27 <= N2 (m: maxmac, ma: macs) -> checkmac(m, mkgen(r), ma))
<=(N3 * Pmac(time, N, N2))=>
      ! !_28 <= N3 new r: mkeyseed; (
  ! !_29 <= N (x_45: maxmac) -> let x: maxmac = x_45 in mac2(x, mkgen2(r)),
  ! !_30 <= N2 (m: maxmac, ma: macs) -> find j <= N suchthat defined(x[j]) && ((m = x[j]) && (ma = mac2(x[j], mkgen2(r)))) then true else false)

Doing equivalence
equiv ! !_19 <= N2 new r: symkeyseed; (
  ! !_20 <= N new r2: symseed; (x: maxenc) -> encsym(x, kgen(r), r2),
  ! !_21 <= N3 (y: maxmac) -> decsym(y, kgen(r)))
<=(N2 * Pencctxt(time, N, N3))=>
      ! !_22 <= N2 new r: symkeyseed; (
  ! !_23 <= N new r2: symseed; (x_46: maxenc) -> let x: maxenc = x_46 in let z: maxmac = encsym(x, kgen2(r), r2) in z,
  ! !_24 <= N3 (y: maxmac) -> find j <= N suchthat defined(x[j], r2[j], z[j]) && (z[j] = y) then injbot2(x[j]) else bottom)

Doing equivalence
equiv ! !_15 <= N2 new r: symkeyseed; ! !_16 <= N new r2: symseed; (x: maxenc) -> encsym(x, kgen2(r), r2)
<=(N2 * Penc(time, N))=>
      ! !_17 <= N2 new r: symkeyseed; ! !_18 <= N new r2: symseed; (x: maxenc) -> encsym2(Z2(x), kgen2(r), r2)

Doing equivalence
equiv ! !_7 <= N3 new r: skeyseed; (
  () -> spkgen(r),
  ! !_8 <= N2 new r2: sseed; (x: sblocksize) -> sign(x, sskgen(r), r2)), ! !_9 <= N4 (m: sblocksize, y: spkey, si: signature) -> check(m, y, si) [all]
<=(N3 * Psign(time, N2))=>
      ! !_10 <= N3 new r: skeyseed; (
  () -> spkgen2(r),
  ! !_11 <= N2 new r2: sseed; (x_47: sblocksize) -> let x: sblocksize = x_47 in sign2(x, sskgen2(r), r2)), ! !_12 <= N4 (m: sblocksize, y: spkey, si: signature) -> find j <= N2, k_14 <= N3 suchthat defined(x[j, k_14], r[k_14]) && ((y = spkgen2(r[k_14])) && ((m = x[j, k_14]) && check2(m, y, si))) then true else find k_13 <= N3 suchthat defined(r[k_13]) && (y = spkgen2(r[k_13])) then false else check(m, y, si)

Doing equivalence
equiv ! !_1 <= N3 new r: keyseed; (
  () -> pkgen(r),
  ! !_2 <= N2 (m: bitstring) -> dec(m, skgen(r))), ! !_3 <= N4 new r2: seed; (x: blocksize, y: pkey) -> enc(x, y, r2) [all]
<=(N3 * N4 * Penc(time, N2))=>
      ! !_4 <= N3 new r: keyseed; (
  () -> pkgen2(r),
  ! !_5 <= N2 (m: bitstring) -> find j <= N4 suchthat defined(m2[j], y[j], x[j]) && ((y[j] = pkgen2(r)) && (m = m2[j])) then injbot1(x[j]) else dec2(m, skgen2(r))), ! !_6 <= N4 new r2: seed; new r3: seed; (x_49: blocksize, y_48: pkey) -> let x: blocksize = x_49 in let y: pkey = y_48 in find k <= N3 suchthat defined(r[k]) && (y = pkgen2(r[k])) then let m2: bitstring = enc2(Z, y, r2) in m2 else enc(x, y, r3)

Doing remove assignments of binder Lkey
Doing remove assignments of binder AK_35
Doing equivalence
equiv ! !_19 <= N2 new r: symkeyseed; (
  ! !_20 <= N new r2: symseed; (x: maxenc) -> encsym(x, kgen(r), r2),
  ! !_21 <= N3 (y: maxmac) -> decsym(y, kgen(r)))
<=(N2 * Pencctxt(time, N, N3))=>
      ! !_22 <= N2 new r: symkeyseed; (
  ! !_23 <= N new r2: symseed; (x_46: maxenc) -> let x: maxenc = x_46 in let z: maxmac = encsym(x, kgen2(r), r2) in z,
  ! !_24 <= N3 (y: maxmac) -> find j <= N suchthat defined(x[j], r2[j], z[j]) && (z[j] = y) then injbot2(x[j]) else bottom)
with s3_361
Doing remove assignments of binder Lkey
Doing remove assignments of binder AK_35
Doing equivalence
equiv ! !_19 <= N2 new r: symkeyseed; (
  ! !_20 <= N new r2: symseed; (x: maxenc) -> encsym(x, kgen(r), r2),
  ! !_21 <= N3 (y: maxmac) -> decsym(y, kgen(r)))
<=(N2 * Pencctxt(time, N, N3))=>
      ! !_22 <= N2 new r: symkeyseed; (
  ! !_23 <= N new r2: symseed; (x_46: maxenc) -> let x: maxenc = x_46 in let z: maxmac = encsym(x, kgen2(r), r2) in z,
  ! !_24 <= N3 (y: maxmac) -> find j <= N suchthat defined(x[j], r2[j], z[j]) && (z[j] = y) then injbot2(x[j]) else bottom)
with s3_349
Doing remove assignments of binder Lkey
Doing remove assignments of binder Lkey
Initial state
Game 1 is
in(start, ());
new rkC: keyseed;
let pkC: pkey = pkgen(rkC) in
let skC: skey = skgen(rkC) in
new rkCs: skeyseed;
let spkC: spkey = spkgen(rkCs) in
let sskC: sskey = sskgen(rkCs) in
new rkK: keyseed;
let pkK: pkey = pkgen(rkK) in
let skK: skey = skgen(rkK) in
new rkKs: skeyseed;
let spkK: spkey = spkgen(rkKs) in
let sskK: sskey = sskgen(rkKs) in
new rkCA: skeyseed;
let pkCA: spkey = spkgen(rkCA) in
let skCA: sskey = sskgen(rkCA) in
new rKt: symkeyseed;
let Kt: key = kgen(rKt) in
new rKs: symkeyseed;
let Ks: key = kgen(rKs) in
new q1: sseed;
new q2: sseed;
let certC: signature = sign(concat1(C, pkC, spkC), skCA, q1) in
let certK: signature = sign(concat7(K, pkK, spkK), skCA, q2) in
out(c25, (pkC, spkC, spkK, pkCA));
(
  (
    (
      ! !_31 <= N
      in(c1[!_31], hostT: tgs);
      new n1: nonce;
      new n2: nonce;
      new r1: sseed;
      new tc0: timest;
      out(c2[!_31], (C, pkC, spkC, certC, tc0, n2, sign(padno(tc0, n2), sskC, r1), C, hostT, n1));
      in(c3[!_31], (m21: bitstring, =C, TGT_38: maxmac, m24: maxmac));
      let injbot1(concat2(hostZ: kas, pkZ: pkey, spkZ: spkey, ms1: signature, k3: key, k4: mkey, ck1: macs, ms2: signature)) = dec(m21, skC) in
      if check(concat7(hostZ, pkZ, spkZ), pkCA, ms1) then
      if check(concat3(k3, k4, ck1), spkK, ms2) then
      let y': maxmac = concat6(C, pkC, spkC, certC, tc0, n2, sign(padno(tc0, n2), sskC, r1), C, hostT, n1) in
      if checkmac(y', k4, ck1) then
      let injbot2(concat4(AK_40: key, =n1, tk_39: timest, =hostT)) = decsym(m24, k3) in
      event fullCK(hostZ, hostT, n1, m21, TGT_38, m24);
      out(c18[!_31], acceptC1(hostZ, hostT))
    |
      ! !_32 <= N
      in(c22[!_32], (hostY: client, pkY: pkey, spkY: spkey, ms3: signature, tc1: timest, n4: nonce, ms4: signature, hostV: client, hostW: tgs, n5: nonce));
      if (hostV = hostY) then
      if check(concat1(hostY, pkY, spkY), pkCA, ms3) then
      if check(padno(tc1, n4), spkY, ms4) then
      find j1 <= N2 suchthat defined(Lhost[j1], Qkey[j1]) && (Lhost[j1] = hostW) then
      new s3: symkeyseed;
      let AK_35: key = kgen(s3) in
      new s1: symkeyseed;
      let k1: key = kgen(s1) in
      new s2: mkeyseed;
      let k2: mkey = mkgen(s2) in
      new tk_36: timest;
      new r4: symseed;
      let TGT_37: maxmac = encsym(concat5(AK_35, tk_36, hostY), Qkey[j1], r4) in
      new r5: symseed;
      let e24: maxmac = encsym(concat4(AK_35, n5, tk_36, hostW), k1, r5) in
      new r6: sseed;
      let y: maxmac = concat6(hostY, pkY, spkY, ms3, tc1, n4, ms4, hostY, hostW, n5) in
      let ck: macs = mac(y, k2) in
      let ms21: signature = sign(concat3(k1, k2, ck), sskK, r6) in
      new r7: seed;
      let e21: bitstring = enc(concat2(K, pkK, spkK, certK, k1, k2, ck, ms21), pkY, r7) in
      let m5: bitstring = (e21, hostY, TGT_37, e24) in
      event fullKC(hostY, hostW, n5, e21, TGT_37, e24);
      out(c23[!_32], m5)
    )
  |
    ! !_33 <= N2
    in(c21[!_33], (Lhost: tgs, Lkey: key));
    let Qkey: key = if (Lhost = T) then Kt else Lkey
  )
|
  ! !_34 <= N2
  in(c16[!_34], (Mhost1: tgs, Mhost2: server, Mkey: key));
  let Pkey: key = if ((Mhost1 = T) && (Mhost2 = S)) then Ks else Mkey
)


Applying expand if, let, find yields

Game 2 is
in(start, ());
new rkC: keyseed;
let pkC: pkey = pkgen(rkC) in
let skC: skey = skgen(rkC) in
new rkCs: skeyseed;
let spkC: spkey = spkgen(rkCs) in
let sskC: sskey = sskgen(rkCs) in
new rkK: keyseed;
let pkK: pkey = pkgen(rkK) in
let skK: skey = skgen(rkK) in
new rkKs: skeyseed;
let spkK: spkey = spkgen(rkKs) in
let sskK: sskey = sskgen(rkKs) in
new rkCA: skeyseed;
let pkCA: spkey = spkgen(rkCA) in
let skCA: sskey = sskgen(rkCA) in
new rKt: symkeyseed;
let Kt: key = kgen(rKt) in
new rKs: symkeyseed;
let Ks: key = kgen(rKs) in
new q1: sseed;
new q2: sseed;
let certC: signature = sign(concat1(C, pkC, spkC), skCA, q1) in
let certK: signature = sign(concat7(K, pkK, spkK), skCA, q2) in
out(c25, (pkC, spkC, spkK, pkCA));
(
  (
    (
      ! !_31 <= N
      in(c1[!_31], hostT: tgs);
      new n1: nonce;
      new n2: nonce;
      new r1: sseed;
      new tc0: timest;
      out(c2[!_31], (C, pkC, spkC, certC, tc0, n2, sign(padno(tc0, n2), sskC, r1), C, hostT, n1));
      in(c3[!_31], (m21: bitstring, =C, TGT_38: maxmac, m24: maxmac));
      let injbot1(concat2(hostZ: kas, pkZ: pkey, spkZ: spkey, ms1: signature, k3: key, k4: mkey, ck1: macs, ms2: signature)) = dec(m21, skC) in
      if check(concat7(hostZ, pkZ, spkZ), pkCA, ms1) then
      if check(concat3(k3, k4, ck1), spkK, ms2) then
      let y': maxmac = concat6(C, pkC, spkC, certC, tc0, n2, sign(padno(tc0, n2), sskC, r1), C, hostT, n1) in
      if checkmac(y', k4, ck1) then
      let injbot2(concat4(AK_40: key, =n1, tk_39: timest, =hostT)) = decsym(m24, k3) in
      event fullCK(hostZ, hostT, n1, m21, TGT_38, m24);
      out(c18[!_31], acceptC1(hostZ, hostT))
    |
      ! !_32 <= N
      in(c22[!_32], (hostY: client, pkY: pkey, spkY: spkey, ms3: signature, tc1: timest, n4: nonce, ms4: signature, hostV: client, hostW: tgs, n5: nonce));
      if (hostV = hostY) then
      if check(concat1(hostY, pkY, spkY), pkCA, ms3) then
      if check(padno(tc1, n4), spkY, ms4) then
      find j1 <= N2 suchthat defined(Lhost[j1], Qkey[j1]) && (Lhost[j1] = hostW) then
      new s3: symkeyseed;
      let AK_35: key = kgen(s3) in
      new s1: symkeyseed;
      let k1: key = kgen(s1) in
      new s2: mkeyseed;
      let k2: mkey = mkgen(s2) in
      new tk_36: timest;
      new r4: symseed;
      let TGT_37: maxmac = encsym(concat5(AK_35, tk_36, hostY), Qkey[j1], r4) in
      new r5: symseed;
      let e24: maxmac = encsym(concat4(AK_35, n5, tk_36, hostW), k1, r5) in
      new r6: sseed;
      let y: maxmac = concat6(hostY, pkY, spkY, ms3, tc1, n4, ms4, hostY, hostW, n5) in
      let ck: macs = mac(y, k2) in
      let ms21: signature = sign(concat3(k1, k2, ck), sskK, r6) in
      new r7: seed;
      let e21: bitstring = enc(concat2(K, pkK, spkK, certK, k1, k2, ck, ms21), pkY, r7) in
      let m5: bitstring = (e21, hostY, TGT_37, e24) in
      event fullKC(hostY, hostW, n5, e21, TGT_37, e24);
      out(c23[!_32], m5)
    )
  |
    ! !_33 <= N2
    in(c21[!_33], (Lhost: tgs, Lkey: key));
    if (Lhost = T) then
      let Qkey: key = Kt
    else
      let Qkey: key = Lkey
  )
|
  ! !_34 <= N2
  in(c16[!_34], (Mhost1: tgs, Mhost2: server, Mkey: key));
  if ((Mhost1 = T) && (Mhost2 = S)) then
    let Pkey: key = Ks
  else
    let Pkey: key = Mkey
)


Applying move new all binders yields

Game 3 is
in(start, ());
new rkC: keyseed;
let pkC: pkey = pkgen(rkC) in
let skC: skey = skgen(rkC) in
new rkCs: skeyseed;
let spkC: spkey = spkgen(rkCs) in
let sskC: sskey = sskgen(rkCs) in
new rkK: keyseed;
let pkK: pkey = pkgen(rkK) in
let skK: skey = skgen(rkK) in
new rkKs: skeyseed;
let spkK: spkey = spkgen(rkKs) in
let sskK: sskey = sskgen(rkKs) in
new rkCA: skeyseed;
let pkCA: spkey = spkgen(rkCA) in
let skCA: sskey = sskgen(rkCA) in
new rKt: symkeyseed;
let Kt: key = kgen(rKt) in
new rKs: symkeyseed;
let Ks: key = kgen(rKs) in
new q1: sseed;
let certC: signature = sign(concat1(C, pkC, spkC), skCA, q1) in
new q2: sseed;
let certK: signature = sign(concat7(K, pkK, spkK), skCA, q2) in
out(c25, (pkC, spkC, spkK, pkCA));
(
  (
    (
      ! !_31 <= N
      in(c1[!_31], hostT: tgs);
      new tc0: timest;
      new r1: sseed;
      new n2: nonce;
      new n1: nonce;
      out(c2[!_31], (C, pkC, spkC, certC, tc0, n2, sign(padno(tc0, n2), sskC, r1), C, hostT, n1));
      in(c3[!_31], (m21: bitstring, =C, TGT_38: maxmac, m24: maxmac));
      let injbot1(concat2(hostZ: kas, pkZ: pkey, spkZ: spkey, ms1: signature, k3: key, k4: mkey, ck1: macs, ms2: signature)) = dec(m21, skC) in
      if check(concat7(hostZ, pkZ, spkZ), pkCA, ms1) then
      if check(concat3(k3, k4, ck1), spkK, ms2) then
      let y': maxmac = concat6(C, pkC, spkC, certC, tc0, n2, sign(padno(tc0, n2), sskC, r1), C, hostT, n1) in
      if checkmac(y', k4, ck1) then
      let injbot2(concat4(AK_40: key, =n1, tk_39: timest, =hostT)) = decsym(m24, k3) in
      event fullCK(hostZ, hostT, n1, m21, TGT_38, m24);
      out(c18[!_31], acceptC1(hostZ, hostT))
    |
      ! !_32 <= N
      in(c22[!_32], (hostY: client, pkY: pkey, spkY: spkey, ms3: signature, tc1: timest, n4: nonce, ms4: signature, hostV: client, hostW: tgs, n5: nonce));
      if (hostV = hostY) then
      if check(concat1(hostY, pkY, spkY), pkCA, ms3) then
      if check(padno(tc1, n4), spkY, ms4) then
      find j1 <= N2 suchthat defined(Lhost[j1], Qkey[j1]) && (Lhost[j1] = hostW) then
      new s3: symkeyseed;
      let AK_35: key = kgen(s3) in
      new s1: symkeyseed;
      let k1: key = kgen(s1) in
      new s2: mkeyseed;
      let k2: mkey = mkgen(s2) in
      new r4: symseed;
      new tk_36: timest;
      let TGT_37: maxmac = encsym(concat5(AK_35, tk_36, hostY), Qkey[j1], r4) in
      new r5: symseed;
      let e24: maxmac = encsym(concat4(AK_35, n5, tk_36, hostW), k1, r5) in
      let y: maxmac = concat6(hostY, pkY, spkY, ms3, tc1, n4, ms4, hostY, hostW, n5) in
      let ck: macs = mac(y, k2) in
      new r6: sseed;
      let ms21: signature = sign(concat3(k1, k2, ck), sskK, r6) in
      new r7: seed;
      let e21: bitstring = enc(concat2(K, pkK, spkK, certK, k1, k2, ck, ms21), pkY, r7) in
      let m5: bitstring = (e21, hostY, TGT_37, e24) in
      event fullKC(hostY, hostW, n5, e21, TGT_37, e24);
      out(c23[!_32], m5)
    )
  |
    ! !_33 <= N2
    in(c21[!_33], (Lhost: tgs, Lkey: key));
    if (Lhost = T) then
      let Qkey: key = Kt
    else
      let Qkey: key = Lkey
  )
|
  ! !_34 <= N2
  in(c16[!_34], (Mhost1: tgs, Mhost2: server, Mkey: key));
  if ((Mhost1 = T) && (Mhost2 = S)) then
    let Pkey: key = Ks
  else
    let Pkey: key = Mkey
)


Applying remove assignments of useless yields

Game 4 is
in(start, ());
new rkC: keyseed;
let pkC: pkey = pkgen(rkC) in
let skC: skey = skgen(rkC) in
new rkCs: skeyseed;
let spkC: spkey = spkgen(rkCs) in
let sskC: sskey = sskgen(rkCs) in
new rkK: keyseed;
let pkK: pkey = pkgen(rkK) in
new rkKs: skeyseed;
let spkK: spkey = spkgen(rkKs) in
let sskK: sskey = sskgen(rkKs) in
new rkCA: skeyseed;
let pkCA: spkey = spkgen(rkCA) in
let skCA: sskey = sskgen(rkCA) in
new rKt: symkeyseed;
let Kt: key = kgen(rKt) in
new rKs: symkeyseed;
new q1: sseed;
let certC: signature = sign(concat1(C, pkC, spkC), skCA, q1) in
new q2: sseed;
let certK: signature = sign(concat7(K, pkK, spkK), skCA, q2) in
out(c25, (pkC, spkC, spkK, pkCA));
(
  (
    (
      ! !_31 <= N
      in(c1[!_31], hostT: tgs);
      new tc0: timest;
      new r1: sseed;
      new n2: nonce;
      new n1: nonce;
      out(c2[!_31], (C, pkC, spkC, certC, tc0, n2, sign(padno(tc0, n2), sskC, r1), C, hostT, n1));
      in(c3[!_31], (m21: bitstring, =C, TGT_38: maxmac, m24: maxmac));
      let injbot1(concat2(hostZ: kas, pkZ: pkey, spkZ: spkey, ms1: signature, k3: key, k4: mkey, ck1: macs, ms2: signature)) = dec(m21, skC) in
      if check(concat7(hostZ, pkZ, spkZ), pkCA, ms1) then
      if check(concat3(k3, k4, ck1), spkK, ms2) then
      let y': maxmac = concat6(C, pkC, spkC, certC, tc0, n2, sign(padno(tc0, n2), sskC, r1), C, hostT, n1) in
      if checkmac(y', k4, ck1) then
      let injbot2(concat4(AK_40: key, =n1, tk_39: timest, =hostT)) = decsym(m24, k3) in
      event fullCK(hostZ, hostT, n1, m21, TGT_38, m24);
      out(c18[!_31], acceptC1(hostZ, hostT))
    |
      ! !_32 <= N
      in(c22[!_32], (hostY: client, pkY: pkey, spkY: spkey, ms3: signature, tc1: timest, n4: nonce, ms4: signature, hostV: client, hostW: tgs, n5: nonce));
      if (hostV = hostY) then
      if check(concat1(hostY, pkY, spkY), pkCA, ms3) then
      if check(padno(tc1, n4), spkY, ms4) then
      find j1 <= N2 suchthat defined(Lhost[j1], Qkey[j1]) && (Lhost[j1] = hostW) then
      new s3: symkeyseed;
      let AK_35: key = kgen(s3) in
      new s1: symkeyseed;
      let k1: key = kgen(s1) in
      new s2: mkeyseed;
      let k2: mkey = mkgen(s2) in
      new r4: symseed;
      new tk_36: timest;
      let TGT_37: maxmac = encsym(concat5(AK_35, tk_36, hostY), Qkey[j1], r4) in
      new r5: symseed;
      let e24: maxmac = encsym(concat4(AK_35, n5, tk_36, hostW), k1, r5) in
      let y: maxmac = concat6(hostY, pkY, spkY, ms3, tc1, n4, ms4, hostY, hostW, n5) in
      let ck: macs = mac(y, k2) in
      new r6: sseed;
      let ms21: signature = sign(concat3(k1, k2, ck), sskK, r6) in
      new r7: seed;
      let e21: bitstring = enc(concat2(K, pkK, spkK, certK, k1, k2, ck, ms21), pkY, r7) in
      let m5: bitstring = (e21, hostY, TGT_37, e24) in
      event fullKC(hostY, hostW, n5, e21, TGT_37, e24);
      out(c23[!_32], m5)
    )
  |
    ! !_33 <= N2
    in(c21[!_33], (Lhost: tgs, Lkey: key));
    if (Lhost = T) then
      let Qkey: key = Kt
    else
      let Qkey: key = Lkey
  )
|
  ! !_34 <= N2
  in(c16[!_34], (Mhost1: tgs, Mhost2: server, Mkey: key));
  if ((Mhost1 = T) && (Mhost2 = S)) then
  yield
)


Applying remove assignments of binder skCA yields

Game 5 is
in(start, ());
new rkC: keyseed;
let pkC: pkey = pkgen(rkC) in
let skC: skey = skgen(rkC) in
new rkCs: skeyseed;
let spkC: spkey = spkgen(rkCs) in
let sskC: sskey = sskgen(rkCs) in
new rkK: keyseed;
let pkK: pkey = pkgen(rkK) in
new rkKs: skeyseed;
let spkK: spkey = spkgen(rkKs) in
let sskK: sskey = sskgen(rkKs) in
new rkCA: skeyseed;
let pkCA: spkey = spkgen(rkCA) in
new rKt: symkeyseed;
let Kt: key = kgen(rKt) in
new rKs: symkeyseed;
new q1: sseed;
let certC: signature = sign(concat1(C, pkC, spkC), sskgen(rkCA), q1) in
new q2: sseed;
let certK: signature = sign(concat7(K, pkK, spkK), sskgen(rkCA), q2) in
out(c25, (pkC, spkC, spkK, pkCA));
(
  (
    (
      ! !_31 <= N
      in(c1[!_31], hostT: tgs);
      new tc0: timest;
      new r1: sseed;
      new n2: nonce;
      new n1: nonce;
      out(c2[!_31], (C, pkC, spkC, certC, tc0, n2, sign(padno(tc0, n2), sskC, r1), C, hostT, n1));
      in(c3[!_31], (m21: bitstring, =C, TGT_38: maxmac, m24: maxmac));
      let injbot1(concat2(hostZ: kas, pkZ: pkey, spkZ: spkey, ms1: signature, k3: key, k4: mkey, ck1: macs, ms2: signature)) = dec(m21, skC) in
      if check(concat7(hostZ, pkZ, spkZ), pkCA, ms1) then
      if check(concat3(k3, k4, ck1), spkK, ms2) then
      let y': maxmac = concat6(C, pkC, spkC, certC, tc0, n2, sign(padno(tc0, n2), sskC, r1), C, hostT, n1) in
      if checkmac(y', k4, ck1) then
      let injbot2(concat4(AK_40: key, =n1, tk_39: timest, =hostT)) = decsym(m24, k3) in
      event fullCK(hostZ, hostT, n1, m21, TGT_38, m24);
      out(c18[!_31], acceptC1(hostZ, hostT))
    |
      ! !_32 <= N
      in(c22[!_32], (hostY: client, pkY: pkey, spkY: spkey, ms3: signature, tc1: timest, n4: nonce, ms4: signature, hostV: client, hostW: tgs, n5: nonce));
      if (hostV = hostY) then
      if check(concat1(hostY, pkY, spkY), pkCA, ms3) then
      if check(padno(tc1, n4), spkY, ms4) then
      find j1 <= N2 suchthat defined(Lhost[j1], Qkey[j1]) && (Lhost[j1] = hostW) then
      new s3: symkeyseed;
      let AK_35: key = kgen(s3) in
      new s1: symkeyseed;
      let k1: key = kgen(s1) in
      new s2: mkeyseed;
      let k2: mkey = mkgen(s2) in
      new r4: symseed;
      new tk_36: timest;
      let TGT_37: maxmac = encsym(concat5(AK_35, tk_36, hostY), Qkey[j1], r4) in
      new r5: symseed;
      let e24: maxmac = encsym(concat4(AK_35, n5, tk_36, hostW), k1, r5) in
      let y: maxmac = concat6(hostY, pkY, spkY, ms3, tc1, n4, ms4, hostY, hostW, n5) in
      let ck: macs = mac(y, k2) in
      new r6: sseed;
      let ms21: signature = sign(concat3(k1, k2, ck), sskK, r6) in
      new r7: seed;
      let e21: bitstring = enc(concat2(K, pkK, spkK, certK, k1, k2, ck, ms21), pkY, r7) in
      let m5: bitstring = (e21, hostY, TGT_37, e24) in
      event fullKC(hostY, hostW, n5, e21, TGT_37, e24);
      out(c23[!_32], m5)
    )
  |
    ! !_33 <= N2
    in(c21[!_33], (Lhost: tgs, Lkey: key));
    if (Lhost = T) then
      let Qkey: key = Kt
    else
      let Qkey: key = Lkey
  )
|
  ! !_34 <= N2
  in(c16[!_34], (Mhost1: tgs, Mhost2: server, Mkey: key));
  if ((Mhost1 = T) && (Mhost2 = S)) then
  yield
)


Applying equivalence
equiv ! !_7 <= N3 new r: skeyseed; (
  () -> spkgen(r),
  ! !_8 <= N2 new r2: sseed; (x: sblocksize) -> sign(x, sskgen(r), r2)), ! !_9 <= N4 (m: sblocksize, y: spkey, si: signature) -> check(m, y, si) [all]
<=(N3 * Psign(time, N2))=>
      ! !_10 <= N3 new r: skeyseed; (
  () -> spkgen2(r),
  ! !_11 <= N2 new r2: sseed; (x_47: sblocksize) -> let x: sblocksize = x_47 in sign2(x, sskgen2(r), r2)), ! !_12 <= N4 (m: sblocksize, y: spkey, si: signature) -> find j <= N2, k_14 <= N3 suchthat defined(x[j, k_14], r[k_14]) && ((y = spkgen2(r[k_14])) && ((m = x[j, k_14]) && check2(m, y, si))) then true else find k_13 <= N3 suchthat defined(r[k_13]) && (y = spkgen2(r[k_13])) then false else check(m, y, si)
with rkCA [Difference of probability Psign(time + time(context for game 5), 2. * 1.)] yields

Game 6 is
in(start, ());
new rkC: keyseed;
let pkC: pkey = pkgen(rkC) in
let skC: skey = skgen(rkC) in
new rkCs: skeyseed;
let spkC: spkey = spkgen(rkCs) in
let sskC: sskey = sskgen(rkCs) in
new rkK: keyseed;
let pkK: pkey = pkgen(rkK) in
new rkKs: skeyseed;
let spkK: spkey = spkgen(rkKs) in
let sskK: sskey = sskgen(rkKs) in
new rkCA: skeyseed;
let pkCA: spkey = spkgen2(rkCA) in
new rKt: symkeyseed;
let Kt: key = kgen(rKt) in
new rKs: symkeyseed;
new q1: sseed;
let x_53: sblocksize = concat1(C, pkC, spkC) in
let certC: signature = sign2(x_53, sskgen2(rkCA), q1) in
new q2: sseed;
let x_52: sblocksize = concat7(K, pkK, spkK) in
let certK: signature = sign2(x_52, sskgen2(rkCA), q2) in
out(c25, (pkC, spkC, spkK, pkCA));
(
  (
    (
      ! !_31 <= N
      in(c1[!_31], hostT: tgs);
      new tc0: timest;
      new r1: sseed;
      new n2: nonce;
      new n1: nonce;
      out(c2[!_31], (C, pkC, spkC, certC, tc0, n2, sign(padno(tc0, n2), sskC, r1), C, hostT, n1));
      in(c3[!_31], (m21: bitstring, =C, TGT_38: maxmac, m24: maxmac));
      let injbot1(concat2(hostZ: kas, pkZ: pkey, spkZ: spkey, ms1: signature, k3: key, k4: mkey, ck1: macs, ms2: signature)) = dec(m21, skC) in
      find  suchthat defined(x_52, rkCA) && ((pkCA = spkgen2(rkCA)) && ((concat7(hostZ, pkZ, spkZ) = x_52) && check2(concat7(hostZ, pkZ, spkZ), pkCA, ms1))) then
        if true then
        find  suchthat defined(x_52, rkCA) && ((spkK = spkgen2(rkCA)) && ((concat3(k3, k4, ck1) = x_52) && check2(concat3(k3, k4, ck1), spkK, ms2))) then
          if true then
          let y': maxmac = concat6(C, pkC, spkC, certC, tc0, n2, sign(padno(tc0, n2), sskC, r1), C, hostT, n1) in
          if checkmac(y', k4, ck1) then
          let injbot2(concat4(AK_40: key, =n1, tk_39: timest, =hostT)) = decsym(m24, k3) in
          event fullCK(hostZ, hostT, n1, m21, TGT_38, m24);
          out(c18[!_31], acceptC1(hostZ, hostT))
        orfind  suchthat defined(x_53, rkCA) && ((spkK = spkgen2(rkCA)) && ((concat3(k3, k4, ck1) = x_53) && check2(concat3(k3, k4, ck1), spkK, ms2))) then
          if true then
          let y': maxmac = concat6(C, pkC, spkC, certC, tc0, n2, sign(padno(tc0, n2), sskC, r1), C, hostT, n1) in
          if checkmac(y', k4, ck1) then
          let injbot2(concat4(AK_40: key, =n1, tk_39: timest, =hostT)) = decsym(m24, k3) in
          event fullCK(hostZ, hostT, n1, m21, TGT_38, m24);
          out(c18[!_31], acceptC1(hostZ, hostT))
        else
          if defined(rkCA) && (spkK = spkgen2(rkCA)) then
            if false then
            let y': maxmac = concat6(C, pkC, spkC, certC, tc0, n2, sign(padno(tc0, n2), sskC, r1), C, hostT, n1) in
            if checkmac(y', k4, ck1) then
            let injbot2(concat4(AK_40: key, =n1, tk_39: timest, =hostT)) = decsym(m24, k3) in
            event fullCK(hostZ, hostT, n1, m21, TGT_38, m24);
            out(c18[!_31], acceptC1(hostZ, hostT))
          else
            if check(concat3(k3, k4, ck1), spkK, ms2) then
            let y': maxmac = concat6(C, pkC, spkC, certC, tc0, n2, sign(padno(tc0, n2), sskC, r1), C, hostT, n1) in
            if checkmac(y', k4, ck1) then
            let injbot2(concat4(AK_40: key, =n1, tk_39: timest, =hostT)) = decsym(m24, k3) in
            event fullCK(hostZ, hostT, n1, m21, TGT_38, m24);
            out(c18[!_31], acceptC1(hostZ, hostT))
      orfind  suchthat defined(x_53, rkCA) && ((pkCA = spkgen2(rkCA)) && ((concat7(hostZ, pkZ, spkZ) = x_53) && check2(concat7(hostZ, pkZ, spkZ), pkCA, ms1))) then
        if true then
        find  suchthat defined(x_52, rkCA) && ((spkK = spkgen2(rkCA)) && ((concat3(k3, k4, ck1) = x_52) && check2(concat3(k3, k4, ck1), spkK, ms2))) then
          if true then
          let y': maxmac = concat6(C, pkC, spkC, certC, tc0, n2, sign(padno(tc0, n2), sskC, r1), C, hostT, n1) in
          if checkmac(y', k4, ck1) then
          let injbot2(concat4(AK_40: key, =n1, tk_39: timest, =hostT)) = decsym(m24, k3) in
          event fullCK(hostZ, hostT, n1, m21, TGT_38, m24);
          out(c18[!_31], acceptC1(hostZ, hostT))
        orfind  suchthat defined(x_53, rkCA) && ((spkK = spkgen2(rkCA)) && ((concat3(k3, k4, ck1) = x_53) && check2(concat3(k3, k4, ck1), spkK, ms2))) then
          if true then
          let y': maxmac = concat6(C, pkC, spkC, certC, tc0, n2, sign(padno(tc0, n2), sskC, r1), C, hostT, n1) in
          if checkmac(y', k4, ck1) then
          let injbot2(concat4(AK_40: key, =n1, tk_39: timest, =hostT)) = decsym(m24, k3) in
          event fullCK(hostZ, hostT, n1, m21, TGT_38, m24);
          out(c18[!_31], acceptC1(hostZ, hostT))
        else
          if defined(rkCA) && (spkK = spkgen2(rkCA)) then
            if false then
            let y': maxmac = concat6(C, pkC, spkC, certC, tc0, n2, sign(padno(tc0, n2), sskC, r1), C, hostT, n1) in
            if checkmac(y', k4, ck1) then
            let injbot2(concat4(AK_40: key, =n1, tk_39: timest, =hostT)) = decsym(m24, k3) in
            event fullCK(hostZ, hostT, n1, m21, TGT_38, m24);
            out(c18[!_31], acceptC1(hostZ, hostT))
          else
            if check(concat3(k3, k4, ck1), spkK, ms2) then
            let y': maxmac = concat6(C, pkC, spkC, certC, tc0, n2, sign(padno(tc0, n2), sskC, r1), C, hostT, n1) in
            if checkmac(y', k4, ck1) then
            let injbot2(concat4(AK_40: key, =n1, tk_39: timest, =hostT)) = decsym(m24, k3) in
            event fullCK(hostZ, hostT, n1, m21, TGT_38, m24);
            out(c18[!_31], acceptC1(hostZ, hostT))
      else
        if defined(rkCA) && (pkCA = spkgen2(rkCA)) then
          if false then
          find  suchthat defined(x_52, rkCA) && ((spkK = spkgen2(rkCA)) && ((concat3(k3, k4, ck1) = x_52) && check2(concat3(k3, k4, ck1), spkK, ms2))) then
            if true then
            let y': maxmac = concat6(C, pkC, spkC, certC, tc0, n2, sign(padno(tc0, n2), sskC, r1), C, hostT, n1) in
            if checkmac(y', k4, ck1) then
            let injbot2(concat4(AK_40: key, =n1, tk_39: timest, =hostT)) = decsym(m24, k3) in
            event fullCK(hostZ, hostT, n1, m21, TGT_38, m24);
            out(c18[!_31], acceptC1(hostZ, hostT))
          orfind  suchthat defined(x_53, rkCA) && ((spkK = spkgen2(rkCA)) && ((concat3(k3, k4, ck1) = x_53) && check2(concat3(k3, k4, ck1), spkK, ms2))) then
            if true then
            let y': maxmac = concat6(C, pkC, spkC, certC, tc0, n2, sign(padno(tc0, n2), sskC, r1), C, hostT, n1) in
            if checkmac(y', k4, ck1) then
            let injbot2(concat4(AK_40: key, =n1, tk_39: timest, =hostT)) = decsym(m24, k3) in
            event fullCK(hostZ, hostT, n1, m21, TGT_38, m24);
            out(c18[!_31], acceptC1(hostZ, hostT))
          else
            if defined(rkCA) && (spkK = spkgen2(rkCA)) then
              if false then
              let y': maxmac = concat6(C, pkC, spkC, certC, tc0, n2, sign(padno(tc0, n2), sskC, r1), C, hostT, n1) in
              if checkmac(y', k4, ck1) then
              let injbot2(concat4(AK_40: key, =n1, tk_39: timest, =hostT)) = decsym(m24, k3) in
              event fullCK(hostZ, hostT, n1, m21, TGT_38, m24);
              out(c18[!_31], acceptC1(hostZ, hostT))
            else
              if check(concat3(k3, k4, ck1), spkK, ms2) then
              let y': maxmac = concat6(C, pkC, spkC, certC, tc0, n2, sign(padno(tc0, n2), sskC, r1), C, hostT, n1) in
              if checkmac(y', k4, ck1) then
              let injbot2(concat4(AK_40: key, =n1, tk_39: timest, =hostT)) = decsym(m24, k3) in
              event fullCK(hostZ, hostT, n1, m21, TGT_38, m24);
              out(c18[!_31], acceptC1(hostZ, hostT))
        else
          if check(concat7(hostZ, pkZ, spkZ), pkCA, ms1) then
          find  suchthat defined(x_52, rkCA) && ((spkK = spkgen2(rkCA)) && ((concat3(k3, k4, ck1) = x_52) && check2(concat3(k3, k4, ck1), spkK, ms2))) then
            if true then
            let y': maxmac = concat6(C, pkC, spkC, certC, tc0, n2, sign(padno(tc0, n2), sskC, r1), C, hostT, n1) in
            if checkmac(y', k4, ck1) then
            let injbot2(concat4(AK_40: key, =n1, tk_39: timest, =hostT)) = decsym(m24, k3) in
            event fullCK(hostZ, hostT, n1, m21, TGT_38, m24);
            out(c18[!_31], acceptC1(hostZ, hostT))
          orfind  suchthat defined(x_53, rkCA) && ((spkK = spkgen2(rkCA)) && ((concat3(k3, k4, ck1) = x_53) && check2(concat3(k3, k4, ck1), spkK, ms2))) then
            if true then
            let y': maxmac = concat6(C, pkC, spkC, certC, tc0, n2, sign(padno(tc0, n2), sskC, r1), C, hostT, n1) in
            if checkmac(y', k4, ck1) then
            let injbot2(concat4(AK_40: key, =n1, tk_39: timest, =hostT)) = decsym(m24, k3) in
            event fullCK(hostZ, hostT, n1, m21, TGT_38, m24);
            out(c18[!_31], acceptC1(hostZ, hostT))
          else
            if defined(rkCA) && (spkK = spkgen2(rkCA)) then
              if false then
              let y': maxmac = concat6(C, pkC, spkC, certC, tc0, n2, sign(padno(tc0, n2), sskC, r1), C, hostT, n1) in
              if checkmac(y', k4, ck1) then
              let injbot2(concat4(AK_40: key, =n1, tk_39: timest, =hostT)) = decsym(m24, k3) in
              event fullCK(hostZ, hostT, n1, m21, TGT_38, m24);
              out(c18[!_31], acceptC1(hostZ, hostT))
            else
              if check(concat3(k3, k4, ck1), spkK, ms2) then
              let y': maxmac = concat6(C, pkC, spkC, certC, tc0, n2, sign(padno(tc0, n2), sskC, r1), C, hostT, n1) in
              if checkmac(y', k4, ck1) then
              let injbot2(concat4(AK_40: key, =n1, tk_39: timest, =hostT)) = decsym(m24, k3) in
              event fullCK(hostZ, hostT, n1, m21, TGT_38, m24);
              out(c18[!_31], acceptC1(hostZ, hostT))
    |
      ! !_32 <= N
      in(c22[!_32], (hostY: client, pkY: pkey, spkY: spkey, ms3: signature, tc1: timest, n4: nonce, ms4: signature, hostV: client, hostW: tgs, n5: nonce));
      if (hostV = hostY) then
      find  suchthat defined(x_52, rkCA) && ((pkCA = spkgen2(rkCA)) && ((concat1(hostY, pkY, spkY) = x_52) && check2(concat1(hostY, pkY, spkY), pkCA, ms3))) then
        if true then
        find  suchthat defined(x_52, rkCA) && ((spkY = spkgen2(rkCA)) && ((padno(tc1, n4) = x_52) && check2(padno(tc1, n4), spkY, ms4))) then
          if true then
          find j1 <= N2 suchthat defined(Lhost[j1], Qkey[j1]) && (Lhost[j1] = hostW) then
          new s3: symkeyseed;
          let AK_35: key = kgen(s3) in
          new s1: symkeyseed;
          let k1: key = kgen(s1) in
          new s2: mkeyseed;
          let k2: mkey = mkgen(s2) in
          new r4: symseed;
          new tk_36: timest;
          let TGT_37: maxmac = encsym(concat5(AK_35, tk_36, hostY), Qkey[j1], r4) in
          new r5: symseed;
          let e24: maxmac = encsym(concat4(AK_35, n5, tk_36, hostW), k1, r5) in
          let y: maxmac = concat6(hostY, pkY, spkY, ms3, tc1, n4, ms4, hostY, hostW, n5) in
          let ck: macs = mac(y, k2) in
          new r6: sseed;
          let ms21: signature = sign(concat3(k1, k2, ck), sskK, r6) in
          new r7: seed;
          let e21: bitstring = enc(concat2(K, pkK, spkK, certK, k1, k2, ck, ms21), pkY, r7) in
          let m5: bitstring = (e21, hostY, TGT_37, e24) in
          event fullKC(hostY, hostW, n5, e21, TGT_37, e24);
          out(c23[!_32], m5)
        orfind  suchthat defined(x_53, rkCA) && ((spkY = spkgen2(rkCA)) && ((padno(tc1, n4) = x_53) && check2(padno(tc1, n4), spkY, ms4))) then
          if true then
          find j1 <= N2 suchthat defined(Lhost[j1], Qkey[j1]) && (Lhost[j1] = hostW) then
          new s3: symkeyseed;
          let AK_35: key = kgen(s3) in
          new s1: symkeyseed;
          let k1: key = kgen(s1) in
          new s2: mkeyseed;
          let k2: mkey = mkgen(s2) in
          new r4: symseed;
          new tk_36: timest;
          let TGT_37: maxmac = encsym(concat5(AK_35, tk_36, hostY), Qkey[j1], r4) in
          new r5: symseed;
          let e24: maxmac = encsym(concat4(AK_35, n5, tk_36, hostW), k1, r5) in
          let y: maxmac = concat6(hostY, pkY, spkY, ms3, tc1, n4, ms4, hostY, hostW, n5) in
          let ck: macs = mac(y, k2) in
          new r6: sseed;
          let ms21: signature = sign(concat3(k1, k2, ck), sskK, r6) in
          new r7: seed;
          let e21: bitstring = enc(concat2(K, pkK, spkK, certK, k1, k2, ck, ms21), pkY, r7) in
          let m5: bitstring = (e21, hostY, TGT_37, e24) in
          event fullKC(hostY, hostW, n5, e21, TGT_37, e24);
          out(c23[!_32], m5)
        else
          if defined(rkCA) && (spkY = spkgen2(rkCA)) then
            if false then
            find j1 <= N2 suchthat defined(Lhost[j1], Qkey[j1]) && (Lhost[j1] = hostW) then
            new s3: symkeyseed;
            let AK_35: key = kgen(s3) in
            new s1: symkeyseed;
            let k1: key = kgen(s1) in
            new s2: mkeyseed;
            let k2: mkey = mkgen(s2) in
            new r4: symseed;
            new tk_36: timest;
            let TGT_37: maxmac = encsym(concat5(AK_35, tk_36, hostY), Qkey[j1], r4) in
            new r5: symseed;
            let e24: maxmac = encsym(concat4(AK_35, n5, tk_36, hostW), k1, r5) in
            let y: maxmac = concat6(hostY, pkY, spkY, ms3, tc1, n4, ms4, hostY, hostW, n5) in
            let ck: macs = mac(y, k2) in
            new r6: sseed;
            let ms21: signature = sign(concat3(k1, k2, ck), sskK, r6) in
            new r7: seed;
            let e21: bitstring = enc(concat2(K, pkK, spkK, certK, k1, k2, ck, ms21), pkY, r7) in
            let m5: bitstring = (e21, hostY, TGT_37, e24) in
            event fullKC(hostY, hostW, n5, e21, TGT_37, e24);
            out(c23[!_32], m5)
          else
            if check(padno(tc1, n4), spkY, ms4) then
            find j1 <= N2 suchthat defined(Lhost[j1], Qkey[j1]) && (Lhost[j1] = hostW) then
            new s3: symkeyseed;
            let AK_35: key = kgen(s3) in
            new s1: symkeyseed;
            let k1: key = kgen(s1) in
            new s2: mkeyseed;
            let k2: mkey = mkgen(s2) in
            new r4: symseed;
            new tk_36: timest;
            let TGT_37: maxmac = encsym(concat5(AK_35, tk_36, hostY), Qkey[j1], r4) in
            new r5: symseed;
            let e24: maxmac = encsym(concat4(AK_35, n5, tk_36, hostW), k1, r5) in
            let y: maxmac = concat6(hostY, pkY, spkY, ms3, tc1, n4, ms4, hostY, hostW, n5) in
            let ck: macs = mac(y, k2) in
            new r6: sseed;
            let ms21: signature = sign(concat3(k1, k2, ck), sskK, r6) in
            new r7: seed;
            let e21: bitstring = enc(concat2(K, pkK, spkK, certK, k1, k2, ck, ms21), pkY, r7) in
            let m5: bitstring = (e21, hostY, TGT_37, e24) in
            event fullKC(hostY, hostW, n5, e21, TGT_37, e24);
            out(c23[!_32], m5)
      orfind  suchthat defined(x_53, rkCA) && ((pkCA = spkgen2(rkCA)) && ((concat1(hostY, pkY, spkY) = x_53) && check2(concat1(hostY, pkY, spkY), pkCA, ms3))) then
        if true then
        find  suchthat defined(x_52, rkCA) && ((spkY = spkgen2(rkCA)) && ((padno(tc1, n4) = x_52) && check2(padno(tc1, n4), spkY, ms4))) then
          if true then
          find j1 <= N2 suchthat defined(Lhost[j1], Qkey[j1]) && (Lhost[j1] = hostW) then
          new s3: symkeyseed;
          let AK_35: key = kgen(s3) in
          new s1: symkeyseed;
          let k1: key = kgen(s1) in
          new s2: mkeyseed;
          let k2: mkey = mkgen(s2) in
          new r4: symseed;
          new tk_36: timest;
          let TGT_37: maxmac = encsym(concat5(AK_35, tk_36, hostY), Qkey[j1], r4) in
          new r5: symseed;
          let e24: maxmac = encsym(concat4(AK_35, n5, tk_36, hostW), k1, r5) in
          let y: maxmac = concat6(hostY, pkY, spkY, ms3, tc1, n4, ms4, hostY, hostW, n5) in
          let ck: macs = mac(y, k2) in
          new r6: sseed;
          let ms21: signature = sign(concat3(k1, k2, ck), sskK, r6) in
          new r7: seed;
          let e21: bitstring = enc(concat2(K, pkK, spkK, certK, k1, k2, ck, ms21), pkY, r7) in
          let m5: bitstring = (e21, hostY, TGT_37, e24) in
          event fullKC(hostY, hostW, n5, e21, TGT_37, e24);
          out(c23[!_32], m5)
        orfind  suchthat defined(x_53, rkCA) && ((spkY = spkgen2(rkCA)) && ((padno(tc1, n4) = x_53) && check2(padno(tc1, n4), spkY, ms4))) then
          if true then
          find j1 <= N2 suchthat defined(Lhost[j1], Qkey[j1]) && (Lhost[j1] = hostW) then
          new s3: symkeyseed;
          let AK_35: key = kgen(s3) in
          new s1: symkeyseed;
          let k1: key = kgen(s1) in
          new s2: mkeyseed;
          let k2: mkey = mkgen(s2) in
          new r4: symseed;
          new tk_36: timest;
          let TGT_37: maxmac = encsym(concat5(AK_35, tk_36, hostY), Qkey[j1], r4) in
          new r5: symseed;
          let e24: maxmac = encsym(concat4(AK_35, n5, tk_36, hostW), k1, r5) in
          let y: maxmac = concat6(hostY, pkY, spkY, ms3, tc1, n4, ms4, hostY, hostW, n5) in
          let ck: macs = mac(y, k2) in
          new r6: sseed;
          let ms21: signature = sign(concat3(k1, k2, ck), sskK, r6) in
          new r7: seed;
          let e21: bitstring = enc(concat2(K, pkK, spkK, certK, k1, k2, ck, ms21), pkY, r7) in
          let m5: bitstring = (e21, hostY, TGT_37, e24) in
          event fullKC(hostY, hostW, n5, e21, TGT_37, e24);
          out(c23[!_32], m5)
        else
          if defined(rkCA) && (spkY = spkgen2(rkCA)) then
            if false then
            find j1 <= N2 suchthat defined(Lhost[j1], Qkey[j1]) && (Lhost[j1] = hostW) then
            new s3: symkeyseed;
            let AK_35: key = kgen(s3) in
            new s1: symkeyseed;
            let k1: key = kgen(s1) in
            new s2: mkeyseed;
            let k2: mkey = mkgen(s2) in
            new r4: symseed;
            new tk_36: timest;
            let TGT_37: maxmac = encsym(concat5(AK_35, tk_36, hostY), Qkey[j1], r4) in
            new r5: symseed;
            let e24: maxmac = encsym(concat4(AK_35, n5, tk_36, hostW), k1, r5) in
            let y: maxmac = concat6(hostY, pkY, spkY, ms3, tc1, n4, ms4, hostY, hostW, n5) in
            let ck: macs = mac(y, k2) in
            new r6: sseed;
            let ms21: signature = sign(concat3(k1, k2, ck), sskK, r6) in
            new r7: seed;
            let e21: bitstring = enc(concat2(K, pkK, spkK, certK, k1, k2, ck, ms21), pkY, r7) in
            let m5: bitstring = (e21, hostY, TGT_37, e24) in
            event fullKC(hostY, hostW, n5, e21, TGT_37, e24);
            out(c23[!_32], m5)
          else
            if check(padno(tc1, n4), spkY, ms4) then
            find j1 <= N2 suchthat defined(Lhost[j1], Qkey[j1]) && (Lhost[j1] = hostW) then
            new s3: symkeyseed;
            let AK_35: key = kgen(s3) in
            new s1: symkeyseed;
            let k1: key = kgen(s1) in
            new s2: mkeyseed;
            let k2: mkey = mkgen(s2) in
            new r4: symseed;
            new tk_36: timest;
            let TGT_37: maxmac = encsym(concat5(AK_35, tk_36, hostY), Qkey[j1], r4) in
            new r5: symseed;
            let e24: maxmac = encsym(concat4(AK_35, n5, tk_36, hostW), k1, r5) in
            let y: maxmac = concat6(hostY, pkY, spkY, ms3, tc1, n4, ms4, hostY, hostW, n5) in
            let ck: macs = mac(y, k2) in
            new r6: sseed;
            let ms21: signature = sign(concat3(k1, k2, ck), sskK, r6) in
            new r7: seed;
            let e21: bitstring = enc(concat2(K, pkK, spkK, certK, k1, k2, ck, ms21), pkY, r7) in
            let m5: bitstring = (e21, hostY, TGT_37, e24) in
            event fullKC(hostY, hostW, n5, e21, TGT_37, e24);
            out(c23[!_32], m5)
      else
        if defined(rkCA) && (pkCA = spkgen2(rkCA)) then
          if false then
          find  suchthat defined(x_52, rkCA) && ((spkY = spkgen2(rkCA)) && ((padno(tc1, n4) = x_52) && check2(padno(tc1, n4), spkY, ms4))) then
            if true then
            find j1 <= N2 suchthat defined(Lhost[j1], Qkey[j1]) && (Lhost[j1] = hostW) then
            new s3: symkeyseed;
            let AK_35: key = kgen(s3) in
            new s1: symkeyseed;
            let k1: key = kgen(s1) in
            new s2: mkeyseed;
            let k2: mkey = mkgen(s2) in
            new r4: symseed;
            new tk_36: timest;
            let TGT_37: maxmac = encsym(concat5(AK_35, tk_36, hostY), Qkey[j1], r4) in
            new r5: symseed;
            let e24: maxmac = encsym(concat4(AK_35, n5, tk_36, hostW), k1, r5) in
            let y: maxmac = concat6(hostY, pkY, spkY, ms3, tc1, n4, ms4, hostY, hostW, n5) in
            let ck: macs = mac(y, k2) in
            new r6: sseed;
            let ms21: signature = sign(concat3(k1, k2, ck), sskK, r6) in
            new r7: seed;
            let e21: bitstring = enc(concat2(K, pkK, spkK, certK, k1, k2, ck, ms21), pkY, r7) in
            let m5: bitstring = (e21, hostY, TGT_37, e24) in
            event fullKC(hostY, hostW, n5, e21, TGT_37, e24);
            out(c23[!_32], m5)
          orfind  suchthat defined(x_53, rkCA) && ((spkY = spkgen2(rkCA)) && ((padno(tc1, n4) = x_53) && check2(padno(tc1, n4), spkY, ms4))) then
            if true then
            find j1 <= N2 suchthat defined(Lhost[j1], Qkey[j1]) && (Lhost[j1] = hostW) then
            new s3: symkeyseed;
            let AK_35: key = kgen(s3) in
            new s1: symkeyseed;
            let k1: key = kgen(s1) in
            new s2: mkeyseed;
            let k2: mkey = mkgen(s2) in
            new r4: symseed;
            new tk_36: timest;
            let TGT_37: maxmac = encsym(concat5(AK_35, tk_36, hostY), Qkey[j1], r4) in
            new r5: symseed;
            let e24: maxmac = encsym(concat4(AK_35, n5, tk_36, hostW), k1, r5) in
            let y: maxmac = concat6(hostY, pkY, spkY, ms3, tc1, n4, ms4, hostY, hostW, n5) in
            let ck: macs = mac(y, k2) in
            new r6: sseed;
            let ms21: signature = sign(concat3(k1, k2, ck), sskK, r6) in
            new r7: seed;
            let e21: bitstring = enc(concat2(K, pkK, spkK, certK, k1, k2, ck, ms21), pkY, r7) in
            let m5: bitstring = (e21, hostY, TGT_37, e24) in
            event fullKC(hostY, hostW, n5, e21, TGT_37, e24);
            out(c23[!_32], m5)
          else
            if defined(rkCA) && (spkY = spkgen2(rkCA)) then
              if false then
              find j1 <= N2 suchthat defined(Lhost[j1], Qkey[j1]) && (Lhost[j1] = hostW) then
              new s3: symkeyseed;
              let AK_35: key = kgen(s3) in
              new s1: symkeyseed;
              let k1: key = kgen(s1) in
              new s2: mkeyseed;
              let k2: mkey = mkgen(s2) in
              new r4: symseed;
              new tk_36: timest;
              let TGT_37: maxmac = encsym(concat5(AK_35, tk_36, hostY), Qkey[j1], r4) in
              new r5: symseed;
              let e24: maxmac = encsym(concat4(AK_35, n5, tk_36, hostW), k1, r5) in
              let y: maxmac = concat6(hostY, pkY, spkY, ms3, tc1, n4, ms4, hostY, hostW, n5) in
              let ck: macs = mac(y, k2) in
              new r6: sseed;
              let ms21: signature = sign(concat3(k1, k2, ck), sskK, r6) in
              new r7: seed;
              let e21: bitstring = enc(concat2(K, pkK, spkK, certK, k1, k2, ck, ms21), pkY, r7) in
              let m5: bitstring = (e21, hostY, TGT_37, e24) in
              event fullKC(hostY, hostW, n5, e21, TGT_37, e24);
              out(c23[!_32], m5)
            else
              if check(padno(tc1, n4), spkY, ms4) then
              find j1 <= N2 suchthat defined(Lhost[j1], Qkey[j1]) && (Lhost[j1] = hostW) then
              new s3: symkeyseed;
              let AK_35: key = kgen(s3) in
              new s1: symkeyseed;
              let k1: key = kgen(s1) in
              new s2: mkeyseed;
              let k2: mkey = mkgen(s2) in
              new r4: symseed;
              new tk_36: timest;
              let TGT_37: maxmac = encsym(concat5(AK_35, tk_36, hostY), Qkey[j1], r4) in
              new r5: symseed;
              let e24: maxmac = encsym(concat4(AK_35, n5, tk_36, hostW), k1, r5) in
              let y: maxmac = concat6(hostY, pkY, spkY, ms3, tc1, n4, ms4, hostY, hostW, n5) in
              let ck: macs = mac(y, k2) in
              new r6: sseed;
              let ms21: signature = sign(concat3(k1, k2, ck), sskK, r6) in
              new r7: seed;
              let e21: bitstring = enc(concat2(K, pkK, spkK, certK, k1, k2, ck, ms21), pkY, r7) in
              let m5: bitstring = (e21, hostY, TGT_37, e24) in
              event fullKC(hostY, hostW, n5, e21, TGT_37, e24);
              out(c23[!_32], m5)
        else
          if check(concat1(hostY, pkY, spkY), pkCA, ms3) then
          find  suchthat defined(x_52, rkCA) && ((spkY = spkgen2(rkCA)) && ((padno(tc1, n4) = x_52) && check2(padno(tc1, n4), spkY, ms4))) then
            if true then
            find j1 <= N2 suchthat defined(Lhost[j1], Qkey[j1]) && (Lhost[j1] = hostW) then
            new s3: symkeyseed;
            let AK_35: key = kgen(s3) in
            new s1: symkeyseed;
            let k1: key = kgen(s1) in
            new s2: mkeyseed;
            let k2: mkey = mkgen(s2) in
            new r4: symseed;
            new tk_36: timest;
            let TGT_37: maxmac = encsym(concat5(AK_35, tk_36, hostY), Qkey[j1], r4) in
            new r5: symseed;
            let e24: maxmac = encsym(concat4(AK_35, n5, tk_36, hostW), k1, r5) in
            let y: maxmac = concat6(hostY, pkY, spkY, ms3, tc1, n4, ms4, hostY, hostW, n5) in
            let ck: macs = mac(y, k2) in
            new r6: sseed;
            let ms21: signature = sign(concat3(k1, k2, ck), sskK, r6) in
            new r7: seed;
            let e21: bitstring = enc(concat2(K, pkK, spkK, certK, k1, k2, ck, ms21), pkY, r7) in
            let m5: bitstring = (e21, hostY, TGT_37, e24) in
            event fullKC(hostY, hostW, n5, e21, TGT_37, e24);
            out(c23[!_32], m5)
          orfind  suchthat defined(x_53, rkCA) && ((spkY = spkgen2(rkCA)) && ((padno(tc1, n4) = x_53) && check2(padno(tc1, n4), spkY, ms4))) then
            if true then
            find j1 <= N2 suchthat defined(Lhost[j1], Qkey[j1]) && (Lhost[j1] = hostW) then
            new s3: symkeyseed;
            let AK_35: key = kgen(s3) in
            new s1: symkeyseed;
            let k1: key = kgen(s1) in
            new s2: mkeyseed;
            let k2: mkey = mkgen(s2) in
            new r4: symseed;
            new tk_36: timest;
            let TGT_37: maxmac = encsym(concat5(AK_35, tk_36, hostY), Qkey[j1], r4) in
            new r5: symseed;
            let e24: maxmac = encsym(concat4(AK_35, n5, tk_36, hostW), k1, r5) in
            let y: maxmac = concat6(hostY, pkY, spkY, ms3, tc1, n4, ms4, hostY, hostW, n5) in
            let ck: macs = mac(y, k2) in
            new r6: sseed;
            let ms21: signature = sign(concat3(k1, k2, ck), sskK, r6) in
            new r7: seed;
            let e21: bitstring = enc(concat2(K, pkK, spkK, certK, k1, k2, ck, ms21), pkY, r7) in
            let m5: bitstring = (e21, hostY, TGT_37, e24) in
            event fullKC(hostY, hostW, n5, e21, TGT_37, e24);
            out(c23[!_32], m5)
          else
            if defined(rkCA) && (spkY = spkgen2(rkCA)) then
              if false then
              find j1 <= N2 suchthat defined(Lhost[j1], Qkey[j1]) && (Lhost[j1] = hostW) then
              new s3: symkeyseed;
              let AK_35: key = kgen(s3) in
              new s1: symkeyseed;
              let k1: key = kgen(s1) in
              new s2: mkeyseed;
              let k2: mkey = mkgen(s2) in
              new r4: symseed;
              new tk_36: timest;
              let TGT_37: maxmac = encsym(concat5(AK_35, tk_36, hostY), Qkey[j1], r4) in
              new r5: symseed;
              let e24: maxmac = encsym(concat4(AK_35, n5, tk_36, hostW), k1, r5) in
              let y: maxmac = concat6(hostY, pkY, spkY, ms3, tc1, n4, ms4, hostY, hostW, n5) in
              let ck: macs = mac(y, k2) in
              new r6: sseed;
              let ms21: signature = sign(concat3(k1, k2, ck), sskK, r6) in
              new r7: seed;
              let e21: bitstring = enc(concat2(K, pkK, spkK, certK, k1, k2, ck, ms21), pkY, r7) in
              let m5: bitstring = (e21, hostY, TGT_37, e24) in
              event fullKC(hostY, hostW, n5, e21, TGT_37, e24);
              out(c23[!_32], m5)
            else
              if check(padno(tc1, n4), spkY, ms4) then
              find j1 <= N2 suchthat defined(Lhost[j1], Qkey[j1]) && (Lhost[j1] = hostW) then
              new s3: symkeyseed;
              let AK_35: key = kgen(s3) in
              new s1: symkeyseed;
              let k1: key = kgen(s1) in
              new s2: mkeyseed;
              let k2: mkey = mkgen(s2) in
              new r4: symseed;
              new tk_36: timest;
              let TGT_37: maxmac = encsym(concat5(AK_35, tk_36, hostY), Qkey[j1], r4) in
              new r5: symseed;
              let e24: maxmac = encsym(concat4(AK_35, n5, tk_36, hostW), k1, r5) in
              let y: maxmac = concat6(hostY, pkY, spkY, ms3, tc1, n4, ms4, hostY, hostW, n5) in
              let ck: macs = mac(y, k2) in
              new r6: sseed;
              let ms21: signature = sign(concat3(k1, k2, ck), sskK, r6) in
              new r7: seed;
              let e21: bitstring = enc(concat2(K, pkK, spkK, certK, k1, k2, ck, ms21), pkY, r7) in
              let m5: bitstring = (e21, hostY, TGT_37, e24) in
              event fullKC(hostY, hostW, n5, e21, TGT_37, e24);
              out(c23[!_32], m5)
    )
  |
    ! !_33 <= N2
    in(c21[!_33], (Lhost: tgs, Lkey: key));
    if (Lhost = T) then
      let Qkey: key = Kt
    else
      let Qkey: key = Lkey
  )
|
  ! !_34 <= N2
  in(c16[!_34], (Mhost1: tgs, Mhost2: server, Mkey: key));
  if ((Mhost1 = T) && (Mhost2 = S)) then
  yield
)


Applying simplify yields

Game 7 is
in(start, ());
new rkC: keyseed;
let pkC: pkey = pkgen(rkC) in
let skC: skey = skgen(rkC) in
new rkCs: skeyseed;
let spkC: spkey = spkgen(rkCs) in
let sskC: sskey = sskgen(rkCs) in
new rkK: keyseed;
let pkK: pkey = pkgen(rkK) in
new rkKs: skeyseed;
let spkK: spkey = spkgen(rkKs) in
let sskK: sskey = sskgen(rkKs) in
new rkCA: skeyseed;
let pkCA: spkey = spkgen2(rkCA) in
new rKt: symkeyseed;
let Kt: key = kgen(rKt) in
new q1: sseed;
let x_53: sblocksize = concat1(C, pkC, spkC) in
let certC: signature = sign2(x_53, sskgen2(rkCA), q1) in
new q2: sseed;
let x_52: sblocksize = concat7(K, pkK, spkK) in
let certK: signature = sign2(x_52, sskgen2(rkCA), q2) in
out(c25, (pkC, spkC, spkK, pkCA));
(
  (
    (
      ! !_31 <= N
      in(c1[!_31], hostT: tgs);
      new tc0: timest;
      new r1: sseed;
      new n2: nonce;
      new n1: nonce;
      out(c2[!_31], (C, pkC, spkC, certC, tc0, n2, sign(padno(tc0, n2), sskC, r1), C, hostT, n1));
      in(c3[!_31], (m21: bitstring, =C, TGT_38: maxmac, m24: maxmac));
      let injbot1(concat2(hostZ: kas, pkZ: pkey, spkZ: spkey, ms1: signature, k3: key, k4: mkey, ck1: macs, ms2: signature)) = dec(m21, skC) in
      if (((hostZ = K) && ((pkZ = pkK) && (spkZ = spkK))) && check2(concat7(hostZ, pkZ, spkZ), pkCA, ms1)) then
      if (spkK = spkgen2(rkCA)) then
        yield
      else
        if check(concat3(k3, k4, ck1), spkK, ms2) then
        let y': maxmac = concat6(C, pkC, spkC, certC, tc0, n2, sign(padno(tc0, n2), sskC, r1), C, hostT, n1) in
        if checkmac(y', k4, ck1) then
        let injbot2(concat4(AK_40: key, =n1, tk_39: timest, =hostT)) = decsym(m24, k3) in
        event fullCK(hostZ, hostT, n1, m21, TGT_38, m24);
        out(c18[!_31], acceptC1(hostZ, hostT))
    |
      ! !_32 <= N
      in(c22[!_32], (hostY: client, pkY: pkey, spkY: spkey, ms3: signature, tc1: timest, n4: nonce, ms4: signature, hostV: client, hostW: tgs, n5: nonce));
      if (hostV = hostY) then
      if (((hostY = C) && ((pkY = pkC) && (spkY = spkC))) && check2(concat1(hostY, pkY, spkY), pkCA, ms3)) then
      if (spkY = spkgen2(rkCA)) then
        yield
      else
        if check(padno(tc1, n4), spkY, ms4) then
        find j1 <= N2 suchthat defined(Qkey[j1], Lhost[j1]) && (Lhost[j1] = hostW) then
        new s3: symkeyseed;
        let AK_35: key = kgen(s3) in
        new s1: symkeyseed;
        let k1: key = kgen(s1) in
        new s2: mkeyseed;
        let k2: mkey = mkgen(s2) in
        new r4: symseed;
        new tk_36: timest;
        let TGT_37: maxmac = encsym(concat5(AK_35, tk_36, hostY), Qkey[j1], r4) in
        new r5: symseed;
        let e24: maxmac = encsym(concat4(AK_35, n5, tk_36, hostW), k1, r5) in
        let y: maxmac = concat6(hostY, pkY, spkY, ms3, tc1, n4, ms4, hostY, hostW, n5) in
        let ck: macs = mac(y, k2) in
        new r6: sseed;
        let ms21: signature = sign(concat3(k1, k2, ck), sskK, r6) in
        new r7: seed;
        let e21: bitstring = enc(concat2(K, pkK, spkK, certK, k1, k2, ck, ms21), pkY, r7) in
        let m5: bitstring = (e21, hostY, TGT_37, e24) in
        event fullKC(hostY, hostW, n5, e21, TGT_37, e24);
        out(c23[!_32], m5)
    )
  |
    ! !_33 <= N2
    in(c21[!_33], (Lhost: tgs, Lkey: key));
    if (Lhost = T) then
      let Qkey: key = Kt
    else
      let Qkey: key = Lkey
  )
|
  ! !_34 <= N2
  in(c16[!_34], (Mhost1: tgs, Mhost2: server, Mkey: key))
)


Applying move new all binders yields

Game 8 is
in(start, ());
new rkC: keyseed;
let pkC: pkey = pkgen(rkC) in
let skC: skey = skgen(rkC) in
new rkCs: skeyseed;
let spkC: spkey = spkgen(rkCs) in
let sskC: sskey = sskgen(rkCs) in
new rkK: keyseed;
let pkK: pkey = pkgen(rkK) in
new rkKs: skeyseed;
let spkK: spkey = spkgen(rkKs) in
let sskK: sskey = sskgen(rkKs) in
new rkCA: skeyseed;
let pkCA: spkey = spkgen2(rkCA) in
new rKt: symkeyseed;
let Kt: key = kgen(rKt) in
let x_53: sblocksize = concat1(C, pkC, spkC) in
new q1: sseed;
let certC: signature = sign2(x_53, sskgen2(rkCA), q1) in
let x_52: sblocksize = concat7(K, pkK, spkK) in
new q2: sseed;
let certK: signature = sign2(x_52, sskgen2(rkCA), q2) in
out(c25, (pkC, spkC, spkK, pkCA));
(
  (
    (
      ! !_31 <= N
      in(c1[!_31], hostT: tgs);
      new n1: nonce;
      new n2: nonce;
      new r1: sseed;
      new tc0: timest;
      out(c2[!_31], (C, pkC, spkC, certC, tc0, n2, sign(padno(tc0, n2), sskC, r1), C, hostT, n1));
      in(c3[!_31], (m21: bitstring, =C, TGT_38: maxmac, m24: maxmac));
      let injbot1(concat2(hostZ: kas, pkZ: pkey, spkZ: spkey, ms1: signature, k3: key, k4: mkey, ck1: macs, ms2: signature)) = dec(m21, skC) in
      if (((hostZ = K) && ((pkZ = pkK) && (spkZ = spkK))) && check2(concat7(hostZ, pkZ, spkZ), pkCA, ms1)) then
      if (spkK = spkgen2(rkCA)) then
        yield
      else
        if check(concat3(k3, k4, ck1), spkK, ms2) then
        let y': maxmac = concat6(C, pkC, spkC, certC, tc0, n2, sign(padno(tc0, n2), sskC, r1), C, hostT, n1) in
        if checkmac(y', k4, ck1) then
        let injbot2(concat4(AK_40: key, =n1, tk_39: timest, =hostT)) = decsym(m24, k3) in
        event fullCK(hostZ, hostT, n1, m21, TGT_38, m24);
        out(c18[!_31], acceptC1(hostZ, hostT))
    |
      ! !_32 <= N
      in(c22[!_32], (hostY: client, pkY: pkey, spkY: spkey, ms3: signature, tc1: timest, n4: nonce, ms4: signature, hostV: client, hostW: tgs, n5: nonce));
      if (hostV = hostY) then
      if (((hostY = C) && ((pkY = pkC) && (spkY = spkC))) && check2(concat1(hostY, pkY, spkY), pkCA, ms3)) then
      if (spkY = spkgen2(rkCA)) then
        yield
      else
        if check(padno(tc1, n4), spkY, ms4) then
        find j1 <= N2 suchthat defined(Qkey[j1], Lhost[j1]) && (Lhost[j1] = hostW) then
        new s3: symkeyseed;
        let AK_35: key = kgen(s3) in
        new s1: symkeyseed;
        let k1: key = kgen(s1) in
        new s2: mkeyseed;
        let k2: mkey = mkgen(s2) in
        new tk_36: timest;
        new r4: symseed;
        let TGT_37: maxmac = encsym(concat5(AK_35, tk_36, hostY), Qkey[j1], r4) in
        new r5: symseed;
        let e24: maxmac = encsym(concat4(AK_35, n5, tk_36, hostW), k1, r5) in
        let y: maxmac = concat6(hostY, pkY, spkY, ms3, tc1, n4, ms4, hostY, hostW, n5) in
        let ck: macs = mac(y, k2) in
        new r6: sseed;
        let ms21: signature = sign(concat3(k1, k2, ck), sskK, r6) in
        new r7: seed;
        let e21: bitstring = enc(concat2(K, pkK, spkK, certK, k1, k2, ck, ms21), pkY, r7) in
        let m5: bitstring = (e21, hostY, TGT_37, e24) in
        event fullKC(hostY, hostW, n5, e21, TGT_37, e24);
        out(c23[!_32], m5)
    )
  |
    ! !_33 <= N2
    in(c21[!_33], (Lhost: tgs, Lkey: key));
    if (Lhost = T) then
      let Qkey: key = Kt
    else
      let Qkey: key = Lkey
  )
|
  ! !_34 <= N2
  in(c16[!_34], (Mhost1: tgs, Mhost2: server, Mkey: key))
)


Applying remove assignments of binder sskC yields

Game 9 is
in(start, ());
new rkC: keyseed;
let pkC: pkey = pkgen(rkC) in
let skC: skey = skgen(rkC) in
new rkCs: skeyseed;
let spkC: spkey = spkgen(rkCs) in
new rkK: keyseed;
let pkK: pkey = pkgen(rkK) in
new rkKs: skeyseed;
let spkK: spkey = spkgen(rkKs) in
let sskK: sskey = sskgen(rkKs) in
new rkCA: skeyseed;
let pkCA: spkey = spkgen2(rkCA) in
new rKt: symkeyseed;
let Kt: key = kgen(rKt) in
let x_53: sblocksize = concat1(C, pkC, spkC) in
new q1: sseed;
let certC: signature = sign2(x_53, sskgen2(rkCA), q1) in
let x_52: sblocksize = concat7(K, pkK, spkK) in
new q2: sseed;
let certK: signature = sign2(x_52, sskgen2(rkCA), q2) in
out(c25, (pkC, spkC, spkK, pkCA));
(
  (
    (
      ! !_31 <= N
      in(c1[!_31], hostT: tgs);
      new n1: nonce;
      new n2: nonce;
      new r1: sseed;
      new tc0: timest;
      out(c2[!_31], (C, pkC, spkC, certC, tc0, n2, sign(padno(tc0, n2), sskgen(rkCs), r1), C, hostT, n1));
      in(c3[!_31], (m21: bitstring, =C, TGT_38: maxmac, m24: maxmac));
      let injbot1(concat2(hostZ: kas, pkZ: pkey, spkZ: spkey, ms1: signature, k3: key, k4: mkey, ck1: macs, ms2: signature)) = dec(m21, skC) in
      if (((hostZ = K) && ((pkZ = pkK) && (spkZ = spkK))) && check2(concat7(hostZ, pkZ, spkZ), pkCA, ms1)) then
      if (spkK = spkgen2(rkCA)) then
        yield
      else
        if check(concat3(k3, k4, ck1), spkK, ms2) then
        let y': maxmac = concat6(C, pkC, spkC, certC, tc0, n2, sign(padno(tc0, n2), sskgen(rkCs), r1), C, hostT, n1) in
        if checkmac(y', k4, ck1) then
        let injbot2(concat4(AK_40: key, =n1, tk_39: timest, =hostT)) = decsym(m24, k3) in
        event fullCK(hostZ, hostT, n1, m21, TGT_38, m24);
        out(c18[!_31], acceptC1(hostZ, hostT))
    |
      ! !_32 <= N
      in(c22[!_32], (hostY: client, pkY: pkey, spkY: spkey, ms3: signature, tc1: timest, n4: nonce, ms4: signature, hostV: client, hostW: tgs, n5: nonce));
      if (hostV = hostY) then
      if (((hostY = C) && ((pkY = pkC) && (spkY = spkC))) && check2(concat1(hostY, pkY, spkY), pkCA, ms3)) then
      if (spkY = spkgen2(rkCA)) then
        yield
      else
        if check(padno(tc1, n4), spkY, ms4) then
        find j1 <= N2 suchthat defined(Qkey[j1], Lhost[j1]) && (Lhost[j1] = hostW) then
        new s3: symkeyseed;
        let AK_35: key = kgen(s3) in
        new s1: symkeyseed;
        let k1: key = kgen(s1) in
        new s2: mkeyseed;
        let k2: mkey = mkgen(s2) in
        new tk_36: timest;
        new r4: symseed;
        let TGT_37: maxmac = encsym(concat5(AK_35, tk_36, hostY), Qkey[j1], r4) in
        new r5: symseed;
        let e24: maxmac = encsym(concat4(AK_35, n5, tk_36, hostW), k1, r5) in
        let y: maxmac = concat6(hostY, pkY, spkY, ms3, tc1, n4, ms4, hostY, hostW, n5) in
        let ck: macs = mac(y, k2) in
        new r6: sseed;
        let ms21: signature = sign(concat3(k1, k2, ck), sskK, r6) in
        new r7: seed;
        let e21: bitstring = enc(concat2(K, pkK, spkK, certK, k1, k2, ck, ms21), pkY, r7) in
        let m5: bitstring = (e21, hostY, TGT_37, e24) in
        event fullKC(hostY, hostW, n5, e21, TGT_37, e24);
        out(c23[!_32], m5)
    )
  |
    ! !_33 <= N2
    in(c21[!_33], (Lhost: tgs, Lkey: key));
    if (Lhost = T) then
      let Qkey: key = Kt
    else
      let Qkey: key = Lkey
  )
|
  ! !_34 <= N2
  in(c16[!_34], (Mhost1: tgs, Mhost2: server, Mkey: key))
)


Applying equivalence
equiv ! !_7 <= N3 new r: skeyseed; (
  () -> spkgen(r),
  ! !_8 <= N2 new r2: sseed; (x: sblocksize) -> sign(x, sskgen(r), r2)), ! !_9 <= N4 (m: sblocksize, y: spkey, si: signature) -> check(m, y, si) [all]
<=(N3 * Psign(time, N2))=>
      ! !_10 <= N3 new r: skeyseed; (
  () -> spkgen2(r),
  ! !_11 <= N2 new r2: sseed; (x_47: sblocksize) -> let x: sblocksize = x_47 in sign2(x, sskgen2(r), r2)), ! !_12 <= N4 (m: sblocksize, y: spkey, si: signature) -> find j <= N2, k_14 <= N3 suchthat defined(x[j, k_14], r[k_14]) && ((y = spkgen2(r[k_14])) && ((m = x[j, k_14]) && check2(m, y, si))) then true else find k_13 <= N3 suchthat defined(r[k_13]) && (y = spkgen2(r[k_13])) then false else check(m, y, si)
with rkCs [Difference of probability Psign(time + time(context for game 9), N)] yields

Game 10 is
in(start, ());
new rkC: keyseed;
let pkC: pkey = pkgen(rkC) in
let skC: skey = skgen(rkC) in
new rkCs: skeyseed;
let spkC: spkey = spkgen2(rkCs) in
new rkK: keyseed;
let pkK: pkey = pkgen(rkK) in
new rkKs: skeyseed;
let spkK: spkey = spkgen(rkKs) in
let sskK: sskey = sskgen(rkKs) in
new rkCA: skeyseed;
let pkCA: spkey = spkgen2(rkCA) in
new rKt: symkeyseed;
let Kt: key = kgen(rKt) in
let x_53: sblocksize = concat1(C, pkC, spkC) in
new q1: sseed;
let certC: signature = sign2(x_53, sskgen2(rkCA), q1) in
let x_52: sblocksize = concat7(K, pkK, spkK) in
new q2: sseed;
let certK: signature = sign2(x_52, sskgen2(rkCA), q2) in
out(c25, (pkC, spkC, spkK, pkCA));
(
  (
    (
      ! !_31 <= N
      in(c1[!_31], hostT: tgs);
      new n1: nonce;
      new n2: nonce;
      new r1: sseed;
      new tc0: timest;
      let x_76: sblocksize = padno(tc0, n2) in
      out(c2[!_31], (C, pkC, spkC, certC, tc0, n2, sign2(x_76, sskgen2(rkCs), r1), C, hostT, n1));
      in(c3[!_31], (m21: bitstring, =C, TGT_38: maxmac, m24: maxmac));
      let injbot1(concat2(hostZ: kas, pkZ: pkey, spkZ: spkey, ms1: signature, k3: key, k4: mkey, ck1: macs, ms2: signature)) = dec(m21, skC) in
      if (((hostZ = K) && ((pkZ = pkK) && (spkZ = spkK))) && check2(concat7(hostZ, pkZ, spkZ), pkCA, ms1)) then
      if (spkK = spkgen2(rkCA)) then
        yield
      else
        find @i_81 <= N suchthat defined(x_74[@i_81], rkCs) && ((spkK = spkgen2(rkCs)) && ((concat3(k3, k4, ck1) = x_74[@i_81]) && check2(concat3(k3, k4, ck1), spkK, ms2))) then
          if true then
          let x_74: sblocksize = padno(tc0, n2) in
          let y': maxmac = concat6(C, pkC, spkC, certC, tc0, n2, sign2(x_74, sskgen2(rkCs), r1), C, hostT, n1) in
          if checkmac(y', k4, ck1) then
          let injbot2(concat4(AK_40: key, =n1, tk_39: timest, =hostT)) = decsym(m24, k3) in
          event fullCK(hostZ, hostT, n1, m21, TGT_38, m24);
          out(c18[!_31], acceptC1(hostZ, hostT))
        orfind @i_81 <= N suchthat defined(x_76[@i_81], rkCs) && ((spkK = spkgen2(rkCs)) && ((concat3(k3, k4, ck1) = x_76[@i_81]) && check2(concat3(k3, k4, ck1), spkK, ms2))) then
          if true then
          let x_74: sblocksize = padno(tc0, n2) in
          let y': maxmac = concat6(C, pkC, spkC, certC, tc0, n2, sign2(x_74, sskgen2(rkCs), r1), C, hostT, n1) in
          if checkmac(y', k4, ck1) then
          let injbot2(concat4(AK_40: key, =n1, tk_39: timest, =hostT)) = decsym(m24, k3) in
          event fullCK(hostZ, hostT, n1, m21, TGT_38, m24);
          out(c18[!_31], acceptC1(hostZ, hostT))
        else
          if defined(rkCs) && (spkK = spkgen2(rkCs)) then
            if false then
            let x_74: sblocksize = padno(tc0, n2) in
            let y': maxmac = concat6(C, pkC, spkC, certC, tc0, n2, sign2(x_74, sskgen2(rkCs), r1), C, hostT, n1) in
            if checkmac(y', k4, ck1) then
            let injbot2(concat4(AK_40: key, =n1, tk_39: timest, =hostT)) = decsym(m24, k3) in
            event fullCK(hostZ, hostT, n1, m21, TGT_38, m24);
            out(c18[!_31], acceptC1(hostZ, hostT))
          else
            if check(concat3(k3, k4, ck1), spkK, ms2) then
            let x_74: sblocksize = padno(tc0, n2) in
            let y': maxmac = concat6(C, pkC, spkC, certC, tc0, n2, sign2(x_74, sskgen2(rkCs), r1), C, hostT, n1) in
            if checkmac(y', k4, ck1) then
            let injbot2(concat4(AK_40: key, =n1, tk_39: timest, =hostT)) = decsym(m24, k3) in
            event fullCK(hostZ, hostT, n1, m21, TGT_38, m24);
            out(c18[!_31], acceptC1(hostZ, hostT))
    |
      ! !_32 <= N
      in(c22[!_32], (hostY: client, pkY: pkey, spkY: spkey, ms3: signature, tc1: timest, n4: nonce, ms4: signature, hostV: client, hostW: tgs, n5: nonce));
      if (hostV = hostY) then
      if (((hostY = C) && ((pkY = pkC) && (spkY = spkC))) && check2(concat1(hostY, pkY, spkY), pkCA, ms3)) then
      if (spkY = spkgen2(rkCA)) then
        yield
      else
        find @i_78 <= N suchthat defined(x_74[@i_78], rkCs) && ((spkY = spkgen2(rkCs)) && ((padno(tc1, n4) = x_74[@i_78]) && check2(padno(tc1, n4), spkY, ms4))) then
          if true then
          find j1 <= N2 suchthat defined(Qkey[j1], Lhost[j1]) && (Lhost[j1] = hostW) then
          new s3: symkeyseed;
          let AK_35: key = kgen(s3) in
          new s1: symkeyseed;
          let k1: key = kgen(s1) in
          new s2: mkeyseed;
          let k2: mkey = mkgen(s2) in
          new tk_36: timest;
          new r4: symseed;
          let TGT_37: maxmac = encsym(concat5(AK_35, tk_36, hostY), Qkey[j1], r4) in
          new r5: symseed;
          let e24: maxmac = encsym(concat4(AK_35, n5, tk_36, hostW), k1, r5) in
          let y: maxmac = concat6(hostY, pkY, spkY, ms3, tc1, n4, ms4, hostY, hostW, n5) in
          let ck: macs = mac(y, k2) in
          new r6: sseed;
          let ms21: signature = sign(concat3(k1, k2, ck), sskK, r6) in
          new r7: seed;
          let e21: bitstring = enc(concat2(K, pkK, spkK, certK, k1, k2, ck, ms21), pkY, r7) in
          let m5: bitstring = (e21, hostY, TGT_37, e24) in
          event fullKC(hostY, hostW, n5, e21, TGT_37, e24);
          out(c23[!_32], m5)
        orfind @i_78 <= N suchthat defined(x_76[@i_78], rkCs) && ((spkY = spkgen2(rkCs)) && ((padno(tc1, n4) = x_76[@i_78]) && check2(padno(tc1, n4), spkY, ms4))) then
          if true then
          find j1 <= N2 suchthat defined(Qkey[j1], Lhost[j1]) && (Lhost[j1] = hostW) then
          new s3: symkeyseed;
          let AK_35: key = kgen(s3) in
          new s1: symkeyseed;
          let k1: key = kgen(s1) in
          new s2: mkeyseed;
          let k2: mkey = mkgen(s2) in
          new tk_36: timest;
          new r4: symseed;
          let TGT_37: maxmac = encsym(concat5(AK_35, tk_36, hostY), Qkey[j1], r4) in
          new r5: symseed;
          let e24: maxmac = encsym(concat4(AK_35, n5, tk_36, hostW), k1, r5) in
          let y: maxmac = concat6(hostY, pkY, spkY, ms3, tc1, n4, ms4, hostY, hostW, n5) in
          let ck: macs = mac(y, k2) in
          new r6: sseed;
          let ms21: signature = sign(concat3(k1, k2, ck), sskK, r6) in
          new r7: seed;
          let e21: bitstring = enc(concat2(K, pkK, spkK, certK, k1, k2, ck, ms21), pkY, r7) in
          let m5: bitstring = (e21, hostY, TGT_37, e24) in
          event fullKC(hostY, hostW, n5, e21, TGT_37, e24);
          out(c23[!_32], m5)
        else
          if defined(rkCs) && (spkY = spkgen2(rkCs)) then
            if false then
            find j1 <= N2 suchthat defined(Qkey[j1], Lhost[j1]) && (Lhost[j1] = hostW) then
            new s3: symkeyseed;
            let AK_35: key = kgen(s3) in
            new s1: symkeyseed;
            let k1: key = kgen(s1) in
            new s2: mkeyseed;
            let k2: mkey = mkgen(s2) in
            new tk_36: timest;
            new r4: symseed;
            let TGT_37: maxmac = encsym(concat5(AK_35, tk_36, hostY), Qkey[j1], r4) in
            new r5: symseed;
            let e24: maxmac = encsym(concat4(AK_35, n5, tk_36, hostW), k1, r5) in
            let y: maxmac = concat6(hostY, pkY, spkY, ms3, tc1, n4, ms4, hostY, hostW, n5) in
            let ck: macs = mac(y, k2) in
            new r6: sseed;
            let ms21: signature = sign(concat3(k1, k2, ck), sskK, r6) in
            new r7: seed;
            let e21: bitstring = enc(concat2(K, pkK, spkK, certK, k1, k2, ck, ms21), pkY, r7) in
            let m5: bitstring = (e21, hostY, TGT_37, e24) in
            event fullKC(hostY, hostW, n5, e21, TGT_37, e24);
            out(c23[!_32], m5)
          else
            if check(padno(tc1, n4), spkY, ms4) then
            find j1 <= N2 suchthat defined(Qkey[j1], Lhost[j1]) && (Lhost[j1] = hostW) then
            new s3: symkeyseed;
            let AK_35: key = kgen(s3) in
            new s1: symkeyseed;
            let k1: key = kgen(s1) in
            new s2: mkeyseed;
            let k2: mkey = mkgen(s2) in
            new tk_36: timest;
            new r4: symseed;
            let TGT_37: maxmac = encsym(concat5(AK_35, tk_36, hostY), Qkey[j1], r4) in
            new r5: symseed;
            let e24: maxmac = encsym(concat4(AK_35, n5, tk_36, hostW), k1, r5) in
            let y: maxmac = concat6(hostY, pkY, spkY, ms3, tc1, n4, ms4, hostY, hostW, n5) in
            let ck: macs = mac(y, k2) in
            new r6: sseed;
            let ms21: signature = sign(concat3(k1, k2, ck), sskK, r6) in
            new r7: seed;
            let e21: bitstring = enc(concat2(K, pkK, spkK, certK, k1, k2, ck, ms21), pkY, r7) in
            let m5: bitstring = (e21, hostY, TGT_37, e24) in
            event fullKC(hostY, hostW, n5, e21, TGT_37, e24);
            out(c23[!_32], m5)
    )
  |
    ! !_33 <= N2
    in(c21[!_33], (Lhost: tgs, Lkey: key));
    if (Lhost = T) then
      let Qkey: key = Kt
    else
      let Qkey: key = Lkey
  )
|
  ! !_34 <= N2
  in(c16[!_34], (Mhost1: tgs, Mhost2: server, Mkey: key))
)


Applying simplify [Difference of probability Psigncoll + 1. / |skeyseed|] yields

Game 11 is
in(start, ());
new rkC: keyseed;
let pkC: pkey = pkgen(rkC) in
let skC: skey = skgen(rkC) in
new rkCs: skeyseed;
let spkC: spkey = spkgen2(rkCs) in
new rkK: keyseed;
let pkK: pkey = pkgen(rkK) in
new rkKs: skeyseed;
let spkK: spkey = spkgen(rkKs) in
let sskK: sskey = sskgen(rkKs) in
new rkCA: skeyseed;
let pkCA: spkey = spkgen2(rkCA) in
new rKt: symkeyseed;
let Kt: key = kgen(rKt) in
let x_53: sblocksize = concat1(C, pkC, spkC) in
new q1: sseed;
let certC: signature = sign2(x_53, sskgen2(rkCA), q1) in
let x_52: sblocksize = concat7(K, pkK, spkK) in
new q2: sseed;
let certK: signature = sign2(x_52, sskgen2(rkCA), q2) in
out(c25, (pkC, spkC, spkK, pkCA));
(
  (
    (
      ! !_31 <= N
      in(c1[!_31], hostT: tgs);
      new n1: nonce;
      new n2: nonce;
      new r1: sseed;
      new tc0: timest;
      let x_76: sblocksize = padno(tc0, n2) in
      out(c2[!_31], (C, pkC, spkC, certC, tc0, n2, sign2(x_76, sskgen2(rkCs), r1), C, hostT, n1));
      in(c3[!_31], (m21: bitstring, =C, TGT_38: maxmac, m24: maxmac));
      let injbot1(concat2(hostZ: kas, pkZ: pkey, spkZ: spkey, ms1: signature, k3: key, k4: mkey, ck1: macs, ms2: signature)) = dec(m21, skC) in
      if (((hostZ = K) && ((pkZ = pkK) && (spkZ = spkK))) && check2(concat7(hostZ, pkZ, spkZ), pkCA, ms1)) then
      if (spkK = spkgen2(rkCA)) then
        yield
      else
        if (spkK = spkgen2(rkCs)) then
          yield
        else
          if check(concat3(k3, k4, ck1), spkK, ms2) then
          let x_74: sblocksize = padno(tc0, n2) in
          let y': maxmac = concat6(C, pkC, spkC, certC, tc0, n2, sign2(x_74, sskgen2(rkCs), r1), C, hostT, n1) in
          if checkmac(y', k4, ck1) then
          let injbot2(concat4(AK_40: key, =n1, tk_39: timest, =hostT)) = decsym(m24, k3) in
          event fullCK(hostZ, hostT, n1, m21, TGT_38, m24);
          out(c18[!_31], acceptC1(hostZ, hostT))
    |
      ! !_32 <= N
      in(c22[!_32], (hostY: client, pkY: pkey, spkY: spkey, ms3: signature, tc1: timest, n4: nonce, ms4: signature, hostV: client, hostW: tgs, n5: nonce));
      if (hostV = hostY) then
      if (((hostY = C) && ((pkY = pkC) && (spkY = spkC))) && check2(concat1(hostY, pkY, spkY), pkCA, ms3)) then
      find @i_78 <= N suchthat defined(n2[@i_78], tc0[@i_78], x_74[@i_78]) && (((tc1 = tc0[@i_78]) && (n4 = n2[@i_78])) && check2(padno(tc1, n4), spkY, ms4)) then
        find j1 <= N2 suchthat defined(Qkey[j1], Lhost[j1]) && (Lhost[j1] = hostW) then
        new s3: symkeyseed;
        let AK_35: key = kgen(s3) in
        new s1: symkeyseed;
        let k1: key = kgen(s1) in
        new s2: mkeyseed;
        let k2: mkey = mkgen(s2) in
        new tk_36: timest;
        new r4: symseed;
        let TGT_37: maxmac = encsym(concat5(AK_35, tk_36, hostY), Qkey[j1], r4) in
        new r5: symseed;
        let e24: maxmac = encsym(concat4(AK_35, n5, tk_36, hostW), k1, r5) in
        let y: maxmac = concat6(hostY, pkY, spkY, ms3, tc1, n4, ms4, hostY, hostW, n5) in
        let ck: macs = mac(y, k2) in
        new r6: sseed;
        let ms21: signature = sign(concat3(k1, k2, ck), sskK, r6) in
        new r7: seed;
        let e21: bitstring = enc(concat2(K, pkK, spkK, certK, k1, k2, ck, ms21), pkY, r7) in
        let m5: bitstring = (e21, hostY, TGT_37, e24) in
        event fullKC(hostY, hostW, n5, e21, TGT_37, e24);
        out(c23[!_32], m5)
      orfind @i_78 <= N suchthat defined(n2[@i_78], tc0[@i_78], x_76[@i_78]) && (((tc1 = tc0[@i_78]) && (n4 = n2[@i_78])) && check2(padno(tc1, n4), spkY, ms4)) then
        find j1 <= N2 suchthat defined(Qkey[j1], Lhost[j1]) && (Lhost[j1] = hostW) then
        new s3: symkeyseed;
        let AK_35: key = kgen(s3) in
        new s1: symkeyseed;
        let k1: key = kgen(s1) in
        new s2: mkeyseed;
        let k2: mkey = mkgen(s2) in
        new tk_36: timest;
        new r4: symseed;
        let TGT_37: maxmac = encsym(concat5(AK_35, tk_36, hostY), Qkey[j1], r4) in
        new r5: symseed;
        let e24: maxmac = encsym(concat4(AK_35, n5, tk_36, hostW), k1, r5) in
        let y: maxmac = concat6(hostY, pkY, spkY, ms3, tc1, n4, ms4, hostY, hostW, n5) in
        let ck: macs = mac(y, k2) in
        new r6: sseed;
        let ms21: signature = sign(concat3(k1, k2, ck), sskK, r6) in
        new r7: seed;
        let e21: bitstring = enc(concat2(K, pkK, spkK, certK, k1, k2, ck, ms21), pkY, r7) in
        let m5: bitstring = (e21, hostY, TGT_37, e24) in
        event fullKC(hostY, hostW, n5, e21, TGT_37, e24);
        out(c23[!_32], m5)
    )
  |
    ! !_33 <= N2
    in(c21[!_33], (Lhost: tgs, Lkey: key));
    if (Lhost = T) then
      let Qkey: key = Kt
    else
      let Qkey: key = Lkey
  )
|
  ! !_34 <= N2
  in(c16[!_34], (Mhost1: tgs, Mhost2: server, Mkey: key))
)


Applying move new all binders yields

Game 12 is
in(start, ());
new rkC: keyseed;
let pkC: pkey = pkgen(rkC) in
let skC: skey = skgen(rkC) in
new rkCs: skeyseed;
let spkC: spkey = spkgen2(rkCs) in
new rkK: keyseed;
let pkK: pkey = pkgen(rkK) in
new rkKs: skeyseed;
let spkK: spkey = spkgen(rkKs) in
let sskK: sskey = sskgen(rkKs) in
new rkCA: skeyseed;
let pkCA: spkey = spkgen2(rkCA) in
new rKt: symkeyseed;
let Kt: key = kgen(rKt) in
let x_53: sblocksize = concat1(C, pkC, spkC) in
new q1: sseed;
let certC: signature = sign2(x_53, sskgen2(rkCA), q1) in
let x_52: sblocksize = concat7(K, pkK, spkK) in
new q2: sseed;
let certK: signature = sign2(x_52, sskgen2(rkCA), q2) in
out(c25, (pkC, spkC, spkK, pkCA));
(
  (
    (
      ! !_31 <= N
      in(c1[!_31], hostT: tgs);
      new n2: nonce;
      new tc0: timest;
      let x_76: sblocksize = padno(tc0, n2) in
      new r1: sseed;
      new n1: nonce;
      out(c2[!_31], (C, pkC, spkC, certC, tc0, n2, sign2(x_76, sskgen2(rkCs), r1), C, hostT, n1));
      in(c3[!_31], (m21: bitstring, =C, TGT_38: maxmac, m24: maxmac));
      let injbot1(concat2(hostZ: kas, pkZ: pkey, spkZ: spkey, ms1: signature, k3: key, k4: mkey, ck1: macs, ms2: signature)) = dec(m21, skC) in
      if (((hostZ = K) && ((pkZ = pkK) && (spkZ = spkK))) && check2(concat7(hostZ, pkZ, spkZ), pkCA, ms1)) then
      if (spkK = spkgen2(rkCA)) then
        yield
      else
        if (spkK = spkgen2(rkCs)) then
          yield
        else
          if check(concat3(k3, k4, ck1), spkK, ms2) then
          let x_74: sblocksize = padno(tc0, n2) in
          let y': maxmac = concat6(C, pkC, spkC, certC, tc0, n2, sign2(x_74, sskgen2(rkCs), r1), C, hostT, n1) in
          if checkmac(y', k4, ck1) then
          let injbot2(concat4(AK_40: key, =n1, tk_39: timest, =hostT)) = decsym(m24, k3) in
          event fullCK(hostZ, hostT, n1, m21, TGT_38, m24);
          out(c18[!_31], acceptC1(hostZ, hostT))
    |
      ! !_32 <= N
      in(c22[!_32], (hostY: client, pkY: pkey, spkY: spkey, ms3: signature, tc1: timest, n4: nonce, ms4: signature, hostV: client, hostW: tgs, n5: nonce));
      if (hostV = hostY) then
      if (((hostY = C) && ((pkY = pkC) && (spkY = spkC))) && check2(concat1(hostY, pkY, spkY), pkCA, ms3)) then
      find @i_78 <= N suchthat defined(n2[@i_78], tc0[@i_78], x_74[@i_78]) && (((tc1 = tc0[@i_78]) && (n4 = n2[@i_78])) && check2(padno(tc1, n4), spkY, ms4)) then
        find j1 <= N2 suchthat defined(Qkey[j1], Lhost[j1]) && (Lhost[j1] = hostW) then
        new s3: symkeyseed;
        let AK_35: key = kgen(s3) in
        new s1: symkeyseed;
        let k1: key = kgen(s1) in
        new s2: mkeyseed;
        let k2: mkey = mkgen(s2) in
        new r4: symseed;
        new tk_36: timest;
        let TGT_37: maxmac = encsym(concat5(AK_35, tk_36, hostY), Qkey[j1], r4) in
        new r5: symseed;
        let e24: maxmac = encsym(concat4(AK_35, n5, tk_36, hostW), k1, r5) in
        let y: maxmac = concat6(hostY, pkY, spkY, ms3, tc1, n4, ms4, hostY, hostW, n5) in
        let ck: macs = mac(y, k2) in
        new r6: sseed;
        let ms21: signature = sign(concat3(k1, k2, ck), sskK, r6) in
        new r7: seed;
        let e21: bitstring = enc(concat2(K, pkK, spkK, certK, k1, k2, ck, ms21), pkY, r7) in
        let m5: bitstring = (e21, hostY, TGT_37, e24) in
        event fullKC(hostY, hostW, n5, e21, TGT_37, e24);
        out(c23[!_32], m5)
      orfind @i_78 <= N suchthat defined(n2[@i_78], tc0[@i_78], x_76[@i_78]) && (((tc1 = tc0[@i_78]) && (n4 = n2[@i_78])) && check2(padno(tc1, n4), spkY, ms4)) then
        find j1 <= N2 suchthat defined(Qkey[j1], Lhost[j1]) && (Lhost[j1] = hostW) then
        new s3: symkeyseed;
        let AK_35: key = kgen(s3) in
        new s1: symkeyseed;
        let k1: key = kgen(s1) in
        new s2: mkeyseed;
        let k2: mkey = mkgen(s2) in
        new r4: symseed;
        new tk_36: timest;
        let TGT_37: maxmac = encsym(concat5(AK_35, tk_36, hostY), Qkey[j1], r4) in
        new r5: symseed;
        let e24: maxmac = encsym(concat4(AK_35, n5, tk_36, hostW), k1, r5) in
        let y: maxmac = concat6(hostY, pkY, spkY, ms3, tc1, n4, ms4, hostY, hostW, n5) in
        let ck: macs = mac(y, k2) in
        new r6: sseed;
        let ms21: signature = sign(concat3(k1, k2, ck), sskK, r6) in
        new r7: seed;
        let e21: bitstring = enc(concat2(K, pkK, spkK, certK, k1, k2, ck, ms21), pkY, r7) in
        let m5: bitstring = (e21, hostY, TGT_37, e24) in
        event fullKC(hostY, hostW, n5, e21, TGT_37, e24);
        out(c23[!_32], m5)
    )
  |
    ! !_33 <= N2
    in(c21[!_33], (Lhost: tgs, Lkey: key));
    if (Lhost = T) then
      let Qkey: key = Kt
    else
      let Qkey: key = Lkey
  )
|
  ! !_34 <= N2
  in(c16[!_34], (Mhost1: tgs, Mhost2: server, Mkey: key))
)


Applying remove assignments of useless yields

Game 13 is
in(start, ());
new rkC: keyseed;
let pkC: pkey = pkgen(rkC) in
let skC: skey = skgen(rkC) in
new rkCs: skeyseed;
let spkC: spkey = spkgen2(rkCs) in
new rkK: keyseed;
let pkK: pkey = pkgen(rkK) in
new rkKs: skeyseed;
let spkK: spkey = spkgen(rkKs) in
let sskK: sskey = sskgen(rkKs) in
new rkCA: skeyseed;
let pkCA: spkey = spkgen2(rkCA) in
new rKt: symkeyseed;
let Kt: key = kgen(rKt) in
let x_53: sblocksize = concat1(C, pkC, spkC) in
new q1: sseed;
let certC: signature = sign2(x_53, sskgen2(rkCA), q1) in
let x_52: sblocksize = concat7(K, pkK, spkK) in
new q2: sseed;
let certK: signature = sign2(x_52, sskgen2(rkCA), q2) in
out(c25, (pkC, spkC, spkK, pkCA));
(
  (
    (
      ! !_31 <= N
      in(c1[!_31], hostT: tgs);
      new n2: nonce;
      new tc0: timest;
      let x_76: sblocksize = padno(tc0, n2) in
      new r1: sseed;
      new n1: nonce;
      out(c2[!_31], (C, pkC, spkC, certC, tc0, n2, sign2(x_76, sskgen2(rkCs), r1), C, hostT, n1));
      in(c3[!_31], (m21: bitstring, =C, TGT_38: maxmac, m24: maxmac));
      let injbot1(concat2(hostZ: kas, pkZ: pkey, spkZ: spkey, ms1: signature, k3: key, k4: mkey, ck1: macs, ms2: signature)) = dec(m21, skC) in
      if (((hostZ = K) && ((pkZ = pkK) && (spkZ = spkK))) && check2(concat7(hostZ, pkZ, spkZ), pkCA, ms1)) then
      if (spkK = spkgen2(rkCA)) then
        yield
      else
        if (spkK = spkgen2(rkCs)) then
          yield
        else
          if check(concat3(k3, k4, ck1), spkK, ms2) then
          let x_74: sblocksize = padno(tc0, n2) in
          let y': maxmac = concat6(C, pkC, spkC, certC, tc0, n2, sign2(x_74, sskgen2(rkCs), r1), C, hostT, n1) in
          if checkmac(y', k4, ck1) then
          let injbot2(concat4(AK_40: key, =n1, tk_39: timest, =hostT)) = decsym(m24, k3) in
          event fullCK(hostZ, hostT, n1, m21, TGT_38, m24);
          out(c18[!_31], acceptC1(hostZ, hostT))
    |
      ! !_32 <= N
      in(c22[!_32], (hostY: client, pkY: pkey, spkY: spkey, ms3: signature, tc1: timest, n4: nonce, ms4: signature, hostV: client, hostW: tgs, n5: nonce));
      if (hostV = hostY) then
      if (((hostY = C) && ((pkY = pkC) && (spkY = spkC))) && check2(concat1(hostY, pkY, spkY), pkCA, ms3)) then
      find @i_78 <= N suchthat defined(n2[@i_78], tc0[@i_78], x_74[@i_78]) && (((tc1 = tc0[@i_78]) && (n4 = n2[@i_78])) && check2(padno(tc1, n4), spkY, ms4)) then
        find j1 <= N2 suchthat defined(Qkey[j1], Lhost[j1]) && (Lhost[j1] = hostW) then
        new s3_92: symkeyseed;
        let AK_35: key = kgen(s3_92) in
        new s1_93: symkeyseed;
        let k1: key = kgen(s1_93) in
        new s2_94: mkeyseed;
        let k2: mkey = mkgen(s2_94) in
        new r4_95: symseed;
        new tk_96: timest;
        let TGT_37: maxmac = encsym(concat5(AK_35, tk_96, hostY), Qkey[j1], r4_95) in
        new r5_97: symseed;
        let e24: maxmac = encsym(concat4(AK_35, n5, tk_96, hostW), k1, r5_97) in
        let y: maxmac = concat6(hostY, pkY, spkY, ms3, tc1, n4, ms4, hostY, hostW, n5) in
        let ck: macs = mac(y, k2) in
        new r6_98: sseed;
        let ms21: signature = sign(concat3(k1, k2, ck), sskK, r6_98) in
        new r7_99: seed;
        let e21: bitstring = enc(concat2(K, pkK, spkK, certK, k1, k2, ck, ms21), pkY, r7_99) in
        let m5: bitstring = (e21, hostY, TGT_37, e24) in
        event fullKC(hostY, hostW, n5, e21, TGT_37, e24);
        out(c23[!_32], m5)
      orfind @i_78 <= N suchthat defined(n2[@i_78], tc0[@i_78], x_76[@i_78]) && (((tc1 = tc0[@i_78]) && (n4 = n2[@i_78])) && check2(padno(tc1, n4), spkY, ms4)) then
        find j1 <= N2 suchthat defined(Qkey[j1], Lhost[j1]) && (Lhost[j1] = hostW) then
        new s3_100: symkeyseed;
        let AK_35: key = kgen(s3_100) in
        new s1_101: symkeyseed;
        let k1: key = kgen(s1_101) in
        new s2_102: mkeyseed;
        let k2: mkey = mkgen(s2_102) in
        new r4_103: symseed;
        new tk_104: timest;
        let TGT_37: maxmac = encsym(concat5(AK_35, tk_104, hostY), Qkey[j1], r4_103) in
        new r5_105: symseed;
        let e24: maxmac = encsym(concat4(AK_35, n5, tk_104, hostW), k1, r5_105) in
        let y: maxmac = concat6(hostY, pkY, spkY, ms3, tc1, n4, ms4, hostY, hostW, n5) in
        let ck: macs = mac(y, k2) in
        new r6_106: sseed;
        let ms21: signature = sign(concat3(k1, k2, ck), sskK, r6_106) in
        new r7_107: seed;
        let e21: bitstring = enc(concat2(K, pkK, spkK, certK, k1, k2, ck, ms21), pkY, r7_107) in
        let m5: bitstring = (e21, hostY, TGT_37, e24) in
        event fullKC(hostY, hostW, n5, e21, TGT_37, e24);
        out(c23[!_32], m5)
    )
  |
    ! !_33 <= N2
    in(c21[!_33], (Lhost: tgs, Lkey: key));
    if (Lhost = T) then
      let Qkey: key = Kt
    else
      let Qkey: key = Lkey
  )
|
  ! !_34 <= N2
  in(c16[!_34], (Mhost1: tgs, Mhost2: server, Mkey: key))
)


Applying remove assignments of binder skC yields

Game 14 is
in(start, ());
new rkC: keyseed;
let pkC: pkey = pkgen(rkC) in
new rkCs: skeyseed;
let spkC: spkey = spkgen2(rkCs) in
new rkK: keyseed;
let pkK: pkey = pkgen(rkK) in
new rkKs: skeyseed;
let spkK: spkey = spkgen(rkKs) in
let sskK: sskey = sskgen(rkKs) in
new rkCA: skeyseed;
let pkCA: spkey = spkgen2(rkCA) in
new rKt: symkeyseed;
let Kt: key = kgen(rKt) in
let x_53: sblocksize = concat1(C, pkC, spkC) in
new q1: sseed;
let certC: signature = sign2(x_53, sskgen2(rkCA), q1) in
let x_52: sblocksize = concat7(K, pkK, spkK) in
new q2: sseed;
let certK: signature = sign2(x_52, sskgen2(rkCA), q2) in
out(c25, (pkC, spkC, spkK, pkCA));
(
  (
    (
      ! !_31 <= N
      in(c1[!_31], hostT: tgs);
      new n2: nonce;
      new tc0: timest;
      let x_76: sblocksize = padno(tc0, n2) in
      new r1: sseed;
      new n1: nonce;
      out(c2[!_31], (C, pkC, spkC, certC, tc0, n2, sign2(x_76, sskgen2(rkCs), r1), C, hostT, n1));
      in(c3[!_31], (m21: bitstring, =C, TGT_38: maxmac, m24: maxmac));
      let injbot1(concat2(hostZ: kas, pkZ: pkey, spkZ: spkey, ms1: signature, k3: key, k4: mkey, ck1: macs, ms2: signature)) = dec(m21, skgen(rkC)) in
      if (((hostZ = K) && ((pkZ = pkK) && (spkZ = spkK))) && check2(concat7(hostZ, pkZ, spkZ), pkCA, ms1)) then
      if (spkK = spkgen2(rkCA)) then
        yield
      else
        if (spkK = spkgen2(rkCs)) then
          yield
        else
          if check(concat3(k3, k4, ck1), spkK, ms2) then
          let x_74: sblocksize = padno(tc0, n2) in
          let y': maxmac = concat6(C, pkC, spkC, certC, tc0, n2, sign2(x_74, sskgen2(rkCs), r1), C, hostT, n1) in
          if checkmac(y', k4, ck1) then
          let injbot2(concat4(AK_40: key, =n1, tk_39: timest, =hostT)) = decsym(m24, k3) in
          event fullCK(hostZ, hostT, n1, m21, TGT_38, m24);
          out(c18[!_31], acceptC1(hostZ, hostT))
    |
      ! !_32 <= N
      in(c22[!_32], (hostY: client, pkY: pkey, spkY: spkey, ms3: signature, tc1: timest, n4: nonce, ms4: signature, hostV: client, hostW: tgs, n5: nonce));
      if (hostV = hostY) then
      if (((hostY = C) && ((pkY = pkC) && (spkY = spkC))) && check2(concat1(hostY, pkY, spkY), pkCA, ms3)) then
      find @i_78 <= N suchthat defined(n2[@i_78], tc0[@i_78], x_74[@i_78]) && (((tc1 = tc0[@i_78]) && (n4 = n2[@i_78])) && check2(padno(tc1, n4), spkY, ms4)) then
        find j1 <= N2 suchthat defined(Qkey[j1], Lhost[j1]) && (Lhost[j1] = hostW) then
        new s3_92: symkeyseed;
        let AK_35: key = kgen(s3_92) in
        new s1_93: symkeyseed;
        let k1: key = kgen(s1_93) in
        new s2_94: mkeyseed;
        let k2: mkey = mkgen(s2_94) in
        new r4_95: symseed;
        new tk_96: timest;
        let TGT_37: maxmac = encsym(concat5(AK_35, tk_96, hostY), Qkey[j1], r4_95) in
        new r5_97: symseed;
        let e24: maxmac = encsym(concat4(AK_35, n5, tk_96, hostW), k1, r5_97) in
        let y: maxmac = concat6(hostY, pkY, spkY, ms3, tc1, n4, ms4, hostY, hostW, n5) in
        let ck: macs = mac(y, k2) in
        new r6_98: sseed;
        let ms21: signature = sign(concat3(k1, k2, ck), sskK, r6_98) in
        new r7_99: seed;
        let e21: bitstring = enc(concat2(K, pkK, spkK, certK, k1, k2, ck, ms21), pkY, r7_99) in
        let m5: bitstring = (e21, hostY, TGT_37, e24) in
        event fullKC(hostY, hostW, n5, e21, TGT_37, e24);
        out(c23[!_32], m5)
      orfind @i_78 <= N suchthat defined(n2[@i_78], tc0[@i_78], x_76[@i_78]) && (((tc1 = tc0[@i_78]) && (n4 = n2[@i_78])) && check2(padno(tc1, n4), spkY, ms4)) then
        find j1 <= N2 suchthat defined(Qkey[j1], Lhost[j1]) && (Lhost[j1] = hostW) then
        new s3_100: symkeyseed;
        let AK_35: key = kgen(s3_100) in
        new s1_101: symkeyseed;
        let k1: key = kgen(s1_101) in
        new s2_102: mkeyseed;
        let k2: mkey = mkgen(s2_102) in
        new r4_103: symseed;
        new tk_104: timest;
        let TGT_37: maxmac = encsym(concat5(AK_35, tk_104, hostY), Qkey[j1], r4_103) in
        new r5_105: symseed;
        let e24: maxmac = encsym(concat4(AK_35, n5, tk_104, hostW), k1, r5_105) in
        let y: maxmac = concat6(hostY, pkY, spkY, ms3, tc1, n4, ms4, hostY, hostW, n5) in
        let ck: macs = mac(y, k2) in
        new r6_106: sseed;
        let ms21: signature = sign(concat3(k1, k2, ck), sskK, r6_106) in
        new r7_107: seed;
        let e21: bitstring = enc(concat2(K, pkK, spkK, certK, k1, k2, ck, ms21), pkY, r7_107) in
        let m5: bitstring = (e21, hostY, TGT_37, e24) in
        event fullKC(hostY, hostW, n5, e21, TGT_37, e24);
        out(c23[!_32], m5)
    )
  |
    ! !_33 <= N2
    in(c21[!_33], (Lhost: tgs, Lkey: key));
    if (Lhost = T) then
      let Qkey: key = Kt
    else
      let Qkey: key = Lkey
  )
|
  ! !_34 <= N2
  in(c16[!_34], (Mhost1: tgs, Mhost2: server, Mkey: key))
)


Applying equivalence
equiv ! !_1 <= N3 new r: keyseed; (
  () -> pkgen(r),
  ! !_2 <= N2 (m: bitstring) -> dec(m, skgen(r))), ! !_3 <= N4 new r2: seed; (x: blocksize, y: pkey) -> enc(x, y, r2) [all]
<=(N3 * N4 * Penc(time, N2))=>
      ! !_4 <= N3 new r: keyseed; (
  () -> pkgen2(r),
  ! !_5 <= N2 (m: bitstring) -> find j <= N4 suchthat defined(m2[j], y[j], x[j]) && ((y[j] = pkgen2(r)) && (m = m2[j])) then injbot1(x[j]) else dec2(m, skgen2(r))), ! !_6 <= N4 new r2: seed; new r3: seed; (x_49: blocksize, y_48: pkey) -> let x: blocksize = x_49 in let y: pkey = y_48 in find k <= N3 suchthat defined(r[k]) && (y = pkgen2(r[k])) then let m2: bitstring = enc2(Z, y, r2) in m2 else enc(x, y, r3)
with r7_107, r7_99, rkC [Difference of probability N * Penc(time + time(context for game 14), N)] yields

Game 15 is
in(start, ());
new rkC: keyseed;
let pkC: pkey = pkgen2(rkC) in
new rkCs: skeyseed;
let spkC: spkey = spkgen2(rkCs) in
new rkK: keyseed;
let pkK: pkey = pkgen(rkK) in
new rkKs: skeyseed;
let spkK: spkey = spkgen(rkKs) in
let sskK: sskey = sskgen(rkKs) in
new rkCA: skeyseed;
let pkCA: spkey = spkgen2(rkCA) in
new rKt: symkeyseed;
let Kt: key = kgen(rKt) in
let x_53: sblocksize = concat1(C, pkC, spkC) in
new q1: sseed;
let certC: signature = sign2(x_53, sskgen2(rkCA), q1) in
let x_52: sblocksize = concat7(K, pkK, spkK) in
new q2: sseed;
let certK: signature = sign2(x_52, sskgen2(rkCA), q2) in
out(c25, (pkC, spkC, spkK, pkCA));
(
  (
    (
      ! !_31 <= N
      in(c1[!_31], hostT: tgs);
      new n2: nonce;
      new tc0: timest;
      let x_76: sblocksize = padno(tc0, n2) in
      new r1: sseed;
      new n1: nonce;
      out(c2[!_31], (C, pkC, spkC, certC, tc0, n2, sign2(x_76, sskgen2(rkCs), r1), C, hostT, n1));
      in(c3[!_31], (m21: bitstring, =C, TGT_38: maxmac, m24: maxmac));
      find @i_133 <= N suchthat defined(m2_118[@i_133], y_119[@i_133], x_120[@i_133]) && ((y_119[@i_133] = pkgen2(rkC)) && (m21 = m2_118[@i_133])) then
        let injbot1(concat2(hostZ: kas, pkZ: pkey, spkZ: spkey, ms1: signature, k3: key, k4: mkey, ck1: macs, ms2: signature)) = injbot1(x_120[@i_133]) in
        if (((hostZ = K) && ((pkZ = pkK) && (spkZ = spkK))) && check2(concat7(hostZ, pkZ, spkZ), pkCA, ms1)) then
        if (spkK = spkgen2(rkCA)) then
          yield
        else
          if (spkK = spkgen2(rkCs)) then
            yield
          else
            if check(concat3(k3, k4, ck1), spkK, ms2) then
            let x_74: sblocksize = padno(tc0, n2) in
            let y': maxmac = concat6(C, pkC, spkC, certC, tc0, n2, sign2(x_74, sskgen2(rkCs), r1), C, hostT, n1) in
            if checkmac(y', k4, ck1) then
            let injbot2(concat4(AK_40: key, =n1, tk_39: timest, =hostT)) = decsym(m24, k3) in
            event fullCK(hostZ, hostT, n1, m21, TGT_38, m24);
            out(c18[!_31], acceptC1(hostZ, hostT))
      orfind @i_132 <= N suchthat defined(m2_123[@i_132], y_124[@i_132], x_125[@i_132]) && ((y_124[@i_132] = pkgen2(rkC)) && (m21 = m2_123[@i_132])) then
        let injbot1(concat2(hostZ: kas, pkZ: pkey, spkZ: spkey, ms1: signature, k3: key, k4: mkey, ck1: macs, ms2: signature)) = injbot1(x_125[@i_132]) in
        if (((hostZ = K) && ((pkZ = pkK) && (spkZ = spkK))) && check2(concat7(hostZ, pkZ, spkZ), pkCA, ms1)) then
        if (spkK = spkgen2(rkCA)) then
          yield
        else
          if (spkK = spkgen2(rkCs)) then
            yield
          else
            if check(concat3(k3, k4, ck1), spkK, ms2) then
            let x_74: sblocksize = padno(tc0, n2) in
            let y': maxmac = concat6(C, pkC, spkC, certC, tc0, n2, sign2(x_74, sskgen2(rkCs), r1), C, hostT, n1) in
            if checkmac(y', k4, ck1) then
            let injbot2(concat4(AK_40: key, =n1, tk_39: timest, =hostT)) = decsym(m24, k3) in
            event fullCK(hostZ, hostT, n1, m21, TGT_38, m24);
            out(c18[!_31], acceptC1(hostZ, hostT))
      else
        let injbot1(concat2(hostZ: kas, pkZ: pkey, spkZ: spkey, ms1: signature, k3: key, k4: mkey, ck1: macs, ms2: signature)) = dec2(m21, skgen2(rkC)) in
        if (((hostZ = K) && ((pkZ = pkK) && (spkZ = spkK))) && check2(concat7(hostZ, pkZ, spkZ), pkCA, ms1)) then
        if (spkK = spkgen2(rkCA)) then
          yield
        else
          if (spkK = spkgen2(rkCs)) then
            yield
          else
            if check(concat3(k3, k4, ck1), spkK, ms2) then
            let x_74: sblocksize = padno(tc0, n2) in
            let y': maxmac = concat6(C, pkC, spkC, certC, tc0, n2, sign2(x_74, sskgen2(rkCs), r1), C, hostT, n1) in
            if checkmac(y', k4, ck1) then
            let injbot2(concat4(AK_40: key, =n1, tk_39: timest, =hostT)) = decsym(m24, k3) in
            event fullCK(hostZ, hostT, n1, m21, TGT_38, m24);
            out(c18[!_31], acceptC1(hostZ, hostT))
    |
      ! !_32 <= N
      in(c22[!_32], (hostY: client, pkY: pkey, spkY: spkey, ms3: signature, tc1: timest, n4: nonce, ms4: signature, hostV: client, hostW: tgs, n5: nonce));
      if (hostV = hostY) then
      if (((hostY = C) && ((pkY = pkC) && (spkY = spkC))) && check2(concat1(hostY, pkY, spkY), pkCA, ms3)) then
      find @i_78 <= N suchthat defined(n2[@i_78], tc0[@i_78], x_74[@i_78]) && (((tc1 = tc0[@i_78]) && (n4 = n2[@i_78])) && check2(padno(tc1, n4), spkY, ms4)) then
        find j1 <= N2 suchthat defined(Qkey[j1], Lhost[j1]) && (Lhost[j1] = hostW) then
        new s3_92: symkeyseed;
        let AK_35: key = kgen(s3_92) in
        new s1_93: symkeyseed;
        let k1: key = kgen(s1_93) in
        new s2_94: mkeyseed;
        let k2: mkey = mkgen(s2_94) in
        new r4_95: symseed;
        new tk_96: timest;
        let TGT_37: maxmac = encsym(concat5(AK_35, tk_96, hostY), Qkey[j1], r4_95) in
        new r5_97: symseed;
        let e24: maxmac = encsym(concat4(AK_35, n5, tk_96, hostW), k1, r5_97) in
        let y: maxmac = concat6(hostY, pkY, spkY, ms3, tc1, n4, ms4, hostY, hostW, n5) in
        let ck: macs = mac(y, k2) in
        new r6_98: sseed;
        let ms21: signature = sign(concat3(k1, k2, ck), sskK, r6_98) in
        new r7_99: seed;
        new r3_121: seed;
        let x_120: blocksize = concat2(K, pkK, spkK, certK, k1, k2, ck, ms21) in
        let y_119: pkey = pkY in
        if defined(rkC) && (y_119 = pkgen2(rkC)) then
          let m2_118: bitstring = enc2(Z, y_119, r7_99) in
          let e21: bitstring = m2_118 in
          let m5: bitstring = (e21, hostY, TGT_37, e24) in
          event fullKC(hostY, hostW, n5, e21, TGT_37, e24);
          out(c23[!_32], m5)
        else
          let e21: bitstring = enc(x_120, y_119, r3_121) in
          let m5: bitstring = (e21, hostY, TGT_37, e24) in
          event fullKC(hostY, hostW, n5, e21, TGT_37, e24);
          out(c23[!_32], m5)
      orfind @i_78 <= N suchthat defined(n2[@i_78], tc0[@i_78], x_76[@i_78]) && (((tc1 = tc0[@i_78]) && (n4 = n2[@i_78])) && check2(padno(tc1, n4), spkY, ms4)) then
        find j1 <= N2 suchthat defined(Qkey[j1], Lhost[j1]) && (Lhost[j1] = hostW) then
        new s3_100: symkeyseed;
        let AK_35: key = kgen(s3_100) in
        new s1_101: symkeyseed;
        let k1: key = kgen(s1_101) in
        new s2_102: mkeyseed;
        let k2: mkey = mkgen(s2_102) in
        new r4_103: symseed;
        new tk_104: timest;
        let TGT_37: maxmac = encsym(concat5(AK_35, tk_104, hostY), Qkey[j1], r4_103) in
        new r5_105: symseed;
        let e24: maxmac = encsym(concat4(AK_35, n5, tk_104, hostW), k1, r5_105) in
        let y: maxmac = concat6(hostY, pkY, spkY, ms3, tc1, n4, ms4, hostY, hostW, n5) in
        let ck: macs = mac(y, k2) in
        new r6_106: sseed;
        let ms21: signature = sign(concat3(k1, k2, ck), sskK, r6_106) in
        new r7_107: seed;
        new r3_126: seed;
        let x_125: blocksize = concat2(K, pkK, spkK, certK, k1, k2, ck, ms21) in
        let y_124: pkey = pkY in
        if defined(rkC) && (y_124 = pkgen2(rkC)) then
          let m2_123: bitstring = enc2(Z, y_124, r7_107) in
          let e21: bitstring = m2_123 in
          let m5: bitstring = (e21, hostY, TGT_37, e24) in
          event fullKC(hostY, hostW, n5, e21, TGT_37, e24);
          out(c23[!_32], m5)
        else
          let e21: bitstring = enc(x_125, y_124, r3_126) in
          let m5: bitstring = (e21, hostY, TGT_37, e24) in
          event fullKC(hostY, hostW, n5, e21, TGT_37, e24);
          out(c23[!_32], m5)
    )
  |
    ! !_33 <= N2
    in(c21[!_33], (Lhost: tgs, Lkey: key));
    if (Lhost = T) then
      let Qkey: key = Kt
    else
      let Qkey: key = Lkey
  )
|
  ! !_34 <= N2
  in(c16[!_34], (Mhost1: tgs, Mhost2: server, Mkey: key))
)


Applying simplify yields

Game 16 is
in(start, ());
new rkC: keyseed;
let pkC: pkey = pkgen2(rkC) in
new rkCs: skeyseed;
let spkC: spkey = spkgen2(rkCs) in
new rkK: keyseed;
let pkK: pkey = pkgen(rkK) in
new rkKs: skeyseed;
let spkK: spkey = spkgen(rkKs) in
let sskK: sskey = sskgen(rkKs) in
new rkCA: skeyseed;
let pkCA: spkey = spkgen2(rkCA) in
new rKt: symkeyseed;
let Kt: key = kgen(rKt) in
let x_53: sblocksize = concat1(C, pkC, spkC) in
new q1: sseed;
let certC: signature = sign2(x_53, sskgen2(rkCA), q1) in
let x_52: sblocksize = concat7(K, pkK, spkK) in
new q2: sseed;
let certK: signature = sign2(x_52, sskgen2(rkCA), q2) in
out(c25, (pkC, spkC, spkK, pkCA));
(
  (
    (
      ! !_31 <= N
      in(c1[!_31], hostT: tgs);
      new n2: nonce;
      new tc0: timest;
      let x_76: sblocksize = padno(tc0, n2) in
      new r1: sseed;
      new n1: nonce;
      out(c2[!_31], (C, pkC, spkC, certC, tc0, n2, sign2(x_76, sskgen2(rkCs), r1), C, hostT, n1));
      in(c3[!_31], (m21: bitstring, =C, TGT_38: maxmac, m24: maxmac));
      find @i_133 <= N suchthat defined(ms21[@i_133], ck[@i_133], k2[@i_133], k1[@i_133], m2_118[@i_133]) && (m21 = m2_118[@i_133]) then
        let hostZ: kas = K in
        let pkZ: pkey = pkK in
        let spkZ: spkey = spkK in
        let ms1: signature = certK in
        let k3: key = k1[@i_133] in
        let k4: mkey = k2[@i_133] in
        let ck1: macs = ck[@i_133] in
        let ms2: signature = ms21[@i_133] in
        if (spkK = spkgen2(rkCA)) then
          yield
        else
          if (spkK = spkgen2(rkCs)) then
            yield
          else
            let x_74: sblocksize = padno(tc0, n2) in
            let y': maxmac = concat6(C, pkC, spkC, certC, tc0, n2, sign2(x_74, sskgen2(rkCs), r1), C, hostT, n1) in
            if checkmac(y', k4, ck1) then
            let injbot2(concat4(AK_40: key, =n1, tk_39: timest, =hostT)) = decsym(m24, k3) in
            event fullCK(hostZ, hostT, n1, m21, TGT_38, m24);
            out(c18[!_31], acceptC1(hostZ, hostT))
      orfind @i_132 <= N suchthat defined(ms21[@i_132], ck[@i_132], k2[@i_132], k1[@i_132], m2_123[@i_132]) && (m21 = m2_123[@i_132]) then
        let hostZ: kas = K in
        let pkZ: pkey = pkK in
        let spkZ: spkey = spkK in
        let ms1: signature = certK in
        let k3: key = k1[@i_132] in
        let k4: mkey = k2[@i_132] in
        let ck1: macs = ck[@i_132] in
        let ms2: signature = ms21[@i_132] in
        if (spkK = spkgen2(rkCA)) then
          yield
        else
          if (spkK = spkgen2(rkCs)) then
            yield
          else
            let x_74: sblocksize = padno(tc0, n2) in
            let y': maxmac = concat6(C, pkC, spkC, certC, tc0, n2, sign2(x_74, sskgen2(rkCs), r1), C, hostT, n1) in
            if checkmac(y', k4, ck1) then
            let injbot2(concat4(AK_40: key, =n1, tk_39: timest, =hostT)) = decsym(m24, k3) in
            event fullCK(hostZ, hostT, n1, m21, TGT_38, m24);
            out(c18[!_31], acceptC1(hostZ, hostT))
      else
        let injbot1(concat2(hostZ: kas, pkZ: pkey, spkZ: spkey, ms1: signature, k3: key, k4: mkey, ck1: macs, ms2: signature)) = dec2(m21, skgen2(rkC)) in
        if (((hostZ = K) && ((pkZ = pkK) && (spkZ = spkK))) && check2(concat7(hostZ, pkZ, spkZ), pkCA, ms1)) then
        if (spkK = spkgen2(rkCA)) then
          yield
        else
          if (spkK = spkgen2(rkCs)) then
            yield
          else
            if check(concat3(k3, k4, ck1), spkK, ms2) then
            let x_74: sblocksize = padno(tc0, n2) in
            let y': maxmac = concat6(C, pkC, spkC, certC, tc0, n2, sign2(x_74, sskgen2(rkCs), r1), C, hostT, n1) in
            if checkmac(y', k4, ck1) then
            let injbot2(concat4(AK_40: key, =n1, tk_39: timest, =hostT)) = decsym(m24, k3) in
            event fullCK(hostZ, hostT, n1, m21, TGT_38, m24);
            out(c18[!_31], acceptC1(hostZ, hostT))
    |
      ! !_32 <= N
      in(c22[!_32], (hostY: client, pkY: pkey, spkY: spkey, ms3: signature, tc1: timest, n4: nonce, ms4: signature, hostV: client, hostW: tgs, n5: nonce));
      if (hostV = hostY) then
      if (((hostY = C) && ((pkY = pkC) && (spkY = spkC))) && check2(concat1(hostY, pkY, spkY), pkCA, ms3)) then
      find @i_78 <= N suchthat defined(n2[@i_78], tc0[@i_78], x_74[@i_78]) && (((tc1 = tc0[@i_78]) && (n4 = n2[@i_78])) && check2(padno(tc1, n4), spkY, ms4)) then
        find j1 <= N2 suchthat defined(Qkey[j1], Lhost[j1]) && (Lhost[j1] = hostW) then
        new s3_92: symkeyseed;
        let AK_35: key = kgen(s3_92) in
        new s1_93: symkeyseed;
        let k1: key = kgen(s1_93) in
        new s2_94: mkeyseed;
        let k2: mkey = mkgen(s2_94) in
        new r4_95: symseed;
        new tk_96: timest;
        let TGT_37: maxmac = encsym(concat5(AK_35, tk_96, hostY), Qkey[j1], r4_95) in
        new r5_97: symseed;
        let e24: maxmac = encsym(concat4(AK_35, n5, tk_96, hostW), k1, r5_97) in
        let y: maxmac = concat6(hostY, pkY, spkY, ms3, tc1, n4, ms4, hostY, hostW, n5) in
        let ck: macs = mac(y, k2) in
        new r6_98: sseed;
        let ms21: signature = sign(concat3(k1, k2, ck), sskK, r6_98) in
        new r7_99: seed;
        let x_120: blocksize = concat2(K, pkK, spkK, certK, k1, k2, ck, ms21) in
        let y_119: pkey = pkY in
        let m2_118: bitstring = enc2(Z, y_119, r7_99) in
        let e21: bitstring = m2_118 in
        let m5: bitstring = (e21, hostY, TGT_37, e24) in
        event fullKC(hostY, hostW, n5, e21, TGT_37, e24);
        out(c23[!_32], m5)
      orfind @i_78 <= N suchthat defined(n2[@i_78], tc0[@i_78], x_76[@i_78]) && (((tc1 = tc0[@i_78]) && (n4 = n2[@i_78])) && check2(padno(tc1, n4), spkY, ms4)) then
        find j1 <= N2 suchthat defined(Qkey[j1], Lhost[j1]) && (Lhost[j1] = hostW) then
        new s3_100: symkeyseed;
        let AK_35: key = kgen(s3_100) in
        new s1_101: symkeyseed;
        let k1: key = kgen(s1_101) in
        new s2_102: mkeyseed;
        let k2: mkey = mkgen(s2_102) in
        new r4_103: symseed;
        new tk_104: timest;
        let TGT_37: maxmac = encsym(concat5(AK_35, tk_104, hostY), Qkey[j1], r4_103) in
        new r5_105: symseed;
        let e24: maxmac = encsym(concat4(AK_35, n5, tk_104, hostW), k1, r5_105) in
        let y: maxmac = concat6(hostY, pkY, spkY, ms3, tc1, n4, ms4, hostY, hostW, n5) in
        let ck: macs = mac(y, k2) in
        new r6_106: sseed;
        let ms21: signature = sign(concat3(k1, k2, ck), sskK, r6_106) in
        new r7_107: seed;
        let x_125: blocksize = concat2(K, pkK, spkK, certK, k1, k2, ck, ms21) in
        let y_124: pkey = pkY in
        let m2_123: bitstring = enc2(Z, y_124, r7_107) in
        let e21: bitstring = m2_123 in
        let m5: bitstring = (e21, hostY, TGT_37, e24) in
        event fullKC(hostY, hostW, n5, e21, TGT_37, e24);
        out(c23[!_32], m5)
    )
  |
    ! !_33 <= N2
    in(c21[!_33], (Lhost: tgs, Lkey: key));
    if (Lhost = T) then
      let Qkey: key = Kt
    else
      let Qkey: key = Lkey
  )
|
  ! !_34 <= N2
  in(c16[!_34], (Mhost1: tgs, Mhost2: server, Mkey: key))
)


Applying move new all binders yields

Game 17 is
in(start, ());
new rkC: keyseed;
let pkC: pkey = pkgen2(rkC) in
new rkCs: skeyseed;
let spkC: spkey = spkgen2(rkCs) in
new rkK: keyseed;
let pkK: pkey = pkgen(rkK) in
new rkKs: skeyseed;
let spkK: spkey = spkgen(rkKs) in
let sskK: sskey = sskgen(rkKs) in
new rkCA: skeyseed;
let pkCA: spkey = spkgen2(rkCA) in
new rKt: symkeyseed;
let Kt: key = kgen(rKt) in
let x_53: sblocksize = concat1(C, pkC, spkC) in
new q1: sseed;
let certC: signature = sign2(x_53, sskgen2(rkCA), q1) in
let x_52: sblocksize = concat7(K, pkK, spkK) in
new q2: sseed;
let certK: signature = sign2(x_52, sskgen2(rkCA), q2) in
out(c25, (pkC, spkC, spkK, pkCA));
(
  (
    (
      ! !_31 <= N
      in(c1[!_31], hostT: tgs);
      new n2: nonce;
      new tc0: timest;
      let x_76: sblocksize = padno(tc0, n2) in
      new n1: nonce;
      new r1: sseed;
      out(c2[!_31], (C, pkC, spkC, certC, tc0, n2, sign2(x_76, sskgen2(rkCs), r1), C, hostT, n1));
      in(c3[!_31], (m21: bitstring, =C, TGT_38: maxmac, m24: maxmac));
      find @i_133 <= N suchthat defined(ms21[@i_133], ck[@i_133], k2[@i_133], k1[@i_133], m2_118[@i_133]) && (m21 = m2_118[@i_133]) then
        let hostZ: kas = K in
        let pkZ: pkey = pkK in
        let spkZ: spkey = spkK in
        let ms1: signature = certK in
        let k3: key = k1[@i_133] in
        let k4: mkey = k2[@i_133] in
        let ck1: macs = ck[@i_133] in
        let ms2: signature = ms21[@i_133] in
        if (spkK = spkgen2(rkCA)) then
          yield
        else
          if (spkK = spkgen2(rkCs)) then
            yield
          else
            let x_74: sblocksize = padno(tc0, n2) in
            let y': maxmac = concat6(C, pkC, spkC, certC, tc0, n2, sign2(x_74, sskgen2(rkCs), r1), C, hostT, n1) in
            if checkmac(y', k4, ck1) then
            let injbot2(concat4(AK_40: key, =n1, tk_39: timest, =hostT)) = decsym(m24, k3) in
            event fullCK(hostZ, hostT, n1, m21, TGT_38, m24);
            out(c18[!_31], acceptC1(hostZ, hostT))
      orfind @i_132 <= N suchthat defined(ms21[@i_132], ck[@i_132], k2[@i_132], k1[@i_132], m2_123[@i_132]) && (m21 = m2_123[@i_132]) then
        let hostZ: kas = K in
        let pkZ: pkey = pkK in
        let spkZ: spkey = spkK in
        let ms1: signature = certK in
        let k3: key = k1[@i_132] in
        let k4: mkey = k2[@i_132] in
        let ck1: macs = ck[@i_132] in
        let ms2: signature = ms21[@i_132] in
        if (spkK = spkgen2(rkCA)) then
          yield
        else
          if (spkK = spkgen2(rkCs)) then
            yield
          else
            let x_74: sblocksize = padno(tc0, n2) in
            let y': maxmac = concat6(C, pkC, spkC, certC, tc0, n2, sign2(x_74, sskgen2(rkCs), r1), C, hostT, n1) in
            if checkmac(y', k4, ck1) then
            let injbot2(concat4(AK_40: key, =n1, tk_39: timest, =hostT)) = decsym(m24, k3) in
            event fullCK(hostZ, hostT, n1, m21, TGT_38, m24);
            out(c18[!_31], acceptC1(hostZ, hostT))
      else
        let injbot1(concat2(hostZ: kas, pkZ: pkey, spkZ: spkey, ms1: signature, k3: key, k4: mkey, ck1: macs, ms2: signature)) = dec2(m21, skgen2(rkC)) in
        if (((hostZ = K) && ((pkZ = pkK) && (spkZ = spkK))) && check2(concat7(hostZ, pkZ, spkZ), pkCA, ms1)) then
        if (spkK = spkgen2(rkCA)) then
          yield
        else
          if (spkK = spkgen2(rkCs)) then
            yield
          else
            if check(concat3(k3, k4, ck1), spkK, ms2) then
            let x_74: sblocksize = padno(tc0, n2) in
            let y': maxmac = concat6(C, pkC, spkC, certC, tc0, n2, sign2(x_74, sskgen2(rkCs), r1), C, hostT, n1) in
            if checkmac(y', k4, ck1) then
            let injbot2(concat4(AK_40: key, =n1, tk_39: timest, =hostT)) = decsym(m24, k3) in
            event fullCK(hostZ, hostT, n1, m21, TGT_38, m24);
            out(c18[!_31], acceptC1(hostZ, hostT))
    |
      ! !_32 <= N
      in(c22[!_32], (hostY: client, pkY: pkey, spkY: spkey, ms3: signature, tc1: timest, n4: nonce, ms4: signature, hostV: client, hostW: tgs, n5: nonce));
      if (hostV = hostY) then
      if (((hostY = C) && ((pkY = pkC) && (spkY = spkC))) && check2(concat1(hostY, pkY, spkY), pkCA, ms3)) then
      find @i_78 <= N suchthat defined(n2[@i_78], tc0[@i_78], x_74[@i_78]) && (((tc1 = tc0[@i_78]) && (n4 = n2[@i_78])) && check2(padno(tc1, n4), spkY, ms4)) then
        find j1 <= N2 suchthat defined(Qkey[j1], Lhost[j1]) && (Lhost[j1] = hostW) then
        new s3_92: symkeyseed;
        let AK_35: key = kgen(s3_92) in
        new s1_93: symkeyseed;
        let k1: key = kgen(s1_93) in
        new s2_94: mkeyseed;
        let k2: mkey = mkgen(s2_94) in
        new tk_96: timest;
        new r4_95: symseed;
        let TGT_37: maxmac = encsym(concat5(AK_35, tk_96, hostY), Qkey[j1], r4_95) in
        new r5_97: symseed;
        let e24: maxmac = encsym(concat4(AK_35, n5, tk_96, hostW), k1, r5_97) in
        let y: maxmac = concat6(hostY, pkY, spkY, ms3, tc1, n4, ms4, hostY, hostW, n5) in
        let ck: macs = mac(y, k2) in
        new r6_98: sseed;
        let ms21: signature = sign(concat3(k1, k2, ck), sskK, r6_98) in
        let x_120: blocksize = concat2(K, pkK, spkK, certK, k1, k2, ck, ms21) in
        let y_119: pkey = pkY in
        new r7_99: seed;
        let m2_118: bitstring = enc2(Z, y_119, r7_99) in
        let e21: bitstring = m2_118 in
        let m5: bitstring = (e21, hostY, TGT_37, e24) in
        event fullKC(hostY, hostW, n5, e21, TGT_37, e24);
        out(c23[!_32], m5)
      orfind @i_78 <= N suchthat defined(n2[@i_78], tc0[@i_78], x_76[@i_78]) && (((tc1 = tc0[@i_78]) && (n4 = n2[@i_78])) && check2(padno(tc1, n4), spkY, ms4)) then
        find j1 <= N2 suchthat defined(Qkey[j1], Lhost[j1]) && (Lhost[j1] = hostW) then
        new s3_100: symkeyseed;
        let AK_35: key = kgen(s3_100) in
        new s1_101: symkeyseed;
        let k1: key = kgen(s1_101) in
        new s2_102: mkeyseed;
        let k2: mkey = mkgen(s2_102) in
        new tk_104: timest;
        new r4_103: symseed;
        let TGT_37: maxmac = encsym(concat5(AK_35, tk_104, hostY), Qkey[j1], r4_103) in
        new r5_105: symseed;
        let e24: maxmac = encsym(concat4(AK_35, n5, tk_104, hostW), k1, r5_105) in
        let y: maxmac = concat6(hostY, pkY, spkY, ms3, tc1, n4, ms4, hostY, hostW, n5) in
        let ck: macs = mac(y, k2) in
        new r6_106: sseed;
        let ms21: signature = sign(concat3(k1, k2, ck), sskK, r6_106) in
        let x_125: blocksize = concat2(K, pkK, spkK, certK, k1, k2, ck, ms21) in
        let y_124: pkey = pkY in
        new r7_107: seed;
        let m2_123: bitstring = enc2(Z, y_124, r7_107) in
        let e21: bitstring = m2_123 in
        let m5: bitstring = (e21, hostY, TGT_37, e24) in
        event fullKC(hostY, hostW, n5, e21, TGT_37, e24);
        out(c23[!_32], m5)
    )
  |
    ! !_33 <= N2
    in(c21[!_33], (Lhost: tgs, Lkey: key));
    if (Lhost = T) then
      let Qkey: key = Kt
    else
      let Qkey: key = Lkey
  )
|
  ! !_34 <= N2
  in(c16[!_34], (Mhost1: tgs, Mhost2: server, Mkey: key))
)


Applying remove assignments of useless yields

Game 18 is
in(start, ());
new rkC: keyseed;
let pkC: pkey = pkgen2(rkC) in
new rkCs: skeyseed;
let spkC: spkey = spkgen2(rkCs) in
new rkK: keyseed;
let pkK: pkey = pkgen(rkK) in
new rkKs: skeyseed;
let spkK: spkey = spkgen(rkKs) in
new rkCA: skeyseed;
let pkCA: spkey = spkgen2(rkCA) in
new rKt: symkeyseed;
let Kt: key = kgen(rKt) in
let x_53: sblocksize = concat1(C, pkC, spkC) in
new q1: sseed;
let certC: signature = sign2(x_53, sskgen2(rkCA), q1) in
new q2: sseed;
out(c25, (pkC, spkC, spkK, pkCA));
(
  (
    (
      ! !_31 <= N
      in(c1[!_31], hostT: tgs);
      new n2: nonce;
      new tc0: timest;
      let x_76: sblocksize = padno(tc0, n2) in
      new n1: nonce;
      new r1: sseed;
      out(c2[!_31], (C, pkC, spkC, certC, tc0, n2, sign2(x_76, sskgen2(rkCs), r1), C, hostT, n1));
      in(c3[!_31], (m21: bitstring, =C, TGT_38: maxmac, m24: maxmac));
      find @i_133 <= N suchthat defined(ms21[@i_133], ck[@i_133], k2[@i_133], k1[@i_133], m2_118[@i_133]) && (m21 = m2_118[@i_133]) then
        let hostZ: kas = K in
        if (spkK = spkgen2(rkCA)) then
          yield
        else
          if (spkK = spkgen2(rkCs)) then
            yield
          else
            let x_74: sblocksize = padno(tc0, n2) in
            let y': maxmac = concat6(C, pkC, spkC, certC, tc0, n2, sign2(x_74, sskgen2(rkCs), r1), C, hostT, n1) in
            if checkmac(y', k2[@i_133], ck[@i_133]) then
            let injbot2(concat4(AK_40: key, =n1, tk_39: timest, =hostT)) = decsym(m24, k1[@i_133]) in
            event fullCK(hostZ, hostT, n1, m21, TGT_38, m24);
            out(c18[!_31], acceptC1(hostZ, hostT))
      orfind @i_132 <= N suchthat defined(ms21[@i_132], ck[@i_132], k2[@i_132], k1[@i_132], m2_123[@i_132]) && (m21 = m2_123[@i_132]) then
        let hostZ: kas = K in
        if (spkK = spkgen2(rkCA)) then
          yield
        else
          if (spkK = spkgen2(rkCs)) then
            yield
          else
            let x_74: sblocksize = padno(tc0, n2) in
            let y': maxmac = concat6(C, pkC, spkC, certC, tc0, n2, sign2(x_74, sskgen2(rkCs), r1), C, hostT, n1) in
            if checkmac(y', k2[@i_132], ck[@i_132]) then
            let injbot2(concat4(AK_40: key, =n1, tk_39: timest, =hostT)) = decsym(m24, k1[@i_132]) in
            event fullCK(hostZ, hostT, n1, m21, TGT_38, m24);
            out(c18[!_31], acceptC1(hostZ, hostT))
      else
        let injbot1(concat2(hostZ: kas, pkZ: pkey, spkZ: spkey, ms1: signature, k3: key, k4: mkey, ck1: macs, ms2: signature)) = dec2(m21, skgen2(rkC)) in
        if (((hostZ = K) && ((pkZ = pkK) && (spkZ = spkK))) && check2(concat7(hostZ, pkZ, spkZ), pkCA, ms1)) then
        if (spkK = spkgen2(rkCA)) then
          yield
        else
          if (spkK = spkgen2(rkCs)) then
            yield
          else
            if check(concat3(k3, k4, ck1), spkK, ms2) then
            let x_74: sblocksize = padno(tc0, n2) in
            let y': maxmac = concat6(C, pkC, spkC, certC, tc0, n2, sign2(x_74, sskgen2(rkCs), r1), C, hostT, n1) in
            if checkmac(y', k4, ck1) then
            let injbot2(concat4(AK_40: key, =n1, tk_39: timest, =hostT)) = decsym(m24, k3) in
            event fullCK(hostZ, hostT, n1, m21, TGT_38, m24);
            out(c18[!_31], acceptC1(hostZ, hostT))
    |
      ! !_32 <= N
      in(c22[!_32], (hostY: client, pkY: pkey, spkY: spkey, ms3: signature, tc1: timest, n4: nonce, ms4: signature, hostV: client, hostW: tgs, n5: nonce));
      if (hostV = hostY) then
      if (((hostY = C) && ((pkY = pkC) && (spkY = spkC))) && check2(concat1(hostY, pkY, spkY), pkCA, ms3)) then
      find @i_78 <= N suchthat defined(n2[@i_78], tc0[@i_78], x_74[@i_78]) && (((tc1 = tc0[@i_78]) && (n4 = n2[@i_78])) && check2(padno(tc1, n4), spkY, ms4)) then
        find j1 <= N2 suchthat defined(Qkey[j1], Lhost[j1]) && (Lhost[j1] = hostW) then
        new s3_92: symkeyseed;
        let AK_35: key = kgen(s3_92) in
        new s1_93: symkeyseed;
        let k1: key = kgen(s1_93) in
        new s2_94: mkeyseed;
        let k2: mkey = mkgen(s2_94) in
        new tk_96: timest;
        new r4_95: symseed;
        let TGT_37: maxmac = encsym(concat5(AK_35, tk_96, hostY), Qkey[j1], r4_95) in
        new r5_97: symseed;
        let e24: maxmac = encsym(concat4(AK_35, n5, tk_96, hostW), k1, r5_97) in
        let y: maxmac = concat6(hostY, pkY, spkY, ms3, tc1, n4, ms4, hostY, hostW, n5) in
        let ck: macs = mac(y, k2) in
        new r6_98: sseed;
        let ms21: signature = cst_signature in
        new r7_99: seed;
        let m2_118: bitstring = enc2(Z, pkY, r7_99) in
        let m5: bitstring = (m2_118, hostY, TGT_37, e24) in
        event fullKC(hostY, hostW, n5, m2_118, TGT_37, e24);
        out(c23[!_32], m5)
      orfind @i_78 <= N suchthat defined(n2[@i_78], tc0[@i_78], x_76[@i_78]) && (((tc1 = tc0[@i_78]) && (n4 = n2[@i_78])) && check2(padno(tc1, n4), spkY, ms4)) then
        find j1 <= N2 suchthat defined(Qkey[j1], Lhost[j1]) && (Lhost[j1] = hostW) then
        new s3_100: symkeyseed;
        let AK_35: key = kgen(s3_100) in
        new s1_101: symkeyseed;
        let k1: key = kgen(s1_101) in
        new s2_102: mkeyseed;
        let k2: mkey = mkgen(s2_102) in
        new tk_104: timest;
        new r4_103: symseed;
        let TGT_37: maxmac = encsym(concat5(AK_35, tk_104, hostY), Qkey[j1], r4_103) in
        new r5_105: symseed;
        let e24: maxmac = encsym(concat4(AK_35, n5, tk_104, hostW), k1, r5_105) in
        let y: maxmac = concat6(hostY, pkY, spkY, ms3, tc1, n4, ms4, hostY, hostW, n5) in
        let ck: macs = mac(y, k2) in
        new r6_106: sseed;
        let ms21: signature = cst_signature in
        new r7_107: seed;
        let m2_123: bitstring = enc2(Z, pkY, r7_107) in
        let m5: bitstring = (m2_123, hostY, TGT_37, e24) in
        event fullKC(hostY, hostW, n5, m2_123, TGT_37, e24);
        out(c23[!_32], m5)
    )
  |
    ! !_33 <= N2
    in(c21[!_33], (Lhost: tgs, Lkey: key));
    if (Lhost = T) then
      let Qkey: key = Kt
    else
      let Qkey: key = Lkey
  )
|
  ! !_34 <= N2
  in(c16[!_34], (Mhost1: tgs, Mhost2: server, Mkey: key))
)


Applying equivalence
equiv ! !_7 <= N3 new r: skeyseed; (
  () -> spkgen(r),
  ! !_8 <= N2 new r2: sseed; (x: sblocksize) -> sign(x, sskgen(r), r2)), ! !_9 <= N4 (m: sblocksize, y: spkey, si: signature) -> check(m, y, si) [all]
<=(N3 * Psign(time, N2))=>
      ! !_10 <= N3 new r: skeyseed; (
  () -> spkgen2(r),
  ! !_11 <= N2 new r2: sseed; (x_47: sblocksize) -> let x: sblocksize = x_47 in sign2(x, sskgen2(r), r2)), ! !_12 <= N4 (m: sblocksize, y: spkey, si: signature) -> find j <= N2, k_14 <= N3 suchthat defined(x[j, k_14], r[k_14]) && ((y = spkgen2(r[k_14])) && ((m = x[j, k_14]) && check2(m, y, si))) then true else find k_13 <= N3 suchthat defined(r[k_13]) && (y = spkgen2(r[k_13])) then false else check(m, y, si)
with rkKs [Difference of probability Psign(time + time(context for game 18), 0)] yields

Game 19 is
in(start, ());
new rkC: keyseed;
let pkC: pkey = pkgen2(rkC) in
new rkCs: skeyseed;
let spkC: spkey = spkgen2(rkCs) in
new rkK: keyseed;
let pkK: pkey = pkgen(rkK) in
new rkKs: skeyseed;
let spkK: spkey = spkgen2(rkKs) in
new rkCA: skeyseed;
let pkCA: spkey = spkgen2(rkCA) in
new rKt: symkeyseed;
let Kt: key = kgen(rKt) in
let x_53: sblocksize = concat1(C, pkC, spkC) in
new q1: sseed;
let certC: signature = sign2(x_53, sskgen2(rkCA), q1) in
new q2: sseed;
out(c25, (pkC, spkC, spkK, pkCA));
(
  (
    (
      ! !_31 <= N
      in(c1[!_31], hostT: tgs);
      new n2: nonce;
      new tc0: timest;
      let x_76: sblocksize = padno(tc0, n2) in
      new n1: nonce;
      new r1: sseed;
      out(c2[!_31], (C, pkC, spkC, certC, tc0, n2, sign2(x_76, sskgen2(rkCs), r1), C, hostT, n1));
      in(c3[!_31], (m21: bitstring, =C, TGT_38: maxmac, m24: maxmac));
      find @i_133 <= N suchthat defined(ms21[@i_133], ck[@i_133], k2[@i_133], k1[@i_133], m2_118[@i_133]) && (m21 = m2_118[@i_133]) then
        let hostZ: kas = K in
        if (spkK = spkgen2(rkCA)) then
          yield
        else
          if (spkK = spkgen2(rkCs)) then
            yield
          else
            let x_74: sblocksize = padno(tc0, n2) in
            let y': maxmac = concat6(C, pkC, spkC, certC, tc0, n2, sign2(x_74, sskgen2(rkCs), r1), C, hostT, n1) in
            if checkmac(y', k2[@i_133], ck[@i_133]) then
            let injbot2(concat4(AK_40: key, =n1, tk_39: timest, =hostT)) = decsym(m24, k1[@i_133]) in
            event fullCK(hostZ, hostT, n1, m21, TGT_38, m24);
            out(c18[!_31], acceptC1(hostZ, hostT))
      orfind @i_132 <= N suchthat defined(ms21[@i_132], ck[@i_132], k2[@i_132], k1[@i_132], m2_123[@i_132]) && (m21 = m2_123[@i_132]) then
        let hostZ: kas = K in
        if (spkK = spkgen2(rkCA)) then
          yield
        else
          if (spkK = spkgen2(rkCs)) then
            yield
          else
            let x_74: sblocksize = padno(tc0, n2) in
            let y': maxmac = concat6(C, pkC, spkC, certC, tc0, n2, sign2(x_74, sskgen2(rkCs), r1), C, hostT, n1) in
            if checkmac(y', k2[@i_132], ck[@i_132]) then
            let injbot2(concat4(AK_40: key, =n1, tk_39: timest, =hostT)) = decsym(m24, k1[@i_132]) in
            event fullCK(hostZ, hostT, n1, m21, TGT_38, m24);
            out(c18[!_31], acceptC1(hostZ, hostT))
      else
        let injbot1(concat2(hostZ: kas, pkZ: pkey, spkZ: spkey, ms1: signature, k3: key, k4: mkey, ck1: macs, ms2: signature)) = dec2(m21, skgen2(rkC)) in
        if (((hostZ = K) && ((pkZ = pkK) && (spkZ = spkK))) && check2(concat7(hostZ, pkZ, spkZ), pkCA, ms1)) then
        if (spkK = spkgen2(rkCA)) then
          yield
        else
          if (spkK = spkgen2(rkCs)) then
            yield
          else
            find             else
              if defined(rkKs) && (spkK = spkgen2(rkKs)) then
                if false then
                let x_74: sblocksize = padno(tc0, n2) in
                let y': maxmac = concat6(C, pkC, spkC, certC, tc0, n2, sign2(x_74, sskgen2(rkCs), r1), C, hostT, n1) in
                if checkmac(y', k4, ck1) then
                let injbot2(concat4(AK_40: key, =n1, tk_39: timest, =hostT)) = decsym(m24, k3) in
                event fullCK(hostZ, hostT, n1, m21, TGT_38, m24);
                out(c18[!_31], acceptC1(hostZ, hostT))
              else
                if check(concat3(k3, k4, ck1), spkK, ms2) then
                let x_74: sblocksize = padno(tc0, n2) in
                let y': maxmac = concat6(C, pkC, spkC, certC, tc0, n2, sign2(x_74, sskgen2(rkCs), r1), C, hostT, n1) in
                if checkmac(y', k4, ck1) then
                let injbot2(concat4(AK_40: key, =n1, tk_39: timest, =hostT)) = decsym(m24, k3) in
                event fullCK(hostZ, hostT, n1, m21, TGT_38, m24);
                out(c18[!_31], acceptC1(hostZ, hostT))
    |
      ! !_32 <= N
      in(c22[!_32], (hostY: client, pkY: pkey, spkY: spkey, ms3: signature, tc1: timest, n4: nonce, ms4: signature, hostV: client, hostW: tgs, n5: nonce));
      if (hostV = hostY) then
      if (((hostY = C) && ((pkY = pkC) && (spkY = spkC))) && check2(concat1(hostY, pkY, spkY), pkCA, ms3)) then
      find @i_78 <= N suchthat defined(n2[@i_78], tc0[@i_78], x_74[@i_78]) && (((tc1 = tc0[@i_78]) && (n4 = n2[@i_78])) && check2(padno(tc1, n4), spkY, ms4)) then
        find j1 <= N2 suchthat defined(Qkey[j1], Lhost[j1]) && (Lhost[j1] = hostW) then
        new s3_92: symkeyseed;
        let AK_35: key = kgen(s3_92) in
        new s1_93: symkeyseed;
        let k1: key = kgen(s1_93) in
        new s2_94: mkeyseed;
        let k2: mkey = mkgen(s2_94) in
        new tk_96: timest;
        new r4_95: symseed;
        let TGT_37: maxmac = encsym(concat5(AK_35, tk_96, hostY), Qkey[j1], r4_95) in
        new r5_97: symseed;
        let e24: maxmac = encsym(concat4(AK_35, n5, tk_96, hostW), k1, r5_97) in
        let y: maxmac = concat6(hostY, pkY, spkY, ms3, tc1, n4, ms4, hostY, hostW, n5) in
        let ck: macs = mac(y, k2) in
        new r6_98: sseed;
        let ms21: signature = cst_signature in
        new r7_99: seed;
        let m2_118: bitstring = enc2(Z, pkY, r7_99) in
        let m5: bitstring = (m2_118, hostY, TGT_37, e24) in
        event fullKC(hostY, hostW, n5, m2_118, TGT_37, e24);
        out(c23[!_32], m5)
      orfind @i_78 <= N suchthat defined(n2[@i_78], tc0[@i_78], x_76[@i_78]) && (((tc1 = tc0[@i_78]) && (n4 = n2[@i_78])) && check2(padno(tc1, n4), spkY, ms4)) then
        find j1 <= N2 suchthat defined(Qkey[j1], Lhost[j1]) && (Lhost[j1] = hostW) then
        new s3_100: symkeyseed;
        let AK_35: key = kgen(s3_100) in
        new s1_101: symkeyseed;
        let k1: key = kgen(s1_101) in
        new s2_102: mkeyseed;
        let k2: mkey = mkgen(s2_102) in
        new tk_104: timest;
        new r4_103: symseed;
        let TGT_37: maxmac = encsym(concat5(AK_35, tk_104, hostY), Qkey[j1], r4_103) in
        new r5_105: symseed;
        let e24: maxmac = encsym(concat4(AK_35, n5, tk_104, hostW), k1, r5_105) in
        let y: maxmac = concat6(hostY, pkY, spkY, ms3, tc1, n4, ms4, hostY, hostW, n5) in
        let ck: macs = mac(y, k2) in
        new r6_106: sseed;
        let ms21: signature = cst_signature in
        new r7_107: seed;
        let m2_123: bitstring = enc2(Z, pkY, r7_107) in
        let m5: bitstring = (m2_123, hostY, TGT_37, e24) in
        event fullKC(hostY, hostW, n5, m2_123, TGT_37, e24);
        out(c23[!_32], m5)
    )
  |
    ! !_33 <= N2
    in(c21[!_33], (Lhost: tgs, Lkey: key));
    if (Lhost = T) then
      let Qkey: key = Kt
    else
      let Qkey: key = Lkey
  )
|
  ! !_34 <= N2
  in(c16[!_34], (Mhost1: tgs, Mhost2: server, Mkey: key))
)


Applying simplify [Difference of probability 2. * Psigncoll + 2. * 1. / |skeyseed|] yields

Game 20 is
in(start, ());
new rkC: keyseed;
let pkC: pkey = pkgen2(rkC) in
new rkCs: skeyseed;
let spkC: spkey = spkgen2(rkCs) in
new rkK: keyseed;
let pkK: pkey = pkgen(rkK) in
new rkKs: skeyseed;
let spkK: spkey = spkgen2(rkKs) in
new rkCA: skeyseed;
let pkCA: spkey = spkgen2(rkCA) in
new rKt: symkeyseed;
let Kt: key = kgen(rKt) in
let x_53: sblocksize = concat1(C, pkC, spkC) in
new q1: sseed;
let certC: signature = sign2(x_53, sskgen2(rkCA), q1) in
out(c25, (pkC, spkC, spkK, pkCA));
(
  (
    (
      ! !_31 <= N
      in(c1[!_31], hostT: tgs);
      new n2: nonce;
      new tc0: timest;
      let x_76: sblocksize = padno(tc0, n2) in
      new n1: nonce;
      new r1: sseed;
      out(c2[!_31], (C, pkC, spkC, certC, tc0, n2, sign2(x_76, sskgen2(rkCs), r1), C, hostT, n1));
      in(c3[!_31], (m21: bitstring, =C, TGT_38: maxmac, m24: maxmac));
      find @i_133 <= N suchthat defined(k1[@i_133], ck[@i_133], k2[@i_133], m2_118[@i_133]) && (m21 = m2_118[@i_133]) then
        let hostZ: kas = K in
        let x_74: sblocksize = padno(tc0, n2) in
        let y': maxmac = concat6(C, pkC, spkC, certC, tc0, n2, sign2(x_74, sskgen2(rkCs), r1), C, hostT, n1) in
        if checkmac(y', k2[@i_133], ck[@i_133]) then
        let injbot2(concat4(AK_40: key, =n1, tk_39: timest, =hostT)) = decsym(m24, k1[@i_133]) in
        event fullCK(hostZ, hostT, n1, m21, TGT_38, m24);
        out(c18[!_31], acceptC1(hostZ, hostT))
      orfind @i_132 <= N suchthat defined(k1[@i_132], ck[@i_132], k2[@i_132], m2_123[@i_132]) && (m21 = m2_123[@i_132]) then
        let hostZ: kas = K in
        let x_74: sblocksize = padno(tc0, n2) in
        let y': maxmac = concat6(C, pkC, spkC, certC, tc0, n2, sign2(x_74, sskgen2(rkCs), r1), C, hostT, n1) in
        if checkmac(y', k2[@i_132], ck[@i_132]) then
        let injbot2(concat4(AK_40: key, =n1, tk_39: timest, =hostT)) = decsym(m24, k1[@i_132]) in
        event fullCK(hostZ, hostT, n1, m21, TGT_38, m24);
        out(c18[!_31], acceptC1(hostZ, hostT))
    |
      ! !_32 <= N
      in(c22[!_32], (hostY: client, pkY: pkey, spkY: spkey, ms3: signature, tc1: timest, n4: nonce, ms4: signature, hostV: client, hostW: tgs, n5: nonce));
      if (hostV = hostY) then
      if (((hostY = C) && ((pkY = pkC) && (spkY = spkC))) && check2(concat1(hostY, pkY, spkY), pkCA, ms3)) then
      find @i_78 <= N suchthat defined(n2[@i_78], tc0[@i_78], x_74[@i_78]) && (((tc1 = tc0[@i_78]) && (n4 = n2[@i_78])) && check2(padno(tc1, n4), spkY, ms4)) then
        find j1 <= N2 suchthat defined(Qkey[j1], Lhost[j1]) && (Lhost[j1] = hostW) then
        new s3_92: symkeyseed;
        let AK_35: key = kgen(s3_92) in
        new s1_93: symkeyseed;
        let k1: key = kgen(s1_93) in
        new s2_94: mkeyseed;
        let k2: mkey = mkgen(s2_94) in
        new tk_96: timest;
        new r4_95: symseed;
        let TGT_37: maxmac = encsym(concat5(AK_35, tk_96, hostY), Qkey[j1], r4_95) in
        new r5_97: symseed;
        let e24: maxmac = encsym(concat4(AK_35, n5, tk_96, hostW), k1, r5_97) in
        let y: maxmac = concat6(hostY, pkY, spkY, ms3, tc1, n4, ms4, hostY, hostW, n5) in
        let ck: macs = mac(y, k2) in
        let ms21: signature = cst_signature in
        new r7_99: seed;
        let m2_118: bitstring = enc2(Z, pkY, r7_99) in
        let m5: bitstring = (m2_118, hostY, TGT_37, e24) in
        event fullKC(hostY, hostW, n5, m2_118, TGT_37, e24);
        out(c23[!_32], m5)
      orfind @i_78 <= N suchthat defined(n2[@i_78], tc0[@i_78], x_76[@i_78]) && (((tc1 = tc0[@i_78]) && (n4 = n2[@i_78])) && check2(padno(tc1, n4), spkY, ms4)) then
        find j1 <= N2 suchthat defined(Qkey[j1], Lhost[j1]) && (Lhost[j1] = hostW) then
        new s3_100: symkeyseed;
        let AK_35: key = kgen(s3_100) in
        new s1_101: symkeyseed;
        let k1: key = kgen(s1_101) in
        new s2_102: mkeyseed;
        let k2: mkey = mkgen(s2_102) in
        new tk_104: timest;
        new r4_103: symseed;
        let TGT_37: maxmac = encsym(concat5(AK_35, tk_104, hostY), Qkey[j1], r4_103) in
        new r5_105: symseed;
        let e24: maxmac = encsym(concat4(AK_35, n5, tk_104, hostW), k1, r5_105) in
        let y: maxmac = concat6(hostY, pkY, spkY, ms3, tc1, n4, ms4, hostY, hostW, n5) in
        let ck: macs = mac(y, k2) in
        let ms21: signature = cst_signature in
        new r7_107: seed;
        let m2_123: bitstring = enc2(Z, pkY, r7_107) in
        let m5: bitstring = (m2_123, hostY, TGT_37, e24) in
        event fullKC(hostY, hostW, n5, m2_123, TGT_37, e24);
        out(c23[!_32], m5)
    )
  |
    ! !_33 <= N2
    in(c21[!_33], (Lhost: tgs, Lkey: key));
    if (Lhost = T) then
      let Qkey: key = Kt
    else
      let Qkey: key = Lkey
  )
|
  ! !_34 <= N2
  in(c16[!_34], (Mhost1: tgs, Mhost2: server, Mkey: key))
)


Applying move new all binders yields

Game 21 is
in(start, ());
new rkC: keyseed;
let pkC: pkey = pkgen2(rkC) in
new rkCs: skeyseed;
let spkC: spkey = spkgen2(rkCs) in
new rkK: keyseed;
let pkK: pkey = pkgen(rkK) in
new rkKs: skeyseed;
let spkK: spkey = spkgen2(rkKs) in
new rkCA: skeyseed;
let pkCA: spkey = spkgen2(rkCA) in
new rKt: symkeyseed;
let Kt: key = kgen(rKt) in
let x_53: sblocksize = concat1(C, pkC, spkC) in
new q1: sseed;
let certC: signature = sign2(x_53, sskgen2(rkCA), q1) in
out(c25, (pkC, spkC, spkK, pkCA));
(
  (
    (
      ! !_31 <= N
      in(c1[!_31], hostT: tgs);
      new n2: nonce;
      new tc0: timest;
      let x_76: sblocksize = padno(tc0, n2) in
      new r1: sseed;
      new n1: nonce;
      out(c2[!_31], (C, pkC, spkC, certC, tc0, n2, sign2(x_76, sskgen2(rkCs), r1), C, hostT, n1));
      in(c3[!_31], (m21: bitstring, =C, TGT_38: maxmac, m24: maxmac));
      find @i_133 <= N suchthat defined(k1[@i_133], ck[@i_133], k2[@i_133], m2_118[@i_133]) && (m21 = m2_118[@i_133]) then
        let hostZ: kas = K in
        let x_74: sblocksize = padno(tc0, n2) in
        let y': maxmac = concat6(C, pkC, spkC, certC, tc0, n2, sign2(x_74, sskgen2(rkCs), r1), C, hostT, n1) in
        if checkmac(y', k2[@i_133], ck[@i_133]) then
        let injbot2(concat4(AK_40: key, =n1, tk_39: timest, =hostT)) = decsym(m24, k1[@i_133]) in
        event fullCK(hostZ, hostT, n1, m21, TGT_38, m24);
        out(c18[!_31], acceptC1(hostZ, hostT))
      orfind @i_132 <= N suchthat defined(k1[@i_132], ck[@i_132], k2[@i_132], m2_123[@i_132]) && (m21 = m2_123[@i_132]) then
        let hostZ: kas = K in
        let x_74: sblocksize = padno(tc0, n2) in
        let y': maxmac = concat6(C, pkC, spkC, certC, tc0, n2, sign2(x_74, sskgen2(rkCs), r1), C, hostT, n1) in
        if checkmac(y', k2[@i_132], ck[@i_132]) then
        let injbot2(concat4(AK_40: key, =n1, tk_39: timest, =hostT)) = decsym(m24, k1[@i_132]) in
        event fullCK(hostZ, hostT, n1, m21, TGT_38, m24);
        out(c18[!_31], acceptC1(hostZ, hostT))
    |
      ! !_32 <= N
      in(c22[!_32], (hostY: client, pkY: pkey, spkY: spkey, ms3: signature, tc1: timest, n4: nonce, ms4: signature, hostV: client, hostW: tgs, n5: nonce));
      if (hostV = hostY) then
      if (((hostY = C) && ((pkY = pkC) && (spkY = spkC))) && check2(concat1(hostY, pkY, spkY), pkCA, ms3)) then
      find @i_78 <= N suchthat defined(n2[@i_78], tc0[@i_78], x_74[@i_78]) && (((tc1 = tc0[@i_78]) && (n4 = n2[@i_78])) && check2(padno(tc1, n4), spkY, ms4)) then
        find j1 <= N2 suchthat defined(Qkey[j1], Lhost[j1]) && (Lhost[j1] = hostW) then
        new s3_92: symkeyseed;
        let AK_35: key = kgen(s3_92) in
        new s1_93: symkeyseed;
        let k1: key = kgen(s1_93) in
        new s2_94: mkeyseed;
        let k2: mkey = mkgen(s2_94) in
        new r4_95: symseed;
        new tk_96: timest;
        let TGT_37: maxmac = encsym(concat5(AK_35, tk_96, hostY), Qkey[j1], r4_95) in
        new r5_97: symseed;
        let e24: maxmac = encsym(concat4(AK_35, n5, tk_96, hostW), k1, r5_97) in
        let y: maxmac = concat6(hostY, pkY, spkY, ms3, tc1, n4, ms4, hostY, hostW, n5) in
        let ck: macs = mac(y, k2) in
        let ms21: signature = cst_signature in
        new r7_99: seed;
        let m2_118: bitstring = enc2(Z, pkY, r7_99) in
        let m5: bitstring = (m2_118, hostY, TGT_37, e24) in
        event fullKC(hostY, hostW, n5, m2_118, TGT_37, e24);
        out(c23[!_32], m5)
      orfind @i_78 <= N suchthat defined(n2[@i_78], tc0[@i_78], x_76[@i_78]) && (((tc1 = tc0[@i_78]) && (n4 = n2[@i_78])) && check2(padno(tc1, n4), spkY, ms4)) then
        find j1 <= N2 suchthat defined(Qkey[j1], Lhost[j1]) && (Lhost[j1] = hostW) then
        new s3_100: symkeyseed;
        let AK_35: key = kgen(s3_100) in
        new s1_101: symkeyseed;
        let k1: key = kgen(s1_101) in
        new s2_102: mkeyseed;
        let k2: mkey = mkgen(s2_102) in
        new r4_103: symseed;
        new tk_104: timest;
        let TGT_37: maxmac = encsym(concat5(AK_35, tk_104, hostY), Qkey[j1], r4_103) in
        new r5_105: symseed;
        let e24: maxmac = encsym(concat4(AK_35, n5, tk_104, hostW), k1, r5_105) in
        let y: maxmac = concat6(hostY, pkY, spkY, ms3, tc1, n4, ms4, hostY, hostW, n5) in
        let ck: macs = mac(y, k2) in
        let ms21: signature = cst_signature in
        new r7_107: seed;
        let m2_123: bitstring = enc2(Z, pkY, r7_107) in
        let m5: bitstring = (m2_123, hostY, TGT_37, e24) in
        event fullKC(hostY, hostW, n5, m2_123, TGT_37, e24);
        out(c23[!_32], m5)
    )
  |
    ! !_33 <= N2
    in(c21[!_33], (Lhost: tgs, Lkey: key));
    if (Lhost = T) then
      let Qkey: key = Kt
    else
      let Qkey: key = Lkey
  )
|
  ! !_34 <= N2
  in(c16[!_34], (Mhost1: tgs, Mhost2: server, Mkey: key))
)


Applying remove assignments of useless yields

Game 22 is
in(start, ());
new rkC: keyseed;
let pkC: pkey = pkgen2(rkC) in
new rkCs: skeyseed;
let spkC: spkey = spkgen2(rkCs) in
new rkK: keyseed;
new rkKs: skeyseed;
let spkK: spkey = spkgen2(rkKs) in
new rkCA: skeyseed;
let pkCA: spkey = spkgen2(rkCA) in
new rKt: symkeyseed;
let Kt: key = kgen(rKt) in
let x_53: sblocksize = concat1(C, pkC, spkC) in
new q1: sseed;
let certC: signature = sign2(x_53, sskgen2(rkCA), q1) in
out(c25, (pkC, spkC, spkK, pkCA));
(
  (
    (
      ! !_31 <= N
      in(c1[!_31], hostT: tgs);
      new n2: nonce;
      new tc0: timest;
      let x_76: sblocksize = padno(tc0, n2) in
      new r1: sseed;
      new n1: nonce;
      out(c2[!_31], (C, pkC, spkC, certC, tc0, n2, sign2(x_76, sskgen2(rkCs), r1), C, hostT, n1));
      in(c3[!_31], (m21: bitstring, =C, TGT_38: maxmac, m24: maxmac));
      find @i_133 <= N suchthat defined(k1[@i_133], ck[@i_133], k2[@i_133], m2_118[@i_133]) && (m21 = m2_118[@i_133]) then
        let hostZ: kas = K in
        let x_74: sblocksize = padno(tc0, n2) in
        let y': maxmac = concat6(C, pkC, spkC, certC, tc0, n2, sign2(x_74, sskgen2(rkCs), r1), C, hostT, n1) in
        if checkmac(y', k2[@i_133], ck[@i_133]) then
        let injbot2(concat4(AK_40: key, =n1, tk_39: timest, =hostT)) = decsym(m24, k1[@i_133]) in
        event fullCK(hostZ, hostT, n1, m21, TGT_38, m24);
        out(c18[!_31], acceptC1(hostZ, hostT))
      orfind @i_132 <= N suchthat defined(k1[@i_132], ck[@i_132], k2[@i_132], m2_123[@i_132]) && (m21 = m2_123[@i_132]) then
        let hostZ: kas = K in
        let x_74: sblocksize = padno(tc0, n2) in
        let y': maxmac = concat6(C, pkC, spkC, certC, tc0, n2, sign2(x_74, sskgen2(rkCs), r1), C, hostT, n1) in
        if checkmac(y', k2[@i_132], ck[@i_132]) then
        let injbot2(concat4(AK_40: key, =n1, tk_39: timest, =hostT)) = decsym(m24, k1[@i_132]) in
        event fullCK(hostZ, hostT, n1, m21, TGT_38, m24);
        out(c18[!_31], acceptC1(hostZ, hostT))
    |
      ! !_32 <= N
      in(c22[!_32], (hostY: client, pkY: pkey, spkY: spkey, ms3: signature, tc1: timest, n4: nonce, ms4: signature, hostV: client, hostW: tgs, n5: nonce));
      if (hostV = hostY) then
      if (((hostY = C) && ((pkY = pkC) && (spkY = spkC))) && check2(concat1(hostY, pkY, spkY), pkCA, ms3)) then
      find @i_78 <= N suchthat defined(n2[@i_78], tc0[@i_78], x_74[@i_78]) && (((tc1 = tc0[@i_78]) && (n4 = n2[@i_78])) && check2(padno(tc1, n4), spkY, ms4)) then
        find j1 <= N2 suchthat defined(Qkey[j1], Lhost[j1]) && (Lhost[j1] = hostW) then
        new s3_92: symkeyseed;
        let AK_35: key = kgen(s3_92) in
        new s1_93: symkeyseed;
        let k1: key = kgen(s1_93) in
        new s2_94: mkeyseed;
        let k2: mkey = mkgen(s2_94) in
        new r4_95: symseed;
        new tk_96: timest;
        let TGT_37: maxmac = encsym(concat5(AK_35, tk_96, hostY), Qkey[j1], r4_95) in
        new r5_97: symseed;
        let e24: maxmac = encsym(concat4(AK_35, n5, tk_96, hostW), k1, r5_97) in
        let y: maxmac = concat6(hostY, pkY, spkY, ms3, tc1, n4, ms4, hostY, hostW, n5) in
        let ck: macs = mac(y, k2) in
        new r7_99: seed;
        let m2_118: bitstring = enc2(Z, pkY, r7_99) in
        let m5: bitstring = (m2_118, hostY, TGT_37, e24) in
        event fullKC(hostY, hostW, n5, m2_118, TGT_37, e24);
        out(c23[!_32], m5)
      orfind @i_78 <= N suchthat defined(n2[@i_78], tc0[@i_78], x_76[@i_78]) && (((tc1 = tc0[@i_78]) && (n4 = n2[@i_78])) && check2(padno(tc1, n4), spkY, ms4)) then
        find j1 <= N2 suchthat defined(Qkey[j1], Lhost[j1]) && (Lhost[j1] = hostW) then
        new s3_100: symkeyseed;
        let AK_35: key = kgen(s3_100) in
        new s1_101: symkeyseed;
        let k1: key = kgen(s1_101) in
        new s2_102: mkeyseed;
        let k2: mkey = mkgen(s2_102) in
        new r4_103: symseed;
        new tk_104: timest;
        let TGT_37: maxmac = encsym(concat5(AK_35, tk_104, hostY), Qkey[j1], r4_103) in
        new r5_105: symseed;
        let e24: maxmac = encsym(concat4(AK_35, n5, tk_104, hostW), k1, r5_105) in
        let y: maxmac = concat6(hostY, pkY, spkY, ms3, tc1, n4, ms4, hostY, hostW, n5) in
        let ck: macs = mac(y, k2) in
        new r7_107: seed;
        let m2_123: bitstring = enc2(Z, pkY, r7_107) in
        let m5: bitstring = (m2_123, hostY, TGT_37, e24) in
        event fullKC(hostY, hostW, n5, m2_123, TGT_37, e24);
        out(c23[!_32], m5)
    )
  |
    ! !_33 <= N2
    in(c21[!_33], (Lhost: tgs, Lkey: key));
    if (Lhost = T) then
      let Qkey: key = Kt
    else
      let Qkey: key = Lkey
  )
|
  ! !_34 <= N2
  in(c16[!_34], (Mhost1: tgs, Mhost2: server, Mkey: key))
)


Applying remove assignments of binder k2 yields

Game 23 is
in(start, ());
new rkC: keyseed;
let pkC: pkey = pkgen2(rkC) in
new rkCs: skeyseed;
let spkC: spkey = spkgen2(rkCs) in
new rkK: keyseed;
new rkKs: skeyseed;
let spkK: spkey = spkgen2(rkKs) in
new rkCA: skeyseed;
let pkCA: spkey = spkgen2(rkCA) in
new rKt: symkeyseed;
let Kt: key = kgen(rKt) in
let x_53: sblocksize = concat1(C, pkC, spkC) in
new q1: sseed;
let certC: signature = sign2(x_53, sskgen2(rkCA), q1) in
out(c25, (pkC, spkC, spkK, pkCA));
(
  (
    (
      ! !_31 <= N
      in(c1[!_31], hostT: tgs);
      new n2: nonce;
      new tc0: timest;
      let x_76: sblocksize = padno(tc0, n2) in
      new r1: sseed;
      new n1: nonce;
      out(c2[!_31], (C, pkC, spkC, certC, tc0, n2, sign2(x_76, sskgen2(rkCs), r1), C, hostT, n1));
      in(c3[!_31], (m21: bitstring, =C, TGT_38: maxmac, m24: maxmac));
      find @i_133 <= N suchthat defined(k1[@i_133], ck[@i_133], k2[@i_133], m2_118[@i_133]) && (m21 = m2_118[@i_133]) then
        let hostZ: kas = K in
        let x_74: sblocksize = padno(tc0, n2) in
        let y': maxmac = concat6(C, pkC, spkC, certC, tc0, n2, sign2(x_74, sskgen2(rkCs), r1), C, hostT, n1) in
        if checkmac(y', k2[@i_133], ck[@i_133]) then
        let injbot2(concat4(AK_40: key, =n1, tk_39: timest, =hostT)) = decsym(m24, k1[@i_133]) in
        event fullCK(hostZ, hostT, n1, m21, TGT_38, m24);
        out(c18[!_31], acceptC1(hostZ, hostT))
      orfind @i_132 <= N suchthat defined(k1[@i_132], ck[@i_132], k2[@i_132], m2_123[@i_132]) && (m21 = m2_123[@i_132]) then
        let hostZ: kas = K in
        let x_74: sblocksize = padno(tc0, n2) in
        let y': maxmac = concat6(C, pkC, spkC, certC, tc0, n2, sign2(x_74, sskgen2(rkCs), r1), C, hostT, n1) in
        if checkmac(y', k2[@i_132], ck[@i_132]) then
        let injbot2(concat4(AK_40: key, =n1, tk_39: timest, =hostT)) = decsym(m24, k1[@i_132]) in
        event fullCK(hostZ, hostT, n1, m21, TGT_38, m24);
        out(c18[!_31], acceptC1(hostZ, hostT))
    |
      ! !_32 <= N
      in(c22[!_32], (hostY: client, pkY: pkey, spkY: spkey, ms3: signature, tc1: timest, n4: nonce, ms4: signature, hostV: client, hostW: tgs, n5: nonce));
      if (hostV = hostY) then
      if (((hostY = C) && ((pkY = pkC) && (spkY = spkC))) && check2(concat1(hostY, pkY, spkY), pkCA, ms3)) then
      find @i_78 <= N suchthat defined(n2[@i_78], tc0[@i_78], x_74[@i_78]) && (((tc1 = tc0[@i_78]) && (n4 = n2[@i_78])) && check2(padno(tc1, n4), spkY, ms4)) then
        find j1 <= N2 suchthat defined(Qkey[j1], Lhost[j1]) && (Lhost[j1] = hostW) then
        new s3_92: symkeyseed;
        let AK_35: key = kgen(s3_92) in
        new s1_93: symkeyseed;
        let k1: key = kgen(s1_93) in
        new s2_94: mkeyseed;
        let k2: mkey = mkgen(s2_94) in
        new r4_95: symseed;
        new tk_96: timest;
        let TGT_37: maxmac = encsym(concat5(AK_35, tk_96, hostY), Qkey[j1], r4_95) in
        new r5_97: symseed;
        let e24: maxmac = encsym(concat4(AK_35, n5, tk_96, hostW), k1, r5_97) in
        let y: maxmac = concat6(hostY, pkY, spkY, ms3, tc1, n4, ms4, hostY, hostW, n5) in
        let ck: macs = mac(y, mkgen(s2_94)) in
        new r7_99: seed;
        let m2_118: bitstring = enc2(Z, pkY, r7_99) in
        let m5: bitstring = (m2_118, hostY, TGT_37, e24) in
        event fullKC(hostY, hostW, n5, m2_118, TGT_37, e24);
        out(c23[!_32], m5)
      orfind @i_78 <= N suchthat defined(n2[@i_78], tc0[@i_78], x_76[@i_78]) && (((tc1 = tc0[@i_78]) && (n4 = n2[@i_78])) && check2(padno(tc1, n4), spkY, ms4)) then
        find j1 <= N2 suchthat defined(Qkey[j1], Lhost[j1]) && (Lhost[j1] = hostW) then
        new s3_100: symkeyseed;
        let AK_35: key = kgen(s3_100) in
        new s1_101: symkeyseed;
        let k1: key = kgen(s1_101) in
        new s2_102: mkeyseed;
        let k2: mkey = mkgen(s2_102) in
        new r4_103: symseed;
        new tk_104: timest;
        let TGT_37: maxmac = encsym(concat5(AK_35, tk_104, hostY), Qkey[j1], r4_103) in
        new r5_105: symseed;
        let e24: maxmac = encsym(concat4(AK_35, n5, tk_104, hostW), k1, r5_105) in
        let y: maxmac = concat6(hostY, pkY, spkY, ms3, tc1, n4, ms4, hostY, hostW, n5) in
        let ck: macs = mac(y, mkgen(s2_102)) in
        new r7_107: seed;
        let m2_123: bitstring = enc2(Z, pkY, r7_107) in
        let m5: bitstring = (m2_123, hostY, TGT_37, e24) in
        event fullKC(hostY, hostW, n5, m2_123, TGT_37, e24);
        out(c23[!_32], m5)
    )
  |
    ! !_33 <= N2
    in(c21[!_33], (Lhost: tgs, Lkey: key));
    if (Lhost = T) then
      let Qkey: key = Kt
    else
      let Qkey: key = Lkey
  )
|
  ! !_34 <= N2
  in(c16[!_34], (Mhost1: tgs, Mhost2: server, Mkey: key))
)


Applying SA rename k2 yields

Game 24 is
in(start, ());
new rkC: keyseed;
let pkC: pkey = pkgen2(rkC) in
new rkCs: skeyseed;
let spkC: spkey = spkgen2(rkCs) in
new rkK: keyseed;
new rkKs: skeyseed;
let spkK: spkey = spkgen2(rkKs) in
new rkCA: skeyseed;
let pkCA: spkey = spkgen2(rkCA) in
new rKt: symkeyseed;
let Kt: key = kgen(rKt) in
let x_53: sblocksize = concat1(C, pkC, spkC) in
new q1: sseed;
let certC: signature = sign2(x_53, sskgen2(rkCA), q1) in
out(c25, (pkC, spkC, spkK, pkCA));
(
  (
    (
      ! !_31 <= N
      in(c1[!_31], hostT: tgs);
      new n2: nonce;
      new tc0: timest;
      let x_76: sblocksize = padno(tc0, n2) in
      new r1: sseed;
      new n1: nonce;
      out(c2[!_31], (C, pkC, spkC, certC, tc0, n2, sign2(x_76, sskgen2(rkCs), r1), C, hostT, n1));
      in(c3[!_31], (m21: bitstring, =C, TGT_38: maxmac, m24: maxmac));
      find @i_133 <= N suchthat defined(k1[@i_133], ck[@i_133], k2_151[@i_133], m2_118[@i_133]) && (m21 = m2_118[@i_133]) then
        let hostZ: kas = K in
        let x_74: sblocksize = padno(tc0, n2) in
        let y': maxmac = concat6(C, pkC, spkC, certC, tc0, n2, sign2(x_74, sskgen2(rkCs), r1), C, hostT, n1) in
        if checkmac(y', k2_151[@i_133], ck[@i_133]) then
        let injbot2(concat4(AK_40: key, =n1, tk_39: timest, =hostT)) = decsym(m24, k1[@i_133]) in
        event fullCK(hostZ, hostT, n1, m21, TGT_38, m24);
        out(c18[!_31], acceptC1(hostZ, hostT))
      orfind @i_132 <= N suchthat defined(k1[@i_132], ck[@i_132], k2_152[@i_132], m2_123[@i_132]) && (m21 = m2_123[@i_132]) then
        let hostZ: kas = K in
        let x_74: sblocksize = padno(tc0, n2) in
        let y': maxmac = concat6(C, pkC, spkC, certC, tc0, n2, sign2(x_74, sskgen2(rkCs), r1), C, hostT, n1) in
        if checkmac(y', k2_152[@i_132], ck[@i_132]) then
        let injbot2(concat4(AK_40: key, =n1, tk_39: timest, =hostT)) = decsym(m24, k1[@i_132]) in
        event fullCK(hostZ, hostT, n1, m21, TGT_38, m24);
        out(c18[!_31], acceptC1(hostZ, hostT))
    |
      ! !_32 <= N
      in(c22[!_32], (hostY: client, pkY: pkey, spkY: spkey, ms3: signature, tc1: timest, n4: nonce, ms4: signature, hostV: client, hostW: tgs, n5: nonce));
      if (hostV = hostY) then
      if (((hostY = C) && ((pkY = pkC) && (spkY = spkC))) && check2(concat1(hostY, pkY, spkY), pkCA, ms3)) then
      find @i_78 <= N suchthat defined(n2[@i_78], tc0[@i_78], x_74[@i_78]) && (((tc1 = tc0[@i_78]) && (n4 = n2[@i_78])) && check2(padno(tc1, n4), spkY, ms4)) then
        find j1 <= N2 suchthat defined(Qkey[j1], Lhost[j1]) && (Lhost[j1] = hostW) then
        new s3_92: symkeyseed;
        let AK_35: key = kgen(s3_92) in
        new s1_93: symkeyseed;
        let k1: key = kgen(s1_93) in
        new s2_94: mkeyseed;
        let k2_151: mkey = mkgen(s2_94) in
        new r4_95: symseed;
        new tk_96: timest;
        let TGT_37: maxmac = encsym(concat5(AK_35, tk_96, hostY), Qkey[j1], r4_95) in
        new r5_97: symseed;
        let e24: maxmac = encsym(concat4(AK_35, n5, tk_96, hostW), k1, r5_97) in
        let y: maxmac = concat6(hostY, pkY, spkY, ms3, tc1, n4, ms4, hostY, hostW, n5) in
        let ck: macs = mac(y, mkgen(s2_94)) in
        new r7_99: seed;
        let m2_118: bitstring = enc2(Z, pkY, r7_99) in
        let m5: bitstring = (m2_118, hostY, TGT_37, e24) in
        event fullKC(hostY, hostW, n5, m2_118, TGT_37, e24);
        out(c23[!_32], m5)
      orfind @i_78 <= N suchthat defined(n2[@i_78], tc0[@i_78], x_76[@i_78]) && (((tc1 = tc0[@i_78]) && (n4 = n2[@i_78])) && check2(padno(tc1, n4), spkY, ms4)) then
        find j1 <= N2 suchthat defined(Qkey[j1], Lhost[j1]) && (Lhost[j1] = hostW) then
        new s3_100: symkeyseed;
        let AK_35: key = kgen(s3_100) in
        new s1_101: symkeyseed;
        let k1: key = kgen(s1_101) in
        new s2_102: mkeyseed;
        let k2_152: mkey = mkgen(s2_102) in
        new r4_103: symseed;
        new tk_104: timest;
        let TGT_37: maxmac = encsym(concat5(AK_35, tk_104, hostY), Qkey[j1], r4_103) in
        new r5_105: symseed;
        let e24: maxmac = encsym(concat4(AK_35, n5, tk_104, hostW), k1, r5_105) in
        let y: maxmac = concat6(hostY, pkY, spkY, ms3, tc1, n4, ms4, hostY, hostW, n5) in
        let ck: macs = mac(y, mkgen(s2_102)) in
        new r7_107: seed;
        let m2_123: bitstring = enc2(Z, pkY, r7_107) in
        let m5: bitstring = (m2_123, hostY, TGT_37, e24) in
        event fullKC(hostY, hostW, n5, m2_123, TGT_37, e24);
        out(c23[!_32], m5)
    )
  |
    ! !_33 <= N2
    in(c21[!_33], (Lhost: tgs, Lkey: key));
    if (Lhost = T) then
      let Qkey: key = Kt
    else
      let Qkey: key = Lkey
  )
|
  ! !_34 <= N2
  in(c16[!_34], (Mhost1: tgs, Mhost2: server, Mkey: key))
)


Applying remove assignments of binder k2_152 yields

Game 25 is
in(start, ());
new rkC: keyseed;
let pkC: pkey = pkgen2(rkC) in
new rkCs: skeyseed;
let spkC: spkey = spkgen2(rkCs) in
new rkK: keyseed;
new rkKs: skeyseed;
let spkK: spkey = spkgen2(rkKs) in
new rkCA: skeyseed;
let pkCA: spkey = spkgen2(rkCA) in
new rKt: symkeyseed;
let Kt: key = kgen(rKt) in
let x_53: sblocksize = concat1(C, pkC, spkC) in
new q1: sseed;
let certC: signature = sign2(x_53, sskgen2(rkCA), q1) in
out(c25, (pkC, spkC, spkK, pkCA));
(
  (
    (
      ! !_31 <= N
      in(c1[!_31], hostT: tgs);
      new n2: nonce;
      new tc0: timest;
      let x_76: sblocksize = padno(tc0, n2) in
      new r1: sseed;
      new n1: nonce;
      out(c2[!_31], (C, pkC, spkC, certC, tc0, n2, sign2(x_76, sskgen2(rkCs), r1), C, hostT, n1));
      in(c3[!_31], (m21: bitstring, =C, TGT_38: maxmac, m24: maxmac));
      find @i_133 <= N suchthat defined(k1[@i_133], ck[@i_133], k2_151[@i_133], m2_118[@i_133]) && (m21 = m2_118[@i_133]) then
        let hostZ: kas = K in
        let x_74: sblocksize = padno(tc0, n2) in
        let y': maxmac = concat6(C, pkC, spkC, certC, tc0, n2, sign2(x_74, sskgen2(rkCs), r1), C, hostT, n1) in
        if checkmac(y', k2_151[@i_133], ck[@i_133]) then
        let injbot2(concat4(AK_40: key, =n1, tk_39: timest, =hostT)) = decsym(m24, k1[@i_133]) in
        event fullCK(hostZ, hostT, n1, m21, TGT_38, m24);
        out(c18[!_31], acceptC1(hostZ, hostT))
      orfind @i_132 <= N suchthat defined(s2_102[@i_132], k2_152[@i_132], k1[@i_132], ck[@i_132], m2_123[@i_132]) && (m21 = m2_123[@i_132]) then
        let hostZ: kas = K in
        let x_74: sblocksize = padno(tc0, n2) in
        let y': maxmac = concat6(C, pkC, spkC, certC, tc0, n2, sign2(x_74, sskgen2(rkCs), r1), C, hostT, n1) in
        if checkmac(y', mkgen(s2_102[@i_132]), ck[@i_132]) then
        let injbot2(concat4(AK_40: key, =n1, tk_39: timest, =hostT)) = decsym(m24, k1[@i_132]) in
        event fullCK(hostZ, hostT, n1, m21, TGT_38, m24);
        out(c18[!_31], acceptC1(hostZ, hostT))
    |
      ! !_32 <= N
      in(c22[!_32], (hostY: client, pkY: pkey, spkY: spkey, ms3: signature, tc1: timest, n4: nonce, ms4: signature, hostV: client, hostW: tgs, n5: nonce));
      if (hostV = hostY) then
      if (((hostY = C) && ((pkY = pkC) && (spkY = spkC))) && check2(concat1(hostY, pkY, spkY), pkCA, ms3)) then
      find @i_78 <= N suchthat defined(n2[@i_78], tc0[@i_78], x_74[@i_78]) && (((tc1 = tc0[@i_78]) && (n4 = n2[@i_78])) && check2(padno(tc1, n4), spkY, ms4)) then
        find j1 <= N2 suchthat defined(Qkey[j1], Lhost[j1]) && (Lhost[j1] = hostW) then
        new s3_92: symkeyseed;
        let AK_35: key = kgen(s3_92) in
        new s1_93: symkeyseed;
        let k1: key = kgen(s1_93) in
        new s2_94: mkeyseed;
        let k2_151: mkey = mkgen(s2_94) in
        new r4_95: symseed;
        new tk_96: timest;
        let TGT_37: maxmac = encsym(concat5(AK_35, tk_96, hostY), Qkey[j1], r4_95) in
        new r5_97: symseed;
        let e24: maxmac = encsym(concat4(AK_35, n5, tk_96, hostW), k1, r5_97) in
        let y: maxmac = concat6(hostY, pkY, spkY, ms3, tc1, n4, ms4, hostY, hostW, n5) in
        let ck: macs = mac(y, mkgen(s2_94)) in
        new r7_99: seed;
        let m2_118: bitstring = enc2(Z, pkY, r7_99) in
        let m5: bitstring = (m2_118, hostY, TGT_37, e24) in
        event fullKC(hostY, hostW, n5, m2_118, TGT_37, e24);
        out(c23[!_32], m5)
      orfind @i_78 <= N suchthat defined(n2[@i_78], tc0[@i_78], x_76[@i_78]) && (((tc1 = tc0[@i_78]) && (n4 = n2[@i_78])) && check2(padno(tc1, n4), spkY, ms4)) then
        find j1 <= N2 suchthat defined(Qkey[j1], Lhost[j1]) && (Lhost[j1] = hostW) then
        new s3_100: symkeyseed;
        let AK_35: key = kgen(s3_100) in
        new s1_101: symkeyseed;
        let k1: key = kgen(s1_101) in
        new s2_102: mkeyseed;
        let k2_152: mkey = cst_mkey in
        new r4_103: symseed;
        new tk_104: timest;
        let TGT_37: maxmac = encsym(concat5(AK_35, tk_104, hostY), Qkey[j1], r4_103) in
        new r5_105: symseed;
        let e24: maxmac = encsym(concat4(AK_35, n5, tk_104, hostW), k1, r5_105) in
        let y: maxmac = concat6(hostY, pkY, spkY, ms3, tc1, n4, ms4, hostY, hostW, n5) in
        let ck: macs = mac(y, mkgen(s2_102)) in
        new r7_107: seed;
        let m2_123: bitstring = enc2(Z, pkY, r7_107) in
        let m5: bitstring = (m2_123, hostY, TGT_37, e24) in
        event fullKC(hostY, hostW, n5, m2_123, TGT_37, e24);
        out(c23[!_32], m5)
    )
  |
    ! !_33 <= N2
    in(c21[!_33], (Lhost: tgs, Lkey: key));
    if (Lhost = T) then
      let Qkey: key = Kt
    else
      let Qkey: key = Lkey
  )
|
  ! !_34 <= N2
  in(c16[!_34], (Mhost1: tgs, Mhost2: server, Mkey: key))
)


Applying remove assignments of binder k2_151 yields

Game 26 is
in(start, ());
new rkC: keyseed;
let pkC: pkey = pkgen2(rkC) in
new rkCs: skeyseed;
let spkC: spkey = spkgen2(rkCs) in
new rkK: keyseed;
new rkKs: skeyseed;
let spkK: spkey = spkgen2(rkKs) in
new rkCA: skeyseed;
let pkCA: spkey = spkgen2(rkCA) in
new rKt: symkeyseed;
let Kt: key = kgen(rKt) in
let x_53: sblocksize = concat1(C, pkC, spkC) in
new q1: sseed;
let certC: signature = sign2(x_53, sskgen2(rkCA), q1) in
out(c25, (pkC, spkC, spkK, pkCA));
(
  (
    (
      ! !_31 <= N
      in(c1[!_31], hostT: tgs);
      new n2: nonce;
      new tc0: timest;
      let x_76: sblocksize = padno(tc0, n2) in
      new r1: sseed;
      new n1: nonce;
      out(c2[!_31], (C, pkC, spkC, certC, tc0, n2, sign2(x_76, sskgen2(rkCs), r1), C, hostT, n1));
      in(c3[!_31], (m21: bitstring, =C, TGT_38: maxmac, m24: maxmac));
      find @i_133 <= N suchthat defined(s2_94[@i_133], k2_151[@i_133], k1[@i_133], ck[@i_133], m2_118[@i_133]) && (m21 = m2_118[@i_133]) then
        let hostZ: kas = K in
        let x_74: sblocksize = padno(tc0, n2) in
        let y': maxmac = concat6(C, pkC, spkC, certC, tc0, n2, sign2(x_74, sskgen2(rkCs), r1), C, hostT, n1) in
        if checkmac(y', mkgen(s2_94[@i_133]), ck[@i_133]) then
        let injbot2(concat4(AK_40: key, =n1, tk_39: timest, =hostT)) = decsym(m24, k1[@i_133]) in
        event fullCK(hostZ, hostT, n1, m21, TGT_38, m24);
        out(c18[!_31], acceptC1(hostZ, hostT))
      orfind @i_132 <= N suchthat defined(s2_102[@i_132], k2_152[@i_132], k1[@i_132], ck[@i_132], m2_123[@i_132]) && (m21 = m2_123[@i_132]) then
        let hostZ: kas = K in
        let x_74: sblocksize = padno(tc0, n2) in
        let y': maxmac = concat6(C, pkC, spkC, certC, tc0, n2, sign2(x_74, sskgen2(rkCs), r1), C, hostT, n1) in
        if checkmac(y', mkgen(s2_102[@i_132]), ck[@i_132]) then
        let injbot2(concat4(AK_40: key, =n1, tk_39: timest, =hostT)) = decsym(m24, k1[@i_132]) in
        event fullCK(hostZ, hostT, n1, m21, TGT_38, m24);
        out(c18[!_31], acceptC1(hostZ, hostT))
    |
      ! !_32 <= N
      in(c22[!_32], (hostY: client, pkY: pkey, spkY: spkey, ms3: signature, tc1: timest, n4: nonce, ms4: signature, hostV: client, hostW: tgs, n5: nonce));
      if (hostV = hostY) then
      if (((hostY = C) && ((pkY = pkC) && (spkY = spkC))) && check2(concat1(hostY, pkY, spkY), pkCA, ms3)) then
      find @i_78 <= N suchthat defined(n2[@i_78], tc0[@i_78], x_74[@i_78]) && (((tc1 = tc0[@i_78]) && (n4 = n2[@i_78])) && check2(padno(tc1, n4), spkY, ms4)) then
        find j1 <= N2 suchthat defined(Qkey[j1], Lhost[j1]) && (Lhost[j1] = hostW) then
        new s3_92: symkeyseed;
        let AK_35: key = kgen(s3_92) in
        new s1_93: symkeyseed;
        let k1: key = kgen(s1_93) in
        new s2_94: mkeyseed;
        let k2_151: mkey = cst_mkey in
        new r4_95: symseed;
        new tk_96: timest;
        let TGT_37: maxmac = encsym(concat5(AK_35, tk_96, hostY), Qkey[j1], r4_95) in
        new r5_97: symseed;
        let e24: maxmac = encsym(concat4(AK_35, n5, tk_96, hostW), k1, r5_97) in
        let y: maxmac = concat6(hostY, pkY, spkY, ms3, tc1, n4, ms4, hostY, hostW, n5) in
        let ck: macs = mac(y, mkgen(s2_94)) in
        new r7_99: seed;
        let m2_118: bitstring = enc2(Z, pkY, r7_99) in
        let m5: bitstring = (m2_118, hostY, TGT_37, e24) in
        event fullKC(hostY, hostW, n5, m2_118, TGT_37, e24);
        out(c23[!_32], m5)
      orfind @i_78 <= N suchthat defined(n2[@i_78], tc0[@i_78], x_76[@i_78]) && (((tc1 = tc0[@i_78]) && (n4 = n2[@i_78])) && check2(padno(tc1, n4), spkY, ms4)) then
        find j1 <= N2 suchthat defined(Qkey[j1], Lhost[j1]) && (Lhost[j1] = hostW) then
        new s3_100: symkeyseed;
        let AK_35: key = kgen(s3_100) in
        new s1_101: symkeyseed;
        let k1: key = kgen(s1_101) in
        new s2_102: mkeyseed;
        let k2_152: mkey = cst_mkey in
        new r4_103: symseed;
        new tk_104: timest;
        let TGT_37: maxmac = encsym(concat5(AK_35, tk_104, hostY), Qkey[j1], r4_103) in
        new r5_105: symseed;
        let e24: maxmac = encsym(concat4(AK_35, n5, tk_104, hostW), k1, r5_105) in
        let y: maxmac = concat6(hostY, pkY, spkY, ms3, tc1, n4, ms4, hostY, hostW, n5) in
        let ck: macs = mac(y, mkgen(s2_102)) in
        new r7_107: seed;
        let m2_123: bitstring = enc2(Z, pkY, r7_107) in
        let m5: bitstring = (m2_123, hostY, TGT_37, e24) in
        event fullKC(hostY, hostW, n5, m2_123, TGT_37, e24);
        out(c23[!_32], m5)
    )
  |
    ! !_33 <= N2
    in(c21[!_33], (Lhost: tgs, Lkey: key));
    if (Lhost = T) then
      let Qkey: key = Kt
    else
      let Qkey: key = Lkey
  )
|
  ! !_34 <= N2
  in(c16[!_34], (Mhost1: tgs, Mhost2: server, Mkey: key))
)


Applying equivalence
equiv ! !_25 <= N3 new r: mkeyseed; (
  ! !_26 <= N (x: maxmac) -> mac(x, mkgen(r)),
  ! !_27 <= N2 (m: maxmac, ma: macs) -> checkmac(m, mkgen(r), ma))
<=(N3 * Pmac(time, N, N2))=>
      ! !_28 <= N3 new r: mkeyseed; (
  ! !_29 <= N (x_45: maxmac) -> let x: maxmac = x_45 in mac2(x, mkgen2(r)),
  ! !_30 <= N2 (m: maxmac, ma: macs) -> find j <= N suchthat defined(x[j]) && ((m = x[j]) && (ma = mac2(x[j], mkgen2(r)))) then true else false)
with s2_102 [Difference of probability N * Pmac(time + time(context for game 26), 1., N)] yields

Game 27 is
in(start, ());
new rkC: keyseed;
let pkC: pkey = pkgen2(rkC) in
new rkCs: skeyseed;
let spkC: spkey = spkgen2(rkCs) in
new rkK: keyseed;
new rkKs: skeyseed;
let spkK: spkey = spkgen2(rkKs) in
new rkCA: skeyseed;
let pkCA: spkey = spkgen2(rkCA) in
new rKt: symkeyseed;
let Kt: key = kgen(rKt) in
let x_53: sblocksize = concat1(C, pkC, spkC) in
new q1: sseed;
let certC: signature = sign2(x_53, sskgen2(rkCA), q1) in
out(c25, (pkC, spkC, spkK, pkCA));
(
  (
    (
      ! !_31 <= N
      in(c1[!_31], hostT: tgs);
      new n2: nonce;
      new tc0: timest;
      let x_76: sblocksize = padno(tc0, n2) in
      new r1: sseed;
      new n1: nonce;
      out(c2[!_31], (C, pkC, spkC, certC, tc0, n2, sign2(x_76, sskgen2(rkCs), r1), C, hostT, n1));
      in(c3[!_31], (m21: bitstring, =C, TGT_38: maxmac, m24: maxmac));
      find @i_133 <= N suchthat defined(s2_94[@i_133], k2_151[@i_133], k1[@i_133], ck[@i_133], m2_118[@i_133]) && (m21 = m2_118[@i_133]) then
        let hostZ: kas = K in
        let x_74: sblocksize = padno(tc0, n2) in
        let y': maxmac = concat6(C, pkC, spkC, certC, tc0, n2, sign2(x_74, sskgen2(rkCs), r1), C, hostT, n1) in
        if checkmac(y', mkgen(s2_94[@i_133]), ck[@i_133]) then
        let injbot2(concat4(AK_40: key, =n1, tk_39: timest, =hostT)) = decsym(m24, k1[@i_133]) in
        event fullCK(hostZ, hostT, n1, m21, TGT_38, m24);
        out(c18[!_31], acceptC1(hostZ, hostT))
      orfind @i_132 <= N suchthat defined(s2_102[@i_132], k2_152[@i_132], k1[@i_132], ck[@i_132], m2_123[@i_132]) && (m21 = m2_123[@i_132]) then
        let hostZ: kas = K in
        let x_74: sblocksize = padno(tc0, n2) in
        let y': maxmac = concat6(C, pkC, spkC, certC, tc0, n2, sign2(x_74, sskgen2(rkCs), r1), C, hostT, n1) in
        if defined(x_153[@i_132]) && ((y' = x_153[@i_132]) && (ck[@i_132] = mac2(x_153[@i_132], mkgen2(s2_102[@i_132])))) then
          if true then
          let injbot2(concat4(AK_40: key, =n1, tk_39: timest, =hostT)) = decsym(m24, k1[@i_132]) in
          event fullCK(hostZ, hostT, n1, m21, TGT_38, m24);
          out(c18[!_31], acceptC1(hostZ, hostT))
        else
          if false then
          let injbot2(concat4(AK_40: key, =n1, tk_39: timest, =hostT)) = decsym(m24, k1[@i_132]) in
          event fullCK(hostZ, hostT, n1, m21, TGT_38, m24);
          out(c18[!_31], acceptC1(hostZ, hostT))
    |
      ! !_32 <= N
      in(c22[!_32], (hostY: client, pkY: pkey, spkY: spkey, ms3: signature, tc1: timest, n4: nonce, ms4: signature, hostV: client, hostW: tgs, n5: nonce));
      if (hostV = hostY) then
      if (((hostY = C) && ((pkY = pkC) && (spkY = spkC))) && check2(concat1(hostY, pkY, spkY), pkCA, ms3)) then
      find @i_78 <= N suchthat defined(n2[@i_78], tc0[@i_78], x_74[@i_78]) && (((tc1 = tc0[@i_78]) && (n4 = n2[@i_78])) && check2(padno(tc1, n4), spkY, ms4)) then
        find j1 <= N2 suchthat defined(Qkey[j1], Lhost[j1]) && (Lhost[j1] = hostW) then
        new s3_92: symkeyseed;
        let AK_35: key = kgen(s3_92) in
        new s1_93: symkeyseed;
        let k1: key = kgen(s1_93) in
        new s2_94: mkeyseed;
        let k2_151: mkey = cst_mkey in
        new r4_95: symseed;
        new tk_96: timest;
        let TGT_37: maxmac = encsym(concat5(AK_35, tk_96, hostY), Qkey[j1], r4_95) in
        new r5_97: symseed;
        let e24: maxmac = encsym(concat4(AK_35, n5, tk_96, hostW), k1, r5_97) in
        let y: maxmac = concat6(hostY, pkY, spkY, ms3, tc1, n4, ms4, hostY, hostW, n5) in
        let ck: macs = mac(y, mkgen(s2_94)) in
        new r7_99: seed;
        let m2_118: bitstring = enc2(Z, pkY, r7_99) in
        let m5: bitstring = (m2_118, hostY, TGT_37, e24) in
        event fullKC(hostY, hostW, n5, m2_118, TGT_37, e24);
        out(c23[!_32], m5)
      orfind @i_78 <= N suchthat defined(n2[@i_78], tc0[@i_78], x_76[@i_78]) && (((tc1 = tc0[@i_78]) && (n4 = n2[@i_78])) && check2(padno(tc1, n4), spkY, ms4)) then
        find j1 <= N2 suchthat defined(Qkey[j1], Lhost[j1]) && (Lhost[j1] = hostW) then
        new s3_100: symkeyseed;
        let AK_35: key = kgen(s3_100) in
        new s1_101: symkeyseed;
        let k1: key = kgen(s1_101) in
        new s2_102: mkeyseed;
        let k2_152: mkey = cst_mkey in
        new r4_103: symseed;
        new tk_104: timest;
        let TGT_37: maxmac = encsym(concat5(AK_35, tk_104, hostY), Qkey[j1], r4_103) in
        new r5_105: symseed;
        let e24: maxmac = encsym(concat4(AK_35, n5, tk_104, hostW), k1, r5_105) in
        let y: maxmac = concat6(hostY, pkY, spkY, ms3, tc1, n4, ms4, hostY, hostW, n5) in
        let x_153: maxmac = y in
        let ck: macs = mac2(x_153, mkgen2(s2_102)) in
        new r7_107: seed;
        let m2_123: bitstring = enc2(Z, pkY, r7_107) in
        let m5: bitstring = (m2_123, hostY, TGT_37, e24) in
        event fullKC(hostY, hostW, n5, m2_123, TGT_37, e24);
        out(c23[!_32], m5)
    )
  |
    ! !_33 <= N2
    in(c21[!_33], (Lhost: tgs, Lkey: key));
    if (Lhost = T) then
      let Qkey: key = Kt
    else
      let Qkey: key = Lkey
  )
|
  ! !_34 <= N2
  in(c16[!_34], (Mhost1: tgs, Mhost2: server, Mkey: key))
)


Applying simplify [Difference of probability 0.5 * N * N / |nonce|] yields

Game 28 is
in(start, ());
new rkC: keyseed;
let pkC: pkey = pkgen2(rkC) in
new rkCs: skeyseed;
let spkC: spkey = spkgen2(rkCs) in
new rkKs: skeyseed;
let spkK: spkey = spkgen2(rkKs) in
new rkCA: skeyseed;
let pkCA: spkey = spkgen2(rkCA) in
new rKt: symkeyseed;
let Kt: key = kgen(rKt) in
let x_53: sblocksize = concat1(C, pkC, spkC) in
new q1: sseed;
let certC: signature = sign2(x_53, sskgen2(rkCA), q1) in
out(c25, (pkC, spkC, spkK, pkCA));
(
  (
    (
      ! !_31 <= N
      in(c1[!_31], hostT: tgs);
      new n2: nonce;
      new tc0: timest;
      let x_76: sblocksize = padno(tc0, n2) in
      new r1: sseed;
      new n1: nonce;
      out(c2[!_31], (C, pkC, spkC, certC, tc0, n2, sign2(x_76, sskgen2(rkCs), r1), C, hostT, n1));
      in(c3[!_31], (m21: bitstring, =C, TGT_38: maxmac, m24: maxmac));
      find @i_133 <= N suchthat defined(k1[@i_133], ck[@i_133], s2_94[@i_133], m2_118[@i_133]) && (m21 = m2_118[@i_133]) then
        let hostZ: kas = K in
        let x_74: sblocksize = padno(tc0, n2) in
        let y': maxmac = concat6(C, pkC, spkC, certC, tc0, n2, sign2(x_74, sskgen2(rkCs), r1), C, hostT, n1) in
        if checkmac(y', mkgen(s2_94[@i_133]), ck[@i_133]) then
        let injbot2(concat4(AK_40: key, =n1, tk_39: timest, =hostT)) = decsym(m24, k1[@i_133]) in
        event fullCK(hostZ, hostT, n1, m21, TGT_38, m24);
        out(c18[!_31], acceptC1(hostZ, hostT))
      orfind @i_132 <= N suchthat defined(k1[@i_132], n5[@i_132], hostW[@i_132], ms4[@i_132], tc1[@i_132], ms3[@i_132], m2_123[@i_132]) && (m21 = m2_123[@i_132]) then
        let hostZ: kas = K in
        let x_74: sblocksize = padno(tc0, n2) in
        let y': maxmac = concat6(C, pkC, spkC, certC, tc0, n2, sign2(x_74, sskgen2(rkCs), r1), C, hostT, n1) in
        if defined(k1[@i_132], n5[@i_132], hostW[@i_132], ms4[@i_132], tc1[@i_132], ms3[@i_132]) && ((certC = ms3[@i_132]) && ((tc0 = tc1[@i_132]) && ((!_31 = @i_78[@i_132]) && ((sign2(x_74, sskgen2(rkCs), r1) = ms4[@i_132]) && ((hostT = hostW[@i_132]) && (n1 = n5[@i_132])))))) then
        let injbot2(concat4(AK_40: key, =n1, tk_39: timest, =hostT)) = decsym(m24, k1[@i_132]) in
        event fullCK(hostZ, hostT, n1, m21, TGT_38, m24);
        out(c18[!_31], acceptC1(hostZ, hostT))
    |
      ! !_32 <= N
      in(c22[!_32], (hostY: client, pkY: pkey, spkY: spkey, ms3: signature, tc1: timest, n4: nonce, ms4: signature, hostV: client, hostW: tgs, n5: nonce));
      if (hostV = hostY) then
      if (((hostY = C) && ((pkY = pkC) && (spkY = spkC))) && check2(concat1(hostY, pkY, spkY), pkCA, ms3)) then
      find @i_78 <= N suchthat defined(n2[@i_78], tc0[@i_78], x_74[@i_78]) && (((tc1 = tc0[@i_78]) && (n4 = n2[@i_78])) && check2(padno(tc1, n4), spkY, ms4)) then
        find j1 <= N2 suchthat defined(Qkey[j1], Lhost[j1]) && (Lhost[j1] = hostW) then
        new s3_92: symkeyseed;
        let AK_35: key = kgen(s3_92) in
        new s1_93: symkeyseed;
        let k1: key = kgen(s1_93) in
        new s2_94: mkeyseed;
        let k2_151: mkey = cst_mkey in
        new r4_95: symseed;
        new tk_96: timest;
        let TGT_37: maxmac = encsym(concat5(AK_35, tk_96, hostY), Qkey[j1], r4_95) in
        new r5_97: symseed;
        let e24: maxmac = encsym(concat4(AK_35, n5, tk_96, hostW), k1, r5_97) in
        let y: maxmac = concat6(hostY, pkY, spkY, ms3, tc1, n4, ms4, hostY, hostW, n5) in
        let ck: macs = mac(y, mkgen(s2_94)) in
        new r7_99: seed;
        let m2_118: bitstring = enc2(Z, pkY, r7_99) in
        let m5: bitstring = (m2_118, hostY, TGT_37, e24) in
        event fullKC(hostY, hostW, n5, m2_118, TGT_37, e24);
        out(c23[!_32], m5)
      orfind @i_78 <= N suchthat defined(n2[@i_78], tc0[@i_78], x_76[@i_78]) && (((tc1 = tc0[@i_78]) && (n4 = n2[@i_78])) && check2(padno(tc1, n4), spkY, ms4)) then
        find j1 <= N2 suchthat defined(Qkey[j1], Lhost[j1]) && (Lhost[j1] = hostW) then
        new s3_100: symkeyseed;
        let AK_35: key = kgen(s3_100) in
        new s1_101: symkeyseed;
        let k1: key = kgen(s1_101) in
        new s2_102: mkeyseed;
        let k2_152: mkey = cst_mkey in
        new r4_103: symseed;
        new tk_104: timest;
        let TGT_37: maxmac = encsym(concat5(AK_35, tk_104, hostY), Qkey[j1], r4_103) in
        new r5_105: symseed;
        let e24: maxmac = encsym(concat4(AK_35, n5, tk_104, hostW), k1, r5_105) in
        let y: maxmac = concat6(hostY, pkY, spkY, ms3, tc1, n4, ms4, hostY, hostW, n5) in
        let x_153: maxmac = y in
        let ck: macs = mac2(x_153, mkgen2(s2_102)) in
        new r7_107: seed;
        let m2_123: bitstring = enc2(Z, pkY, r7_107) in
        let m5: bitstring = (m2_123, hostY, TGT_37, e24) in
        event fullKC(hostY, hostW, n5, m2_123, TGT_37, e24);
        out(c23[!_32], m5)
    )
  |
    ! !_33 <= N2
    in(c21[!_33], (Lhost: tgs, Lkey: key));
    if (Lhost = T) then
      let Qkey: key = Kt
    else
      let Qkey: key = Lkey
  )
|
  ! !_34 <= N2
  in(c16[!_34], (Mhost1: tgs, Mhost2: server, Mkey: key))
)


Applying move new all binders yields

Game 29 is
in(start, ());
new rkC: keyseed;
let pkC: pkey = pkgen2(rkC) in
new rkCs: skeyseed;
let spkC: spkey = spkgen2(rkCs) in
new rkKs: skeyseed;
let spkK: spkey = spkgen2(rkKs) in
new rkCA: skeyseed;
let pkCA: spkey = spkgen2(rkCA) in
new rKt: symkeyseed;
let Kt: key = kgen(rKt) in
let x_53: sblocksize = concat1(C, pkC, spkC) in
new q1: sseed;
let certC: signature = sign2(x_53, sskgen2(rkCA), q1) in
out(c25, (pkC, spkC, spkK, pkCA));
(
  (
    (
      ! !_31 <= N
      in(c1[!_31], hostT: tgs);
      new n2: nonce;
      new tc0: timest;
      let x_76: sblocksize = padno(tc0, n2) in
      new n1: nonce;
      new r1: sseed;
      out(c2[!_31], (C, pkC, spkC, certC, tc0, n2, sign2(x_76, sskgen2(rkCs), r1), C, hostT, n1));
      in(c3[!_31], (m21: bitstring, =C, TGT_38: maxmac, m24: maxmac));
      find @i_133 <= N suchthat defined(k1[@i_133], ck[@i_133], s2_94[@i_133], m2_118[@i_133]) && (m21 = m2_118[@i_133]) then
        let hostZ: kas = K in
        let x_74: sblocksize = padno(tc0, n2) in
        let y': maxmac = concat6(C, pkC, spkC, certC, tc0, n2, sign2(x_74, sskgen2(rkCs), r1), C, hostT, n1) in
        if checkmac(y', mkgen(s2_94[@i_133]), ck[@i_133]) then
        let injbot2(concat4(AK_40: key, =n1, tk_39: timest, =hostT)) = decsym(m24, k1[@i_133]) in
        event fullCK(hostZ, hostT, n1, m21, TGT_38, m24);
        out(c18[!_31], acceptC1(hostZ, hostT))
      orfind @i_132 <= N suchthat defined(k1[@i_132], n5[@i_132], hostW[@i_132], ms4[@i_132], tc1[@i_132], ms3[@i_132], m2_123[@i_132]) && (m21 = m2_123[@i_132]) then
        let hostZ: kas = K in
        let x_74: sblocksize = padno(tc0, n2) in
        let y': maxmac = concat6(C, pkC, spkC, certC, tc0, n2, sign2(x_74, sskgen2(rkCs), r1), C, hostT, n1) in
        if defined(k1[@i_132], n5[@i_132], hostW[@i_132], ms4[@i_132], tc1[@i_132], ms3[@i_132]) && ((certC = ms3[@i_132]) && ((tc0 = tc1[@i_132]) && ((!_31 = @i_78[@i_132]) && ((sign2(x_74, sskgen2(rkCs), r1) = ms4[@i_132]) && ((hostT = hostW[@i_132]) && (n1 = n5[@i_132])))))) then
        let injbot2(concat4(AK_40: key, =n1, tk_39: timest, =hostT)) = decsym(m24, k1[@i_132]) in
        event fullCK(hostZ, hostT, n1, m21, TGT_38, m24);
        out(c18[!_31], acceptC1(hostZ, hostT))
    |
      ! !_32 <= N
      in(c22[!_32], (hostY: client, pkY: pkey, spkY: spkey, ms3: signature, tc1: timest, n4: nonce, ms4: signature, hostV: client, hostW: tgs, n5: nonce));
      if (hostV = hostY) then
      if (((hostY = C) && ((pkY = pkC) && (spkY = spkC))) && check2(concat1(hostY, pkY, spkY), pkCA, ms3)) then
      find @i_78 <= N suchthat defined(n2[@i_78], tc0[@i_78], x_74[@i_78]) && (((tc1 = tc0[@i_78]) && (n4 = n2[@i_78])) && check2(padno(tc1, n4), spkY, ms4)) then
        find j1 <= N2 suchthat defined(Qkey[j1], Lhost[j1]) && (Lhost[j1] = hostW) then
        new s3_92: symkeyseed;
        let AK_35: key = kgen(s3_92) in
        new s1_93: symkeyseed;
        let k1: key = kgen(s1_93) in
        new s2_94: mkeyseed;
        let k2_151: mkey = cst_mkey in
        new tk_96: timest;
        new r4_95: symseed;
        let TGT_37: maxmac = encsym(concat5(AK_35, tk_96, hostY), Qkey[j1], r4_95) in
        new r5_97: symseed;
        let e24: maxmac = encsym(concat4(AK_35, n5, tk_96, hostW), k1, r5_97) in
        let y: maxmac = concat6(hostY, pkY, spkY, ms3, tc1, n4, ms4, hostY, hostW, n5) in
        let ck: macs = mac(y, mkgen(s2_94)) in
        new r7_99: seed;
        let m2_118: bitstring = enc2(Z, pkY, r7_99) in
        let m5: bitstring = (m2_118, hostY, TGT_37, e24) in
        event fullKC(hostY, hostW, n5, m2_118, TGT_37, e24);
        out(c23[!_32], m5)
      orfind @i_78 <= N suchthat defined(n2[@i_78], tc0[@i_78], x_76[@i_78]) && (((tc1 = tc0[@i_78]) && (n4 = n2[@i_78])) && check2(padno(tc1, n4), spkY, ms4)) then
        find j1 <= N2 suchthat defined(Qkey[j1], Lhost[j1]) && (Lhost[j1] = hostW) then
        new s3_100: symkeyseed;
        let AK_35: key = kgen(s3_100) in
        new s1_101: symkeyseed;
        let k1: key = kgen(s1_101) in
        let k2_152: mkey = cst_mkey in
        new tk_104: timest;
        new r4_103: symseed;
        let TGT_37: maxmac = encsym(concat5(AK_35, tk_104, hostY), Qkey[j1], r4_103) in
        new r5_105: symseed;
        let e24: maxmac = encsym(concat4(AK_35, n5, tk_104, hostW), k1, r5_105) in
        let y: maxmac = concat6(hostY, pkY, spkY, ms3, tc1, n4, ms4, hostY, hostW, n5) in
        let x_153: maxmac = y in
        new s2_102: mkeyseed;
        let ck: macs = mac2(x_153, mkgen2(s2_102)) in
        new r7_107: seed;
        let m2_123: bitstring = enc2(Z, pkY, r7_107) in
        let m5: bitstring = (m2_123, hostY, TGT_37, e24) in
        event fullKC(hostY, hostW, n5, m2_123, TGT_37, e24);
        out(c23[!_32], m5)
    )
  |
    ! !_33 <= N2
    in(c21[!_33], (Lhost: tgs, Lkey: key));
    if (Lhost = T) then
      let Qkey: key = Kt
    else
      let Qkey: key = Lkey
  )
|
  ! !_34 <= N2
  in(c16[!_34], (Mhost1: tgs, Mhost2: server, Mkey: key))
)


Applying remove assignments of useless yields

Game 30 is
in(start, ());
new rkC: keyseed;
let pkC: pkey = pkgen2(rkC) in
new rkCs: skeyseed;
let spkC: spkey = spkgen2(rkCs) in
new rkKs: skeyseed;
let spkK: spkey = spkgen2(rkKs) in
new rkCA: skeyseed;
let pkCA: spkey = spkgen2(rkCA) in
new rKt: symkeyseed;
let Kt: key = kgen(rKt) in
let x_53: sblocksize = concat1(C, pkC, spkC) in
new q1: sseed;
let certC: signature = sign2(x_53, sskgen2(rkCA), q1) in
out(c25, (pkC, spkC, spkK, pkCA));
(
  (
    (
      ! !_31 <= N
      in(c1[!_31], hostT: tgs);
      new n2: nonce;
      new tc0: timest;
      let x_76: sblocksize = padno(tc0, n2) in
      new n1: nonce;
      new r1: sseed;
      out(c2[!_31], (C, pkC, spkC, certC, tc0, n2, sign2(x_76, sskgen2(rkCs), r1), C, hostT, n1));
      in(c3[!_31], (m21: bitstring, =C, TGT_38: maxmac, m24: maxmac));
      find @i_133 <= N suchthat defined(k1[@i_133], ck[@i_133], s2_94[@i_133], m2_118[@i_133]) && (m21 = m2_118[@i_133]) then
        let hostZ: kas = K in
        let x_74: sblocksize = padno(tc0, n2) in
        let y': maxmac = concat6(C, pkC, spkC, certC, tc0, n2, sign2(x_74, sskgen2(rkCs), r1), C, hostT, n1) in
        if checkmac(y', mkgen(s2_94[@i_133]), ck[@i_133]) then
        let injbot2(concat4(AK_40: key, =n1, tk_39: timest, =hostT)) = decsym(m24, k1[@i_133]) in
        event fullCK(hostZ, hostT, n1, m21, TGT_38, m24);
        out(c18[!_31], acceptC1(hostZ, hostT))
      orfind @i_132 <= N suchthat defined(k1[@i_132], n5[@i_132], hostW[@i_132], ms4[@i_132], tc1[@i_132], ms3[@i_132], m2_123[@i_132]) && (m21 = m2_123[@i_132]) then
        let hostZ: kas = K in
        let x_74: sblocksize = padno(tc0, n2) in
        if defined(k1[@i_132], n5[@i_132], hostW[@i_132], ms4[@i_132], tc1[@i_132], ms3[@i_132]) && ((certC = ms3[@i_132]) && ((tc0 = tc1[@i_132]) && ((!_31 = @i_78[@i_132]) && ((sign2(x_74, sskgen2(rkCs), r1) = ms4[@i_132]) && ((hostT = hostW[@i_132]) && (n1 = n5[@i_132])))))) then
        let injbot2(concat4(AK_40: key, =n1, tk_39: timest, =hostT)) = decsym(m24, k1[@i_132]) in
        event fullCK(hostZ, hostT, n1, m21, TGT_38, m24);
        out(c18[!_31], acceptC1(hostZ, hostT))
    |
      ! !_32 <= N
      in(c22[!_32], (hostY: client, pkY: pkey, spkY: spkey, ms3: signature, tc1: timest, n4: nonce, ms4: signature, hostV: client, hostW: tgs, n5: nonce));
      if (hostV = hostY) then
      if (((hostY = C) && ((pkY = pkC) && (spkY = spkC))) && check2(concat1(hostY, pkY, spkY), pkCA, ms3)) then
      find @i_78 <= N suchthat defined(n2[@i_78], tc0[@i_78], x_74[@i_78]) && (((tc1 = tc0[@i_78]) && (n4 = n2[@i_78])) && check2(padno(tc1, n4), spkY, ms4)) then
        find j1 <= N2 suchthat defined(Qkey[j1], Lhost[j1]) && (Lhost[j1] = hostW) then
        new s3_92: symkeyseed;
        let AK_35: key = kgen(s3_92) in
        new s1_93: symkeyseed;
        let k1: key = kgen(s1_93) in
        new s2_94: mkeyseed;
        new tk_96: timest;
        new r4_95: symseed;
        let TGT_37: maxmac = encsym(concat5(AK_35, tk_96, hostY), Qkey[j1], r4_95) in
        new r5_97: symseed;
        let e24: maxmac = encsym(concat4(AK_35, n5, tk_96, hostW), k1, r5_97) in
        let y: maxmac = concat6(hostY, pkY, spkY, ms3, tc1, n4, ms4, hostY, hostW, n5) in
        let ck: macs = mac(y, mkgen(s2_94)) in
        new r7_99: seed;
        let m2_118: bitstring = enc2(Z, pkY, r7_99) in
        let m5: bitstring = (m2_118, hostY, TGT_37, e24) in
        event fullKC(hostY, hostW, n5, m2_118, TGT_37, e24);
        out(c23[!_32], m5)
      orfind @i_78 <= N suchthat defined(n2[@i_78], tc0[@i_78], x_76[@i_78]) && (((tc1 = tc0[@i_78]) && (n4 = n2[@i_78])) && check2(padno(tc1, n4), spkY, ms4)) then
        find j1 <= N2 suchthat defined(Qkey[j1], Lhost[j1]) && (Lhost[j1] = hostW) then
        new s3_100: symkeyseed;
        let AK_35: key = kgen(s3_100) in
        new s1_101: symkeyseed;
        let k1: key = kgen(s1_101) in
        new tk_104: timest;
        new r4_103: symseed;
        let TGT_37: maxmac = encsym(concat5(AK_35, tk_104, hostY), Qkey[j1], r4_103) in
        new r5_105: symseed;
        let e24: maxmac = encsym(concat4(AK_35, n5, tk_104, hostW), k1, r5_105) in
        let y: maxmac = concat6(hostY, pkY, spkY, ms3, tc1, n4, ms4, hostY, hostW, n5) in
        new s2_102: mkeyseed;
        let ck: macs = mac2(y, mkgen2(s2_102)) in
        new r7_107: seed;
        let m2_123: bitstring = enc2(Z, pkY, r7_107) in
        let m5: bitstring = (m2_123, hostY, TGT_37, e24) in
        event fullKC(hostY, hostW, n5, m2_123, TGT_37, e24);
        out(c23[!_32], m5)
    )
  |
    ! !_33 <= N2
    in(c21[!_33], (Lhost: tgs, Lkey: key));
    if (Lhost = T) then
      let Qkey: key = Kt
    else
      let Qkey: key = Lkey
  )
|
  ! !_34 <= N2
  in(c16[!_34], (Mhost1: tgs, Mhost2: server, Mkey: key))
)


Applying equivalence
equiv ! !_25 <= N3 new r: mkeyseed; (
  ! !_26 <= N (x: maxmac) -> mac(x, mkgen(r)),
  ! !_27 <= N2 (m: maxmac, ma: macs) -> checkmac(m, mkgen(r), ma))
<=(N3 * Pmac(time, N, N2))=>
      ! !_28 <= N3 new r: mkeyseed; (
  ! !_29 <= N (x_45: maxmac) -> let x: maxmac = x_45 in mac2(x, mkgen2(r)),
  ! !_30 <= N2 (m: maxmac, ma: macs) -> find j <= N suchthat defined(x[j]) && ((m = x[j]) && (ma = mac2(x[j], mkgen2(r)))) then true else false)
 [Difference of probability N * Pmac(time + time(context for game 30), 1., N)] yields

Game 31 is
in(start, ());
new rkC: keyseed;
let pkC: pkey = pkgen2(rkC) in
new rkCs: skeyseed;
let spkC: spkey = spkgen2(rkCs) in
new rkKs: skeyseed;
let spkK: spkey = spkgen2(rkKs) in
new rkCA: skeyseed;
let pkCA: spkey = spkgen2(rkCA) in
new rKt: symkeyseed;
let Kt: key = kgen(rKt) in
let x_53: sblocksize = concat1(C, pkC, spkC) in
new q1: sseed;
let certC: signature = sign2(x_53, sskgen2(rkCA), q1) in
out(c25, (pkC, spkC, spkK, pkCA));
(
  (
    (
      ! !_31 <= N
      in(c1[!_31], hostT: tgs);
      new n2: nonce;
      new tc0: timest;
      let x_76: sblocksize = padno(tc0, n2) in
      new n1: nonce;
      new r1: sseed;
      out(c2[!_31], (C, pkC, spkC, certC, tc0, n2, sign2(x_76, sskgen2(rkCs), r1), C, hostT, n1));
      in(c3[!_31], (m21: bitstring, =C, TGT_38: maxmac, m24: maxmac));
      find @i_133 <= N suchthat defined(k1[@i_133], ck[@i_133], s2_94[@i_133], m2_118[@i_133]) && (m21 = m2_118[@i_133]) then
        let hostZ: kas = K in
        let x_74: sblocksize = padno(tc0, n2) in
        let y': maxmac = concat6(C, pkC, spkC, certC, tc0, n2, sign2(x_74, sskgen2(rkCs), r1), C, hostT, n1) in
        if defined(x_176[@i_133]) && ((y' = x_176[@i_133]) && (ck[@i_133] = mac2(x_176[@i_133], mkgen2(s2_94[@i_133])))) then
          if true then
          let injbot2(concat4(AK_40: key, =n1, tk_39: timest, =hostT)) = decsym(m24, k1[@i_133]) in
          event fullCK(hostZ, hostT, n1, m21, TGT_38, m24);
          out(c18[!_31], acceptC1(hostZ, hostT))
        else
          if false then
          let injbot2(concat4(AK_40: key, =n1, tk_39: timest, =hostT)) = decsym(m24, k1[@i_133]) in
          event fullCK(hostZ, hostT, n1, m21, TGT_38, m24);
          out(c18[!_31], acceptC1(hostZ, hostT))
      orfind @i_132 <= N suchthat defined(k1[@i_132], n5[@i_132], hostW[@i_132], ms4[@i_132], tc1[@i_132], ms3[@i_132], m2_123[@i_132]) && (m21 = m2_123[@i_132]) then
        let hostZ: kas = K in
        let x_74: sblocksize = padno(tc0, n2) in
        if defined(k1[@i_132], n5[@i_132], hostW[@i_132], ms4[@i_132], tc1[@i_132], ms3[@i_132]) && ((certC = ms3[@i_132]) && ((tc0 = tc1[@i_132]) && ((!_31 = @i_78[@i_132]) && ((sign2(x_74, sskgen2(rkCs), r1) = ms4[@i_132]) && ((hostT = hostW[@i_132]) && (n1 = n5[@i_132])))))) then
        let injbot2(concat4(AK_40: key, =n1, tk_39: timest, =hostT)) = decsym(m24, k1[@i_132]) in
        event fullCK(hostZ, hostT, n1, m21, TGT_38, m24);
        out(c18[!_31], acceptC1(hostZ, hostT))
    |
      ! !_32 <= N
      in(c22[!_32], (hostY: client, pkY: pkey, spkY: spkey, ms3: signature, tc1: timest, n4: nonce, ms4: signature, hostV: client, hostW: tgs, n5: nonce));
      if (hostV = hostY) then
      if (((hostY = C) && ((pkY = pkC) && (spkY = spkC))) && check2(concat1(hostY, pkY, spkY), pkCA, ms3)) then
      find @i_78 <= N suchthat defined(n2[@i_78], tc0[@i_78], x_74[@i_78]) && (((tc1 = tc0[@i_78]) && (n4 = n2[@i_78])) && check2(padno(tc1, n4), spkY, ms4)) then
        find j1 <= N2 suchthat defined(Qkey[j1], Lhost[j1]) && (Lhost[j1] = hostW) then
        new s3_92: symkeyseed;
        let AK_35: key = kgen(s3_92) in
        new s1_93: symkeyseed;
        let k1: key = kgen(s1_93) in
        new s2_94: mkeyseed;
        new tk_96: timest;
        new r4_95: symseed;
        let TGT_37: maxmac = encsym(concat5(AK_35, tk_96, hostY), Qkey[j1], r4_95) in
        new r5_97: symseed;
        let e24: maxmac = encsym(concat4(AK_35, n5, tk_96, hostW), k1, r5_97) in
        let y: maxmac = concat6(hostY, pkY, spkY, ms3, tc1, n4, ms4, hostY, hostW, n5) in
        let x_176: maxmac = y in
        let ck: macs = mac2(x_176, mkgen2(s2_94)) in
        new r7_99: seed;
        let m2_118: bitstring = enc2(Z, pkY, r7_99) in
        let m5: bitstring = (m2_118, hostY, TGT_37, e24) in
        event fullKC(hostY, hostW, n5, m2_118, TGT_37, e24);
        out(c23[!_32], m5)
      orfind @i_78 <= N suchthat defined(n2[@i_78], tc0[@i_78], x_76[@i_78]) && (((tc1 = tc0[@i_78]) && (n4 = n2[@i_78])) && check2(padno(tc1, n4), spkY, ms4)) then
        find j1 <= N2 suchthat defined(Qkey[j1], Lhost[j1]) && (Lhost[j1] = hostW) then
        new s3_100: symkeyseed;
        let AK_35: key = kgen(s3_100) in
        new s1_101: symkeyseed;
        let k1: key = kgen(s1_101) in
        new tk_104: timest;
        new r4_103: symseed;
        let TGT_37: maxmac = encsym(concat5(AK_35, tk_104, hostY), Qkey[j1], r4_103) in
        new r5_105: symseed;
        let e24: maxmac = encsym(concat4(AK_35, n5, tk_104, hostW), k1, r5_105) in
        let y: maxmac = concat6(hostY, pkY, spkY, ms3, tc1, n4, ms4, hostY, hostW, n5) in
        new s2_102: mkeyseed;
        let ck: macs = mac2(y, mkgen2(s2_102)) in
        new r7_107: seed;
        let m2_123: bitstring = enc2(Z, pkY, r7_107) in
        let m5: bitstring = (m2_123, hostY, TGT_37, e24) in
        event fullKC(hostY, hostW, n5, m2_123, TGT_37, e24);
        out(c23[!_32], m5)
    )
  |
    ! !_33 <= N2
    in(c21[!_33], (Lhost: tgs, Lkey: key));
    if (Lhost = T) then
      let Qkey: key = Kt
    else
      let Qkey: key = Lkey
  )
|
  ! !_34 <= N2
  in(c16[!_34], (Mhost1: tgs, Mhost2: server, Mkey: key))
)


Applying simplify yields

Game 32 is
in(start, ());
new rkC: keyseed;
let pkC: pkey = pkgen2(rkC) in
new rkCs: skeyseed;
let spkC: spkey = spkgen2(rkCs) in
new rkKs: skeyseed;
let spkK: spkey = spkgen2(rkKs) in
new rkCA: skeyseed;
let pkCA: spkey = spkgen2(rkCA) in
new rKt: symkeyseed;
let Kt: key = kgen(rKt) in
let x_53: sblocksize = concat1(C, pkC, spkC) in
new q1: sseed;
let certC: signature = sign2(x_53, sskgen2(rkCA), q1) in
out(c25, (pkC, spkC, spkK, pkCA));
(
  (
    (
      ! !_31 <= N
      in(c1[!_31], hostT: tgs);
      new n2: nonce;
      new tc0: timest;
      let x_76: sblocksize = padno(tc0, n2) in
      new n1: nonce;
      new r1: sseed;
      out(c2[!_31], (C, pkC, spkC, certC, tc0, n2, sign2(x_76, sskgen2(rkCs), r1), C, hostT, n1));
      in(c3[!_31], (m21: bitstring, =C, TGT_38: maxmac, m24: maxmac));
      find @i_133 <= N suchthat defined(k1[@i_133], n5[@i_133], hostW[@i_133], ms4[@i_133], tc1[@i_133], ms3[@i_133], m2_118[@i_133]) && (m21 = m2_118[@i_133]) then
        let hostZ: kas = K in
        let x_74: sblocksize = padno(tc0, n2) in
        let y': maxmac = concat6(C, pkC, spkC, certC, tc0, n2, sign2(x_74, sskgen2(rkCs), r1), C, hostT, n1) in
        if defined(k1[@i_133], n5[@i_133], hostW[@i_133], ms4[@i_133], tc1[@i_133], ms3[@i_133]) && ((certC = ms3[@i_133]) && ((tc0 = tc1[@i_133]) && ((!_31 = @i_78[@i_133]) && ((sign2(x_74, sskgen2(rkCs), r1) = ms4[@i_133]) && ((hostT = hostW[@i_133]) && (n1 = n5[@i_133])))))) then
        let injbot2(concat4(AK_40: key, =n1, tk_39: timest, =hostT)) = decsym(m24, k1[@i_133]) in
        event fullCK(hostZ, hostT, n1, m21, TGT_38, m24);
        out(c18[!_31], acceptC1(hostZ, hostT))
      orfind @i_132 <= N suchthat defined(k1[@i_132], n5[@i_132], hostW[@i_132], ms4[@i_132], tc1[@i_132], ms3[@i_132], m2_123[@i_132]) && (m21 = m2_123[@i_132]) then
        let hostZ: kas = K in
        let x_74: sblocksize = padno(tc0, n2) in
        if defined(k1[@i_132], n5[@i_132], hostW[@i_132], ms4[@i_132], tc1[@i_132], ms3[@i_132]) && ((certC = ms3[@i_132]) && ((tc0 = tc1[@i_132]) && ((!_31 = @i_78[@i_132]) && ((sign2(x_74, sskgen2(rkCs), r1) = ms4[@i_132]) && ((hostT = hostW[@i_132]) && (n1 = n5[@i_132])))))) then
        let injbot2(concat4(AK_40: key, =n1, tk_39: timest, =hostT)) = decsym(m24, k1[@i_132]) in
        event fullCK(hostZ, hostT, n1, m21, TGT_38, m24);
        out(c18[!_31], acceptC1(hostZ, hostT))
    |
      ! !_32 <= N
      in(c22[!_32], (hostY: client, pkY: pkey, spkY: spkey, ms3: signature, tc1: timest, n4: nonce, ms4: signature, hostV: client, hostW: tgs, n5: nonce));
      if (hostV = hostY) then
      if (((hostY = C) && ((pkY = pkC) && (spkY = spkC))) && check2(concat1(hostY, pkY, spkY), pkCA, ms3)) then
      find @i_78 <= N suchthat defined(n2[@i_78], tc0[@i_78], x_74[@i_78]) && (((tc1 = tc0[@i_78]) && (n4 = n2[@i_78])) && check2(padno(tc1, n4), spkY, ms4)) then
        find j1 <= N2 suchthat defined(Qkey[j1], Lhost[j1]) && (Lhost[j1] = hostW) then
        new s3_92: symkeyseed;
        let AK_35: key = kgen(s3_92) in
        new s1_93: symkeyseed;
        let k1: key = kgen(s1_93) in
        new s2_94: mkeyseed;
        new tk_96: timest;
        new r4_95: symseed;
        let TGT_37: maxmac = encsym(concat5(AK_35, tk_96, hostY), Qkey[j1], r4_95) in
        new r5_97: symseed;
        let e24: maxmac = encsym(concat4(AK_35, n5, tk_96, hostW), k1, r5_97) in
        let y: maxmac = concat6(hostY, pkY, spkY, ms3, tc1, n4, ms4, hostY, hostW, n5) in
        let x_176: maxmac = y in
        let ck: macs = mac2(x_176, mkgen2(s2_94)) in
        new r7_99: seed;
        let m2_118: bitstring = enc2(Z, pkY, r7_99) in
        let m5: bitstring = (m2_118, hostY, TGT_37, e24) in
        event fullKC(hostY, hostW, n5, m2_118, TGT_37, e24);
        out(c23[!_32], m5)
      orfind @i_78 <= N suchthat defined(n2[@i_78], tc0[@i_78], x_76[@i_78]) && (((tc1 = tc0[@i_78]) && (n4 = n2[@i_78])) && check2(padno(tc1, n4), spkY, ms4)) then
        find j1 <= N2 suchthat defined(Qkey[j1], Lhost[j1]) && (Lhost[j1] = hostW) then
        new s3_100: symkeyseed;
        let AK_35: key = kgen(s3_100) in
        new s1_101: symkeyseed;
        let k1: key = kgen(s1_101) in
        new tk_104: timest;
        new r4_103: symseed;
        let TGT_37: maxmac = encsym(concat5(AK_35, tk_104, hostY), Qkey[j1], r4_103) in
        new r5_105: symseed;
        let e24: maxmac = encsym(concat4(AK_35, n5, tk_104, hostW), k1, r5_105) in
        let y: maxmac = concat6(hostY, pkY, spkY, ms3, tc1, n4, ms4, hostY, hostW, n5) in
        new s2_102: mkeyseed;
        let ck: macs = mac2(y, mkgen2(s2_102)) in
        new r7_107: seed;
        let m2_123: bitstring = enc2(Z, pkY, r7_107) in
        let m5: bitstring = (m2_123, hostY, TGT_37, e24) in
        event fullKC(hostY, hostW, n5, m2_123, TGT_37, e24);
        out(c23[!_32], m5)
    )
  |
    ! !_33 <= N2
    in(c21[!_33], (Lhost: tgs, Lkey: key));
    if (Lhost = T) then
      let Qkey: key = Kt
    else
      let Qkey: key = Lkey
  )
|
  ! !_34 <= N2
  in(c16[!_34], (Mhost1: tgs, Mhost2: server, Mkey: key))
)


Applying move new all binders yields

Game 33 is
in(start, ());
new rkC: keyseed;
let pkC: pkey = pkgen2(rkC) in
new rkCs: skeyseed;
let spkC: spkey = spkgen2(rkCs) in
new rkKs: skeyseed;
let spkK: spkey = spkgen2(rkKs) in
new rkCA: skeyseed;
let pkCA: spkey = spkgen2(rkCA) in
new rKt: symkeyseed;
let Kt: key = kgen(rKt) in
let x_53: sblocksize = concat1(C, pkC, spkC) in
new q1: sseed;
let certC: signature = sign2(x_53, sskgen2(rkCA), q1) in
out(c25, (pkC, spkC, spkK, pkCA));
(
  (
    (
      ! !_31 <= N
      in(c1[!_31], hostT: tgs);
      new n2: nonce;
      new tc0: timest;
      let x_76: sblocksize = padno(tc0, n2) in
      new r1: sseed;
      new n1: nonce;
      out(c2[!_31], (C, pkC, spkC, certC, tc0, n2, sign2(x_76, sskgen2(rkCs), r1), C, hostT, n1));
      in(c3[!_31], (m21: bitstring, =C, TGT_38: maxmac, m24: maxmac));
      find @i_133 <= N suchthat defined(k1[@i_133], n5[@i_133], hostW[@i_133], ms4[@i_133], tc1[@i_133], ms3[@i_133], m2_118[@i_133]) && (m21 = m2_118[@i_133]) then
        let hostZ: kas = K in
        let x_74: sblocksize = padno(tc0, n2) in
        let y': maxmac = concat6(C, pkC, spkC, certC, tc0, n2, sign2(x_74, sskgen2(rkCs), r1), C, hostT, n1) in
        if defined(k1[@i_133], n5[@i_133], hostW[@i_133], ms4[@i_133], tc1[@i_133], ms3[@i_133]) && ((certC = ms3[@i_133]) && ((tc0 = tc1[@i_133]) && ((!_31 = @i_78[@i_133]) && ((sign2(x_74, sskgen2(rkCs), r1) = ms4[@i_133]) && ((hostT = hostW[@i_133]) && (n1 = n5[@i_133])))))) then
        let injbot2(concat4(AK_40: key, =n1, tk_39: timest, =hostT)) = decsym(m24, k1[@i_133]) in
        event fullCK(hostZ, hostT, n1, m21, TGT_38, m24);
        out(c18[!_31], acceptC1(hostZ, hostT))
      orfind @i_132 <= N suchthat defined(k1[@i_132], n5[@i_132], hostW[@i_132], ms4[@i_132], tc1[@i_132], ms3[@i_132], m2_123[@i_132]) && (m21 = m2_123[@i_132]) then
        let hostZ: kas = K in
        let x_74: sblocksize = padno(tc0, n2) in
        if defined(k1[@i_132], n5[@i_132], hostW[@i_132], ms4[@i_132], tc1[@i_132], ms3[@i_132]) && ((certC = ms3[@i_132]) && ((tc0 = tc1[@i_132]) && ((!_31 = @i_78[@i_132]) && ((sign2(x_74, sskgen2(rkCs), r1) = ms4[@i_132]) && ((hostT = hostW[@i_132]) && (n1 = n5[@i_132])))))) then
        let injbot2(concat4(AK_40: key, =n1, tk_39: timest, =hostT)) = decsym(m24, k1[@i_132]) in
        event fullCK(hostZ, hostT, n1, m21, TGT_38, m24);
        out(c18[!_31], acceptC1(hostZ, hostT))
    |
      ! !_32 <= N
      in(c22[!_32], (hostY: client, pkY: pkey, spkY: spkey, ms3: signature, tc1: timest, n4: nonce, ms4: signature, hostV: client, hostW: tgs, n5: nonce));
      if (hostV = hostY) then
      if (((hostY = C) && ((pkY = pkC) && (spkY = spkC))) && check2(concat1(hostY, pkY, spkY), pkCA, ms3)) then
      find @i_78 <= N suchthat defined(n2[@i_78], tc0[@i_78], x_74[@i_78]) && (((tc1 = tc0[@i_78]) && (n4 = n2[@i_78])) && check2(padno(tc1, n4), spkY, ms4)) then
        find j1 <= N2 suchthat defined(Qkey[j1], Lhost[j1]) && (Lhost[j1] = hostW) then
        new s3_92: symkeyseed;
        let AK_35: key = kgen(s3_92) in
        new s1_93: symkeyseed;
        let k1: key = kgen(s1_93) in
        new r4_95: symseed;
        new tk_96: timest;
        let TGT_37: maxmac = encsym(concat5(AK_35, tk_96, hostY), Qkey[j1], r4_95) in
        new r5_97: symseed;
        let e24: maxmac = encsym(concat4(AK_35, n5, tk_96, hostW), k1, r5_97) in
        let y: maxmac = concat6(hostY, pkY, spkY, ms3, tc1, n4, ms4, hostY, hostW, n5) in
        let x_176: maxmac = y in
        new s2_94: mkeyseed;
        let ck: macs = mac2(x_176, mkgen2(s2_94)) in
        new r7_99: seed;
        let m2_118: bitstring = enc2(Z, pkY, r7_99) in
        let m5: bitstring = (m2_118, hostY, TGT_37, e24) in
        event fullKC(hostY, hostW, n5, m2_118, TGT_37, e24);
        out(c23[!_32], m5)
      orfind @i_78 <= N suchthat defined(n2[@i_78], tc0[@i_78], x_76[@i_78]) && (((tc1 = tc0[@i_78]) && (n4 = n2[@i_78])) && check2(padno(tc1, n4), spkY, ms4)) then
        find j1 <= N2 suchthat defined(Qkey[j1], Lhost[j1]) && (Lhost[j1] = hostW) then
        new s3_100: symkeyseed;
        let AK_35: key = kgen(s3_100) in
        new s1_101: symkeyseed;
        let k1: key = kgen(s1_101) in
        new r4_103: symseed;
        new tk_104: timest;
        let TGT_37: maxmac = encsym(concat5(AK_35, tk_104, hostY), Qkey[j1], r4_103) in
        new r5_105: symseed;
        let e24: maxmac = encsym(concat4(AK_35, n5, tk_104, hostW), k1, r5_105) in
        let y: maxmac = concat6(hostY, pkY, spkY, ms3, tc1, n4, ms4, hostY, hostW, n5) in
        new s2_102: mkeyseed;
        let ck: macs = mac2(y, mkgen2(s2_102)) in
        new r7_107: seed;
        let m2_123: bitstring = enc2(Z, pkY, r7_107) in
        let m5: bitstring = (m2_123, hostY, TGT_37, e24) in
        event fullKC(hostY, hostW, n5, m2_123, TGT_37, e24);
        out(c23[!_32], m5)
    )
  |
    ! !_33 <= N2
    in(c21[!_33], (Lhost: tgs, Lkey: key));
    if (Lhost = T) then
      let Qkey: key = Kt
    else
      let Qkey: key = Lkey
  )
|
  ! !_34 <= N2
  in(c16[!_34], (Mhost1: tgs, Mhost2: server, Mkey: key))
)


Applying remove assignments of useless yields

Game 34 is
in(start, ());
new rkC: keyseed;
let pkC: pkey = pkgen2(rkC) in
new rkCs: skeyseed;
let spkC: spkey = spkgen2(rkCs) in
new rkKs: skeyseed;
let spkK: spkey = spkgen2(rkKs) in
new rkCA: skeyseed;
let pkCA: spkey = spkgen2(rkCA) in
new rKt: symkeyseed;
let Kt: key = kgen(rKt) in
let x_53: sblocksize = concat1(C, pkC, spkC) in
new q1: sseed;
let certC: signature = sign2(x_53, sskgen2(rkCA), q1) in
out(c25, (pkC, spkC, spkK, pkCA));
(
  (
    (
      ! !_31 <= N
      in(c1[!_31], hostT: tgs);
      new n2: nonce;
      new tc0: timest;
      let x_76: sblocksize = padno(tc0, n2) in
      new r1: sseed;
      new n1: nonce;
      out(c2[!_31], (C, pkC, spkC, certC, tc0, n2, sign2(x_76, sskgen2(rkCs), r1), C, hostT, n1));
      in(c3[!_31], (m21: bitstring, =C, TGT_38: maxmac, m24: maxmac));
      find @i_133 <= N suchthat defined(k1[@i_133], n5[@i_133], hostW[@i_133], ms4[@i_133], tc1[@i_133], ms3[@i_133], m2_118[@i_133]) && (m21 = m2_118[@i_133]) then
        let hostZ: kas = K in
        let x_74: sblocksize = padno(tc0, n2) in
        if defined(k1[@i_133], n5[@i_133], hostW[@i_133], ms4[@i_133], tc1[@i_133], ms3[@i_133]) && ((certC = ms3[@i_133]) && ((tc0 = tc1[@i_133]) && ((!_31 = @i_78[@i_133]) && ((sign2(x_74, sskgen2(rkCs), r1) = ms4[@i_133]) && ((hostT = hostW[@i_133]) && (n1 = n5[@i_133])))))) then
        let injbot2(concat4(AK_40: key, =n1, tk_39: timest, =hostT)) = decsym(m24, k1[@i_133]) in
        event fullCK(hostZ, hostT, n1, m21, TGT_38, m24);
        out(c18[!_31], acceptC1(hostZ, hostT))
      orfind @i_132 <= N suchthat defined(k1[@i_132], n5[@i_132], hostW[@i_132], ms4[@i_132], tc1[@i_132], ms3[@i_132], m2_123[@i_132]) && (m21 = m2_123[@i_132]) then
        let hostZ: kas = K in
        let x_74: sblocksize = padno(tc0, n2) in
        if defined(k1[@i_132], n5[@i_132], hostW[@i_132], ms4[@i_132], tc1[@i_132], ms3[@i_132]) && ((certC = ms3[@i_132]) && ((tc0 = tc1[@i_132]) && ((!_31 = @i_78[@i_132]) && ((sign2(x_74, sskgen2(rkCs), r1) = ms4[@i_132]) && ((hostT = hostW[@i_132]) && (n1 = n5[@i_132])))))) then
        let injbot2(concat4(AK_40: key, =n1, tk_39: timest, =hostT)) = decsym(m24, k1[@i_132]) in
        event fullCK(hostZ, hostT, n1, m21, TGT_38, m24);
        out(c18[!_31], acceptC1(hostZ, hostT))
    |
      ! !_32 <= N
      in(c22[!_32], (hostY: client, pkY: pkey, spkY: spkey, ms3: signature, tc1: timest, n4: nonce, ms4: signature, hostV: client, hostW: tgs, n5: nonce));
      if (hostV = hostY) then
      if (((hostY = C) && ((pkY = pkC) && (spkY = spkC))) && check2(concat1(hostY, pkY, spkY), pkCA, ms3)) then
      find @i_78 <= N suchthat defined(n2[@i_78], tc0[@i_78], x_74[@i_78]) && (((tc1 = tc0[@i_78]) && (n4 = n2[@i_78])) && check2(padno(tc1, n4), spkY, ms4)) then
        find j1 <= N2 suchthat defined(Qkey[j1], Lhost[j1]) && (Lhost[j1] = hostW) then
        new s3_92: symkeyseed;
        let AK_35: key = kgen(s3_92) in
        new s1_93: symkeyseed;
        let k1: key = kgen(s1_93) in
        new r4_95: symseed;
        new tk_96: timest;
        let TGT_37: maxmac = encsym(concat5(AK_35, tk_96, hostY), Qkey[j1], r4_95) in
        new r5_97: symseed;
        let e24: maxmac = encsym(concat4(AK_35, n5, tk_96, hostW), k1, r5_97) in
        new s2_94: mkeyseed;
        new r7_99: seed;
        let m2_118: bitstring = enc2(Z, pkY, r7_99) in
        let m5: bitstring = (m2_118, hostY, TGT_37, e24) in
        event fullKC(hostY, hostW, n5, m2_118, TGT_37, e24);
        out(c23[!_32], m5)
      orfind @i_78 <= N suchthat defined(n2[@i_78], tc0[@i_78], x_76[@i_78]) && (((tc1 = tc0[@i_78]) && (n4 = n2[@i_78])) && check2(padno(tc1, n4), spkY, ms4)) then
        find j1 <= N2 suchthat defined(Qkey[j1], Lhost[j1]) && (Lhost[j1] = hostW) then
        new s3_100: symkeyseed;
        let AK_35: key = kgen(s3_100) in
        new s1_101: symkeyseed;
        let k1: key = kgen(s1_101) in
        new r4_103: symseed;
        new tk_104: timest;
        let TGT_37: maxmac = encsym(concat5(AK_35, tk_104, hostY), Qkey[j1], r4_103) in
        new r5_105: symseed;
        let e24: maxmac = encsym(concat4(AK_35, n5, tk_104, hostW), k1, r5_105) in
        new s2_102: mkeyseed;
        new r7_107: seed;
        let m2_123: bitstring = enc2(Z, pkY, r7_107) in
        let m5: bitstring = (m2_123, hostY, TGT_37, e24) in
        event fullKC(hostY, hostW, n5, m2_123, TGT_37, e24);
        out(c23[!_32], m5)
    )
  |
    ! !_33 <= N2
    in(c21[!_33], (Lhost: tgs, Lkey: key));
    if (Lhost = T) then
      let Qkey: key = Kt
    else
      let Qkey: key = Lkey
  )
|
  ! !_34 <= N2
  in(c16[!_34], (Mhost1: tgs, Mhost2: server, Mkey: key))
)


Applying remove assignments of binder k1 yields

Game 35 is
in(start, ());
new rkC: keyseed;
let pkC: pkey = pkgen2(rkC) in
new rkCs: skeyseed;
let spkC: spkey = spkgen2(rkCs) in
new rkKs: skeyseed;
let spkK: spkey = spkgen2(rkKs) in
new rkCA: skeyseed;
let pkCA: spkey = spkgen2(rkCA) in
new rKt: symkeyseed;
let Kt: key = kgen(rKt) in
let x_53: sblocksize = concat1(C, pkC, spkC) in
new q1: sseed;
let certC: signature = sign2(x_53, sskgen2(rkCA), q1) in
out(c25, (pkC, spkC, spkK, pkCA));
(
  (
    (
      ! !_31 <= N
      in(c1[!_31], hostT: tgs);
      new n2: nonce;
      new tc0: timest;
      let x_76: sblocksize = padno(tc0, n2) in
      new r1: sseed;
      new n1: nonce;
      out(c2[!_31], (C, pkC, spkC, certC, tc0, n2, sign2(x_76, sskgen2(rkCs), r1), C, hostT, n1));
      in(c3[!_31], (m21: bitstring, =C, TGT_38: maxmac, m24: maxmac));
      find @i_133 <= N suchthat defined(k1[@i_133], n5[@i_133], hostW[@i_133], ms4[@i_133], tc1[@i_133], ms3[@i_133], m2_118[@i_133]) && (m21 = m2_118[@i_133]) then
        let hostZ: kas = K in
        let x_74: sblocksize = padno(tc0, n2) in
        if defined(k1[@i_133], n5[@i_133], hostW[@i_133], ms4[@i_133], tc1[@i_133], ms3[@i_133]) && ((certC = ms3[@i_133]) && ((tc0 = tc1[@i_133]) && ((!_31 = @i_78[@i_133]) && ((sign2(x_74, sskgen2(rkCs), r1) = ms4[@i_133]) && ((hostT = hostW[@i_133]) && (n1 = n5[@i_133])))))) then
        let injbot2(concat4(AK_40: key, =n1, tk_39: timest, =hostT)) = decsym(m24, k1[@i_133]) in
        event fullCK(hostZ, hostT, n1, m21, TGT_38, m24);
        out(c18[!_31], acceptC1(hostZ, hostT))
      orfind @i_132 <= N suchthat defined(k1[@i_132], n5[@i_132], hostW[@i_132], ms4[@i_132], tc1[@i_132], ms3[@i_132], m2_123[@i_132]) && (m21 = m2_123[@i_132]) then
        let hostZ: kas = K in
        let x_74: sblocksize = padno(tc0, n2) in
        if defined(k1[@i_132], n5[@i_132], hostW[@i_132], ms4[@i_132], tc1[@i_132], ms3[@i_132]) && ((certC = ms3[@i_132]) && ((tc0 = tc1[@i_132]) && ((!_31 = @i_78[@i_132]) && ((sign2(x_74, sskgen2(rkCs), r1) = ms4[@i_132]) && ((hostT = hostW[@i_132]) && (n1 = n5[@i_132])))))) then
        let injbot2(concat4(AK_40: key, =n1, tk_39: timest, =hostT)) = decsym(m24, k1[@i_132]) in
        event fullCK(hostZ, hostT, n1, m21, TGT_38, m24);
        out(c18[!_31], acceptC1(hostZ, hostT))
    |
      ! !_32 <= N
      in(c22[!_32], (hostY: client, pkY: pkey, spkY: spkey, ms3: signature, tc1: timest, n4: nonce, ms4: signature, hostV: client, hostW: tgs, n5: nonce));
      if (hostV = hostY) then
      if (((hostY = C) && ((pkY = pkC) && (spkY = spkC))) && check2(concat1(hostY, pkY, spkY), pkCA, ms3)) then
      find @i_78 <= N suchthat defined(n2[@i_78], tc0[@i_78], x_74[@i_78]) && (((tc1 = tc0[@i_78]) && (n4 = n2[@i_78])) && check2(padno(tc1, n4), spkY, ms4)) then
        find j1 <= N2 suchthat defined(Qkey[j1], Lhost[j1]) && (Lhost[j1] = hostW) then
        new s3_92: symkeyseed;
        let AK_35: key = kgen(s3_92) in
        new s1_93: symkeyseed;
        let k1: key = kgen(s1_93) in
        new r4_95: symseed;
        new tk_96: timest;
        let TGT_37: maxmac = encsym(concat5(AK_35, tk_96, hostY), Qkey[j1], r4_95) in
        new r5_97: symseed;
        let e24: maxmac = encsym(concat4(AK_35, n5, tk_96, hostW), kgen(s1_93), r5_97) in
        new s2_94: mkeyseed;
        new r7_99: seed;
        let m2_118: bitstring = enc2(Z, pkY, r7_99) in
        let m5: bitstring = (m2_118, hostY, TGT_37, e24) in
        event fullKC(hostY, hostW, n5, m2_118, TGT_37, e24);
        out(c23[!_32], m5)
      orfind @i_78 <= N suchthat defined(n2[@i_78], tc0[@i_78], x_76[@i_78]) && (((tc1 = tc0[@i_78]) && (n4 = n2[@i_78])) && check2(padno(tc1, n4), spkY, ms4)) then
        find j1 <= N2 suchthat defined(Qkey[j1], Lhost[j1]) && (Lhost[j1] = hostW) then
        new s3_100: symkeyseed;
        let AK_35: key = kgen(s3_100) in
        new s1_101: symkeyseed;
        let k1: key = kgen(s1_101) in
        new r4_103: symseed;
        new tk_104: timest;
        let TGT_37: maxmac = encsym(concat5(AK_35, tk_104, hostY), Qkey[j1], r4_103) in
        new r5_105: symseed;
        let e24: maxmac = encsym(concat4(AK_35, n5, tk_104, hostW), kgen(s1_101), r5_105) in
        new s2_102: mkeyseed;
        new r7_107: seed;
        let m2_123: bitstring = enc2(Z, pkY, r7_107) in
        let m5: bitstring = (m2_123, hostY, TGT_37, e24) in
        event fullKC(hostY, hostW, n5, m2_123, TGT_37, e24);
        out(c23[!_32], m5)
    )
  |
    ! !_33 <= N2
    in(c21[!_33], (Lhost: tgs, Lkey: key));
    if (Lhost = T) then
      let Qkey: key = Kt
    else
      let Qkey: key = Lkey
  )
|
  ! !_34 <= N2
  in(c16[!_34], (Mhost1: tgs, Mhost2: server, Mkey: key))
)


Applying SA rename k1 yields

Game 36 is
in(start, ());
new rkC: keyseed;
let pkC: pkey = pkgen2(rkC) in
new rkCs: skeyseed;
let spkC: spkey = spkgen2(rkCs) in
new rkKs: skeyseed;
let spkK: spkey = spkgen2(rkKs) in
new rkCA: skeyseed;
let pkCA: spkey = spkgen2(rkCA) in
new rKt: symkeyseed;
let Kt: key = kgen(rKt) in
let x_53: sblocksize = concat1(C, pkC, spkC) in
new q1: sseed;
let certC: signature = sign2(x_53, sskgen2(rkCA), q1) in
out(c25, (pkC, spkC, spkK, pkCA));
(
  (
    (
      ! !_31 <= N
      in(c1[!_31], hostT: tgs);
      new n2: nonce;
      new tc0: timest;
      let x_76: sblocksize = padno(tc0, n2) in
      new r1: sseed;
      new n1: nonce;
      out(c2[!_31], (C, pkC, spkC, certC, tc0, n2, sign2(x_76, sskgen2(rkCs), r1), C, hostT, n1));
      in(c3[!_31], (m21: bitstring, =C, TGT_38: maxmac, m24: maxmac));
      find @i_133 <= N suchthat defined(k1_199[@i_133], n5[@i_133], hostW[@i_133], ms4[@i_133], tc1[@i_133], ms3[@i_133], m2_118[@i_133]) && (m21 = m2_118[@i_133]) then
        let hostZ: kas = K in
        let x_74: sblocksize = padno(tc0, n2) in
        find  suchthat defined(k1_199[@i_133], n5[@i_133], hostW[@i_133], ms4[@i_133], tc1[@i_133], ms3[@i_133]) && ((certC = ms3[@i_133]) && ((tc0 = tc1[@i_133]) && ((!_31 = @i_78[@i_133]) && ((sign2(x_74, sskgen2(rkCs), r1) = ms4[@i_133]) && ((hostT = hostW[@i_133]) && (n1 = n5[@i_133])))))) then
          let injbot2(concat4(AK_40: key, =n1, tk_39: timest, =hostT)) = decsym(m24, k1_199[@i_133]) in
          event fullCK(hostZ, hostT, n1, m21, TGT_38, m24);
          out(c18[!_31], acceptC1(hostZ, hostT))
        orfind  suchthat defined(k1_200[@i_133], n5[@i_133], hostW[@i_133], ms4[@i_133], tc1[@i_133], ms3[@i_133]) && ((certC = ms3[@i_133]) && ((tc0 = tc1[@i_133]) && ((!_31 = @i_78[@i_133]) && ((sign2(x_74, sskgen2(rkCs), r1) = ms4[@i_133]) && ((hostT = hostW[@i_133]) && (n1 = n5[@i_133])))))) then
          let injbot2(concat4(AK_40: key, =n1, tk_39: timest, =hostT)) = decsym(m24, k1_200[@i_133]) in
          event fullCK(hostZ, hostT, n1, m21, TGT_38, m24);
          out(c18[!_31], acceptC1(hostZ, hostT))
      orfind @i_132 <= N suchthat defined(k1_200[@i_132], n5[@i_132], hostW[@i_132], ms4[@i_132], tc1[@i_132], ms3[@i_132], m2_123[@i_132]) && (m21 = m2_123[@i_132]) then
        let hostZ: kas = K in
        let x_74: sblocksize = padno(tc0, n2) in
        find  suchthat defined(k1_199[@i_132], n5[@i_132], hostW[@i_132], ms4[@i_132], tc1[@i_132], ms3[@i_132]) && ((certC = ms3[@i_132]) && ((tc0 = tc1[@i_132]) && ((!_31 = @i_78[@i_132]) && ((sign2(x_74, sskgen2(rkCs), r1) = ms4[@i_132]) && ((hostT = hostW[@i_132]) && (n1 = n5[@i_132])))))) then
          let injbot2(concat4(AK_40: key, =n1, tk_39: timest, =hostT)) = decsym(m24, k1_199[@i_132]) in
          event fullCK(hostZ, hostT, n1, m21, TGT_38, m24);
          out(c18[!_31], acceptC1(hostZ, hostT))
        orfind  suchthat defined(k1_200[@i_132], n5[@i_132], hostW[@i_132], ms4[@i_132], tc1[@i_132], ms3[@i_132]) && ((certC = ms3[@i_132]) && ((tc0 = tc1[@i_132]) && ((!_31 = @i_78[@i_132]) && ((sign2(x_74, sskgen2(rkCs), r1) = ms4[@i_132]) && ((hostT = hostW[@i_132]) && (n1 = n5[@i_132])))))) then
          let injbot2(concat4(AK_40: key, =n1, tk_39: timest, =hostT)) = decsym(m24, k1_200[@i_132]) in
          event fullCK(hostZ, hostT, n1, m21, TGT_38, m24);
          out(c18[!_31], acceptC1(hostZ, hostT))
    |
      ! !_32 <= N
      in(c22[!_32], (hostY: client, pkY: pkey, spkY: spkey, ms3: signature, tc1: timest, n4: nonce, ms4: signature, hostV: client, hostW: tgs, n5: nonce));
      if (hostV = hostY) then
      if (((hostY = C) && ((pkY = pkC) && (spkY = spkC))) && check2(concat1(hostY, pkY, spkY), pkCA, ms3)) then
      find @i_78 <= N suchthat defined(n2[@i_78], tc0[@i_78], x_74[@i_78]) && (((tc1 = tc0[@i_78]) && (n4 = n2[@i_78])) && check2(padno(tc1, n4), spkY, ms4)) then
        find j1 <= N2 suchthat defined(Qkey[j1], Lhost[j1]) && (Lhost[j1] = hostW) then
        new s3_92: symkeyseed;
        let AK_35: key = kgen(s3_92) in
        new s1_93: symkeyseed;
        let k1_199: key = kgen(s1_93) in
        new r4_95: symseed;
        new tk_96: timest;
        let TGT_37: maxmac = encsym(concat5(AK_35, tk_96, hostY), Qkey[j1], r4_95) in
        new r5_97: symseed;
        let e24: maxmac = encsym(concat4(AK_35, n5, tk_96, hostW), kgen(s1_93), r5_97) in
        new s2_94: mkeyseed;
        new r7_99: seed;
        let m2_118: bitstring = enc2(Z, pkY, r7_99) in
        let m5: bitstring = (m2_118, hostY, TGT_37, e24) in
        event fullKC(hostY, hostW, n5, m2_118, TGT_37, e24);
        out(c23[!_32], m5)
      orfind @i_78 <= N suchthat defined(n2[@i_78], tc0[@i_78], x_76[@i_78]) && (((tc1 = tc0[@i_78]) && (n4 = n2[@i_78])) && check2(padno(tc1, n4), spkY, ms4)) then
        find j1 <= N2 suchthat defined(Qkey[j1], Lhost[j1]) && (Lhost[j1] = hostW) then
        new s3_100: symkeyseed;
        let AK_35: key = kgen(s3_100) in
        new s1_101: symkeyseed;
        let k1_200: key = kgen(s1_101) in
        new r4_103: symseed;
        new tk_104: timest;
        let TGT_37: maxmac = encsym(concat5(AK_35, tk_104, hostY), Qkey[j1], r4_103) in
        new r5_105: symseed;
        let e24: maxmac = encsym(concat4(AK_35, n5, tk_104, hostW), kgen(s1_101), r5_105) in
        new s2_102: mkeyseed;
        new r7_107: seed;
        let m2_123: bitstring = enc2(Z, pkY, r7_107) in
        let m5: bitstring = (m2_123, hostY, TGT_37, e24) in
        event fullKC(hostY, hostW, n5, m2_123, TGT_37, e24);
        out(c23[!_32], m5)
    )
  |
    ! !_33 <= N2
    in(c21[!_33], (Lhost: tgs, Lkey: key));
    if (Lhost = T) then
      let Qkey: key = Kt
    else
      let Qkey: key = Lkey
  )
|
  ! !_34 <= N2
  in(c16[!_34], (Mhost1: tgs, Mhost2: server, Mkey: key))
)


Applying remove assignments of binder k1_200 yields

Game 37 is
in(start, ());
new rkC: keyseed;
let pkC: pkey = pkgen2(rkC) in
new rkCs: skeyseed;
let spkC: spkey = spkgen2(rkCs) in
new rkKs: skeyseed;
let spkK: spkey = spkgen2(rkKs) in
new rkCA: skeyseed;
let pkCA: spkey = spkgen2(rkCA) in
new rKt: symkeyseed;
let Kt: key = kgen(rKt) in
let x_53: sblocksize = concat1(C, pkC, spkC) in
new q1: sseed;
let certC: signature = sign2(x_53, sskgen2(rkCA), q1) in
out(c25, (pkC, spkC, spkK, pkCA));
(
  (
    (
      ! !_31 <= N
      in(c1[!_31], hostT: tgs);
      new n2: nonce;
      new tc0: timest;
      let x_76: sblocksize = padno(tc0, n2) in
      new r1: sseed;
      new n1: nonce;
      out(c2[!_31], (C, pkC, spkC, certC, tc0, n2, sign2(x_76, sskgen2(rkCs), r1), C, hostT, n1));
      in(c3[!_31], (m21: bitstring, =C, TGT_38: maxmac, m24: maxmac));
      find @i_133 <= N suchthat defined(k1_199[@i_133], n5[@i_133], hostW[@i_133], ms4[@i_133], tc1[@i_133], ms3[@i_133], m2_118[@i_133]) && (m21 = m2_118[@i_133]) then
        let hostZ: kas = K in
        let x_74: sblocksize = padno(tc0, n2) in
        find  suchthat defined(k1_199[@i_133], n5[@i_133], hostW[@i_133], ms4[@i_133], tc1[@i_133], ms3[@i_133]) && ((certC = ms3[@i_133]) && ((tc0 = tc1[@i_133]) && ((!_31 = @i_78[@i_133]) && ((sign2(x_74, sskgen2(rkCs), r1) = ms4[@i_133]) && ((hostT = hostW[@i_133]) && (n1 = n5[@i_133])))))) then
          let injbot2(concat4(AK_40: key, =n1, tk_39: timest, =hostT)) = decsym(m24, k1_199[@i_133]) in
          event fullCK(hostZ, hostT, n1, m21, TGT_38, m24);
          out(c18[!_31], acceptC1(hostZ, hostT))
        orfind  suchthat defined(s1_101[@i_133], k1_200[@i_133], n5[@i_133], hostW[@i_133], ms4[@i_133], tc1[@i_133], ms3[@i_133]) && ((certC = ms3[@i_133]) && ((tc0 = tc1[@i_133]) && ((!_31 = @i_78[@i_133]) && ((sign2(x_74, sskgen2(rkCs), r1) = ms4[@i_133]) && ((hostT = hostW[@i_133]) && (n1 = n5[@i_133])))))) then
          let injbot2(concat4(AK_40: key, =n1, tk_39: timest, =hostT)) = decsym(m24, kgen(s1_101[@i_133])) in
          event fullCK(hostZ, hostT, n1, m21, TGT_38, m24);
          out(c18[!_31], acceptC1(hostZ, hostT))
      orfind @i_132 <= N suchthat defined(s1_101[@i_132], k1_200[@i_132], n5[@i_132], hostW[@i_132], ms4[@i_132], tc1[@i_132], ms3[@i_132], m2_123[@i_132]) && (m21 = m2_123[@i_132]) then
        let hostZ: kas = K in
        let x_74: sblocksize = padno(tc0, n2) in
        find  suchthat defined(k1_199[@i_132], n5[@i_132], hostW[@i_132], ms4[@i_132], tc1[@i_132], ms3[@i_132]) && ((certC = ms3[@i_132]) && ((tc0 = tc1[@i_132]) && ((!_31 = @i_78[@i_132]) && ((sign2(x_74, sskgen2(rkCs), r1) = ms4[@i_132]) && ((hostT = hostW[@i_132]) && (n1 = n5[@i_132])))))) then
          let injbot2(concat4(AK_40: key, =n1, tk_39: timest, =hostT)) = decsym(m24, k1_199[@i_132]) in
          event fullCK(hostZ, hostT, n1, m21, TGT_38, m24);
          out(c18[!_31], acceptC1(hostZ, hostT))
        orfind  suchthat defined(s1_101[@i_132], k1_200[@i_132], n5[@i_132], hostW[@i_132], ms4[@i_132], tc1[@i_132], ms3[@i_132]) && ((certC = ms3[@i_132]) && ((tc0 = tc1[@i_132]) && ((!_31 = @i_78[@i_132]) && ((sign2(x_74, sskgen2(rkCs), r1) = ms4[@i_132]) && ((hostT = hostW[@i_132]) && (n1 = n5[@i_132])))))) then
          let injbot2(concat4(AK_40: key, =n1, tk_39: timest, =hostT)) = decsym(m24, kgen(s1_101[@i_132])) in
          event fullCK(hostZ, hostT, n1, m21, TGT_38, m24);
          out(c18[!_31], acceptC1(hostZ, hostT))
    |
      ! !_32 <= N
      in(c22[!_32], (hostY: client, pkY: pkey, spkY: spkey, ms3: signature, tc1: timest, n4: nonce, ms4: signature, hostV: client, hostW: tgs, n5: nonce));
      if (hostV = hostY) then
      if (((hostY = C) && ((pkY = pkC) && (spkY = spkC))) && check2(concat1(hostY, pkY, spkY), pkCA, ms3)) then
      find @i_78 <= N suchthat defined(n2[@i_78], tc0[@i_78], x_74[@i_78]) && (((tc1 = tc0[@i_78]) && (n4 = n2[@i_78])) && check2(padno(tc1, n4), spkY, ms4)) then
        find j1 <= N2 suchthat defined(Qkey[j1], Lhost[j1]) && (Lhost[j1] = hostW) then
        new s3_92: symkeyseed;
        let AK_35: key = kgen(s3_92) in
        new s1_93: symkeyseed;
        let k1_199: key = kgen(s1_93) in
        new r4_95: symseed;
        new tk_96: timest;
        let TGT_37: maxmac = encsym(concat5(AK_35, tk_96, hostY), Qkey[j1], r4_95) in
        new r5_97: symseed;
        let e24: maxmac = encsym(concat4(AK_35, n5, tk_96, hostW), kgen(s1_93), r5_97) in
        new s2_94: mkeyseed;
        new r7_99: seed;
        let m2_118: bitstring = enc2(Z, pkY, r7_99) in
        let m5: bitstring = (m2_118, hostY, TGT_37, e24) in
        event fullKC(hostY, hostW, n5, m2_118, TGT_37, e24);
        out(c23[!_32], m5)
      orfind @i_78 <= N suchthat defined(n2[@i_78], tc0[@i_78], x_76[@i_78]) && (((tc1 = tc0[@i_78]) && (n4 = n2[@i_78])) && check2(padno(tc1, n4), spkY, ms4)) then
        find j1 <= N2 suchthat defined(Qkey[j1], Lhost[j1]) && (Lhost[j1] = hostW) then
        new s3_100: symkeyseed;
        let AK_35: key = kgen(s3_100) in
        new s1_101: symkeyseed;
        let k1_200: key = cst_key in
        new r4_103: symseed;
        new tk_104: timest;
        let TGT_37: maxmac = encsym(concat5(AK_35, tk_104, hostY), Qkey[j1], r4_103) in
        new r5_105: symseed;
        let e24: maxmac = encsym(concat4(AK_35, n5, tk_104, hostW), kgen(s1_101), r5_105) in
        new s2_102: mkeyseed;
        new r7_107: seed;
        let m2_123: bitstring = enc2(Z, pkY, r7_107) in
        let m5: bitstring = (m2_123, hostY, TGT_37, e24) in
        event fullKC(hostY, hostW, n5, m2_123, TGT_37, e24);
        out(c23[!_32], m5)
    )
  |
    ! !_33 <= N2
    in(c21[!_33], (Lhost: tgs, Lkey: key));
    if (Lhost = T) then
      let Qkey: key = Kt
    else
      let Qkey: key = Lkey
  )
|
  ! !_34 <= N2
  in(c16[!_34], (Mhost1: tgs, Mhost2: server, Mkey: key))
)


Applying remove assignments of binder k1_199 yields

Game 38 is
in(start, ());
new rkC: keyseed;
let pkC: pkey = pkgen2(rkC) in
new rkCs: skeyseed;
let spkC: spkey = spkgen2(rkCs) in
new rkKs: skeyseed;
let spkK: spkey = spkgen2(rkKs) in
new rkCA: skeyseed;
let pkCA: spkey = spkgen2(rkCA) in
new rKt: symkeyseed;
let Kt: key = kgen(rKt) in
let x_53: sblocksize = concat1(C, pkC, spkC) in
new q1: sseed;
let certC: signature = sign2(x_53, sskgen2(rkCA), q1) in
out(c25, (pkC, spkC, spkK, pkCA));
(
  (
    (
      ! !_31 <= N
      in(c1[!_31], hostT: tgs);
      new n2: nonce;
      new tc0: timest;
      let x_76: sblocksize = padno(tc0, n2) in
      new r1: sseed;
      new n1: nonce;
      out(c2[!_31], (C, pkC, spkC, certC, tc0, n2, sign2(x_76, sskgen2(rkCs), r1), C, hostT, n1));
      in(c3[!_31], (m21: bitstring, =C, TGT_38: maxmac, m24: maxmac));
      find @i_133 <= N suchthat defined(s1_93[@i_133], k1_199[@i_133], n5[@i_133], hostW[@i_133], ms4[@i_133], tc1[@i_133], ms3[@i_133], m2_118[@i_133]) && (m21 = m2_118[@i_133]) then
        let hostZ: kas = K in
        let x_74: sblocksize = padno(tc0, n2) in
        find  suchthat defined(s1_93[@i_133], k1_199[@i_133], n5[@i_133], hostW[@i_133], ms4[@i_133], tc1[@i_133], ms3[@i_133]) && ((certC = ms3[@i_133]) && ((tc0 = tc1[@i_133]) && ((!_31 = @i_78[@i_133]) && ((sign2(x_74, sskgen2(rkCs), r1) = ms4[@i_133]) && ((hostT = hostW[@i_133]) && (n1 = n5[@i_133])))))) then
          let injbot2(concat4(AK_40: key, =n1, tk_39: timest, =hostT)) = decsym(m24, kgen(s1_93[@i_133])) in
          event fullCK(hostZ, hostT, n1, m21, TGT_38, m24);
          out(c18[!_31], acceptC1(hostZ, hostT))
        orfind  suchthat defined(s1_101[@i_133], k1_200[@i_133], n5[@i_133], hostW[@i_133], ms4[@i_133], tc1[@i_133], ms3[@i_133]) && ((certC = ms3[@i_133]) && ((tc0 = tc1[@i_133]) && ((!_31 = @i_78[@i_133]) && ((sign2(x_74, sskgen2(rkCs), r1) = ms4[@i_133]) && ((hostT = hostW[@i_133]) && (n1 = n5[@i_133])))))) then
          let injbot2(concat4(AK_40: key, =n1, tk_39: timest, =hostT)) = decsym(m24, kgen(s1_101[@i_133])) in
          event fullCK(hostZ, hostT, n1, m21, TGT_38, m24);
          out(c18[!_31], acceptC1(hostZ, hostT))
      orfind @i_132 <= N suchthat defined(s1_101[@i_132], k1_200[@i_132], n5[@i_132], hostW[@i_132], ms4[@i_132], tc1[@i_132], ms3[@i_132], m2_123[@i_132]) && (m21 = m2_123[@i_132]) then
        let hostZ: kas = K in
        let x_74: sblocksize = padno(tc0, n2) in
        find  suchthat defined(s1_93[@i_132], k1_199[@i_132], n5[@i_132], hostW[@i_132], ms4[@i_132], tc1[@i_132], ms3[@i_132]) && ((certC = ms3[@i_132]) && ((tc0 = tc1[@i_132]) && ((!_31 = @i_78[@i_132]) && ((sign2(x_74, sskgen2(rkCs), r1) = ms4[@i_132]) && ((hostT = hostW[@i_132]) && (n1 = n5[@i_132])))))) then
          let injbot2(concat4(AK_40: key, =n1, tk_39: timest, =hostT)) = decsym(m24, kgen(s1_93[@i_132])) in
          event fullCK(hostZ, hostT, n1, m21, TGT_38, m24);
          out(c18[!_31], acceptC1(hostZ, hostT))
        orfind  suchthat defined(s1_101[@i_132], k1_200[@i_132], n5[@i_132], hostW[@i_132], ms4[@i_132], tc1[@i_132], ms3[@i_132]) && ((certC = ms3[@i_132]) && ((tc0 = tc1[@i_132]) && ((!_31 = @i_78[@i_132]) && ((sign2(x_74, sskgen2(rkCs), r1) = ms4[@i_132]) && ((hostT = hostW[@i_132]) && (n1 = n5[@i_132])))))) then
          let injbot2(concat4(AK_40: key, =n1, tk_39: timest, =hostT)) = decsym(m24, kgen(s1_101[@i_132])) in
          event fullCK(hostZ, hostT, n1, m21, TGT_38, m24);
          out(c18[!_31], acceptC1(hostZ, hostT))
    |
      ! !_32 <= N
      in(c22[!_32], (hostY: client, pkY: pkey, spkY: spkey, ms3: signature, tc1: timest, n4: nonce, ms4: signature, hostV: client, hostW: tgs, n5: nonce));
      if (hostV = hostY) then
      if (((hostY = C) && ((pkY = pkC) && (spkY = spkC))) && check2(concat1(hostY, pkY, spkY), pkCA, ms3)) then
      find @i_78 <= N suchthat defined(n2[@i_78], tc0[@i_78], x_74[@i_78]) && (((tc1 = tc0[@i_78]) && (n4 = n2[@i_78])) && check2(padno(tc1, n4), spkY, ms4)) then
        find j1 <= N2 suchthat defined(Qkey[j1], Lhost[j1]) && (Lhost[j1] = hostW) then
        new s3_92: symkeyseed;
        let AK_35: key = kgen(s3_92) in
        new s1_93: symkeyseed;
        let k1_199: key = cst_key in
        new r4_95: symseed;
        new tk_96: timest;
        let TGT_37: maxmac = encsym(concat5(AK_35, tk_96, hostY), Qkey[j1], r4_95) in
        new r5_97: symseed;
        let e24: maxmac = encsym(concat4(AK_35, n5, tk_96, hostW), kgen(s1_93), r5_97) in
        new s2_94: mkeyseed;
        new r7_99: seed;
        let m2_118: bitstring = enc2(Z, pkY, r7_99) in
        let m5: bitstring = (m2_118, hostY, TGT_37, e24) in
        event fullKC(hostY, hostW, n5, m2_118, TGT_37, e24);
        out(c23[!_32], m5)
      orfind @i_78 <= N suchthat defined(n2[@i_78], tc0[@i_78], x_76[@i_78]) && (((tc1 = tc0[@i_78]) && (n4 = n2[@i_78])) && check2(padno(tc1, n4), spkY, ms4)) then
        find j1 <= N2 suchthat defined(Qkey[j1], Lhost[j1]) && (Lhost[j1] = hostW) then
        new s3_100: symkeyseed;
        let AK_35: key = kgen(s3_100) in
        new s1_101: symkeyseed;
        let k1_200: key = cst_key in
        new r4_103: symseed;
        new tk_104: timest;
        let TGT_37: maxmac = encsym(concat5(AK_35, tk_104, hostY), Qkey[j1], r4_103) in
        new r5_105: symseed;
        let e24: maxmac = encsym(concat4(AK_35, n5, tk_104, hostW), kgen(s1_101), r5_105) in
        new s2_102: mkeyseed;
        new r7_107: seed;
        let m2_123: bitstring = enc2(Z, pkY, r7_107) in
        let m5: bitstring = (m2_123, hostY, TGT_37, e24) in
        event fullKC(hostY, hostW, n5, m2_123, TGT_37, e24);
        out(c23[!_32], m5)
    )
  |
    ! !_33 <= N2
    in(c21[!_33], (Lhost: tgs, Lkey: key));
    if (Lhost = T) then
      let Qkey: key = Kt
    else
      let Qkey: key = Lkey
  )
|
  ! !_34 <= N2
  in(c16[!_34], (Mhost1: tgs, Mhost2: server, Mkey: key))
)


Applying equivalence
equiv ! !_19 <= N2 new r: symkeyseed; (
  ! !_20 <= N new r2: symseed; (x: maxenc) -> encsym(x, kgen(r), r2),
  ! !_21 <= N3 (y: maxmac) -> decsym(y, kgen(r)))
<=(N2 * Pencctxt(time, N, N3))=>
      ! !_22 <= N2 new r: symkeyseed; (
  ! !_23 <= N new r2: symseed; (x_46: maxenc) -> let x: maxenc = x_46 in let z: maxmac = encsym(x, kgen2(r), r2) in z,
  ! !_24 <= N3 (y: maxmac) -> find j <= N suchthat defined(x[j], r2[j], z[j]) && (z[j] = y) then injbot2(x[j]) else bottom)
with r5_105 [Difference of probability N * Pencctxt(time + time(context for game 38), 1., N)] yields

Game 39 is
in(start, ());
new rkC: keyseed;
let pkC: pkey = pkgen2(rkC) in
new rkCs: skeyseed;
let spkC: spkey = spkgen2(rkCs) in
new rkKs: skeyseed;
let spkK: spkey = spkgen2(rkKs) in
new rkCA: skeyseed;
let pkCA: spkey = spkgen2(rkCA) in
new rKt: symkeyseed;
let Kt: key = kgen(rKt) in
let x_53: sblocksize = concat1(C, pkC, spkC) in
new q1: sseed;
let certC: signature = sign2(x_53, sskgen2(rkCA), q1) in
out(c25, (pkC, spkC, spkK, pkCA));
(
  (
    (
      ! !_31 <= N
      in(c1[!_31], hostT: tgs);
      new n2: nonce;
      new tc0: timest;
      let x_76: sblocksize = padno(tc0, n2) in
      new r1: sseed;
      new n1: nonce;
      out(c2[!_31], (C, pkC, spkC, certC, tc0, n2, sign2(x_76, sskgen2(rkCs), r1), C, hostT, n1));
      in(c3[!_31], (m21: bitstring, =C, TGT_38: maxmac, m24: maxmac));
      find @i_133 <= N suchthat defined(s1_93[@i_133], k1_199[@i_133], n5[@i_133], hostW[@i_133], ms4[@i_133], tc1[@i_133], ms3[@i_133], m2_118[@i_133]) && (m21 = m2_118[@i_133]) then
        let hostZ: kas = K in
        let x_74: sblocksize = padno(tc0, n2) in
        find  suchthat defined(s1_93[@i_133], k1_199[@i_133], n5[@i_133], hostW[@i_133], ms4[@i_133], tc1[@i_133], ms3[@i_133]) && ((certC = ms3[@i_133]) && ((tc0 = tc1[@i_133]) && ((!_31 = @i_78[@i_133]) && ((sign2(x_74, sskgen2(rkCs), r1) = ms4[@i_133]) && ((hostT = hostW[@i_133]) && (n1 = n5[@i_133])))))) then
          let injbot2(concat4(AK_40: key, =n1, tk_39: timest, =hostT)) = decsym(m24, kgen(s1_93[@i_133])) in
          event fullCK(hostZ, hostT, n1, m21, TGT_38, m24);
          out(c18[!_31], acceptC1(hostZ, hostT))
        orfind  suchthat defined(s1_101[@i_133], k1_200[@i_133], n5[@i_133], hostW[@i_133], ms4[@i_133], tc1[@i_133], ms3[@i_133]) && ((certC = ms3[@i_133]) && ((tc0 = tc1[@i_133]) && ((!_31 = @i_78[@i_133]) && ((sign2(x_74, sskgen2(rkCs), r1) = ms4[@i_133]) && ((hostT = hostW[@i_133]) && (n1 = n5[@i_133])))))) then
          if defined(x_202[@i_133], r5_105[@i_133], z_201[@i_133]) && (z_201[@i_133] = m24) then
            let injbot2(concat4(AK_40: key, =n1, tk_39: timest, =hostT)) = injbot2(x_202[@i_133]) in
            event fullCK(hostZ, hostT, n1, m21, TGT_38, m24);
            out(c18[!_31], acceptC1(hostZ, hostT))
          else
            let injbot2(concat4(AK_40: key, =n1, tk_39: timest, =hostT)) = bottom in
            event fullCK(hostZ, hostT, n1, m21, TGT_38, m24);
            out(c18[!_31], acceptC1(hostZ, hostT))
      orfind @i_132 <= N suchthat defined(s1_101[@i_132], k1_200[@i_132], n5[@i_132], hostW[@i_132], ms4[@i_132], tc1[@i_132], ms3[@i_132], m2_123[@i_132]) && (m21 = m2_123[@i_132]) then
        let hostZ: kas = K in
        let x_74: sblocksize = padno(tc0, n2) in
        find  suchthat defined(s1_93[@i_132], k1_199[@i_132], n5[@i_132], hostW[@i_132], ms4[@i_132], tc1[@i_132], ms3[@i_132]) && ((certC = ms3[@i_132]) && ((tc0 = tc1[@i_132]) && ((!_31 = @i_78[@i_132]) && ((sign2(x_74, sskgen2(rkCs), r1) = ms4[@i_132]) && ((hostT = hostW[@i_132]) && (n1 = n5[@i_132])))))) then
          let injbot2(concat4(AK_40: key, =n1, tk_39: timest, =hostT)) = decsym(m24, kgen(s1_93[@i_132])) in
          event fullCK(hostZ, hostT, n1, m21, TGT_38, m24);
          out(c18[!_31], acceptC1(hostZ, hostT))
        orfind  suchthat defined(s1_101[@i_132], k1_200[@i_132], n5[@i_132], hostW[@i_132], ms4[@i_132], tc1[@i_132], ms3[@i_132]) && ((certC = ms3[@i_132]) && ((tc0 = tc1[@i_132]) && ((!_31 = @i_78[@i_132]) && ((sign2(x_74, sskgen2(rkCs), r1) = ms4[@i_132]) && ((hostT = hostW[@i_132]) && (n1 = n5[@i_132])))))) then
          if defined(x_202[@i_132], r5_105[@i_132], z_201[@i_132]) && (z_201[@i_132] = m24) then
            let injbot2(concat4(AK_40: key, =n1, tk_39: timest, =hostT)) = injbot2(x_202[@i_132]) in
            event fullCK(hostZ, hostT, n1, m21, TGT_38, m24);
            out(c18[!_31], acceptC1(hostZ, hostT))
          else
            let injbot2(concat4(AK_40: key, =n1, tk_39: timest, =hostT)) = bottom in
            event fullCK(hostZ, hostT, n1, m21, TGT_38, m24);
            out(c18[!_31], acceptC1(hostZ, hostT))
    |
      ! !_32 <= N
      in(c22[!_32], (hostY: client, pkY: pkey, spkY: spkey, ms3: signature, tc1: timest, n4: nonce, ms4: signature, hostV: client, hostW: tgs, n5: nonce));
      if (hostV = hostY) then
      if (((hostY = C) && ((pkY = pkC) && (spkY = spkC))) && check2(concat1(hostY, pkY, spkY), pkCA, ms3)) then
      find @i_78 <= N suchthat defined(n2[@i_78], tc0[@i_78], x_74[@i_78]) && (((tc1 = tc0[@i_78]) && (n4 = n2[@i_78])) && check2(padno(tc1, n4), spkY, ms4)) then
        find j1 <= N2 suchthat defined(Qkey[j1], Lhost[j1]) && (Lhost[j1] = hostW) then
        new s3_92: symkeyseed;
        let AK_35: key = kgen(s3_92) in
        new s1_93: symkeyseed;
        let k1_199: key = cst_key in
        new r4_95: symseed;
        new tk_96: timest;
        let TGT_37: maxmac = encsym(concat5(AK_35, tk_96, hostY), Qkey[j1], r4_95) in
        new r5_97: symseed;
        let e24: maxmac = encsym(concat4(AK_35, n5, tk_96, hostW), kgen(s1_93), r5_97) in
        new s2_94: mkeyseed;
        new r7_99: seed;
        let m2_118: bitstring = enc2(Z, pkY, r7_99) in
        let m5: bitstring = (m2_118, hostY, TGT_37, e24) in
        event fullKC(hostY, hostW, n5, m2_118, TGT_37, e24);
        out(c23[!_32], m5)
      orfind @i_78 <= N suchthat defined(n2[@i_78], tc0[@i_78], x_76[@i_78]) && (((tc1 = tc0[@i_78]) && (n4 = n2[@i_78])) && check2(padno(tc1, n4), spkY, ms4)) then
        find j1 <= N2 suchthat defined(Qkey[j1], Lhost[j1]) && (Lhost[j1] = hostW) then
        new s3_100: symkeyseed;
        let AK_35: key = kgen(s3_100) in
        new s1_101: symkeyseed;
        let k1_200: key = cst_key in
        new r4_103: symseed;
        new tk_104: timest;
        let TGT_37: maxmac = encsym(concat5(AK_35, tk_104, hostY), Qkey[j1], r4_103) in
        new r5_105: symseed;
        let x_202: maxenc = concat4(AK_35, n5, tk_104, hostW) in
        let z_201: maxmac = encsym(x_202, kgen2(s1_101), r5_105) in
        let e24: maxmac = z_201 in
        new s2_102: mkeyseed;
        new r7_107: seed;
        let m2_123: bitstring = enc2(Z, pkY, r7_107) in
        let m5: bitstring = (m2_123, hostY, TGT_37, e24) in
        event fullKC(hostY, hostW, n5, m2_123, TGT_37, e24);
        out(c23[!_32], m5)
    )
  |
    ! !_33 <= N2
    in(c21[!_33], (Lhost: tgs, Lkey: key));
    if (Lhost = T) then
      let Qkey: key = Kt
    else
      let Qkey: key = Lkey
  )
|
  ! !_34 <= N2
  in(c16[!_34], (Mhost1: tgs, Mhost2: server, Mkey: key))
)


Applying simplify [Difference of probability N / |nonce|] yields

Game 40 is
in(start, ());
new rkC: keyseed;
let pkC: pkey = pkgen2(rkC) in
new rkCs: skeyseed;
let spkC: spkey = spkgen2(rkCs) in
new rkKs: skeyseed;
let spkK: spkey = spkgen2(rkKs) in
new rkCA: skeyseed;
let pkCA: spkey = spkgen2(rkCA) in
new rKt: symkeyseed;
let Kt: key = kgen(rKt) in
let x_53: sblocksize = concat1(C, pkC, spkC) in
new q1: sseed;
let certC: signature = sign2(x_53, sskgen2(rkCA), q1) in
out(c25, (pkC, spkC, spkK, pkCA));
(
  (
    (
      ! !_31 <= N
      in(c1[!_31], hostT: tgs);
      new n2: nonce;
      new tc0: timest;
      let x_76: sblocksize = padno(tc0, n2) in
      new r1: sseed;
      new n1: nonce;
      out(c2[!_31], (C, pkC, spkC, certC, tc0, n2, sign2(x_76, sskgen2(rkCs), r1), C, hostT, n1));
      in(c3[!_31], (m21: bitstring, =C, TGT_38: maxmac, m24: maxmac));
      find @i_133 <= N suchthat defined(AK_35[@i_133], s1_93[@i_133], n5[@i_133], hostW[@i_133], ms4[@i_133], tc1[@i_133], ms3[@i_133], m2_118[@i_133]) && (m21 = m2_118[@i_133]) then
        let hostZ: kas = K in
        let x_74: sblocksize = padno(tc0, n2) in
        find  suchthat defined(s1_93[@i_133], n5[@i_133], hostW[@i_133], ms4[@i_133], tc1[@i_133], ms3[@i_133]) && ((certC = ms3[@i_133]) && ((tc0 = tc1[@i_133]) && ((!_31 = @i_78[@i_133]) && ((sign2(x_74, sskgen2(rkCs), r1) = ms4[@i_133]) && ((hostT = hostW[@i_133]) && (n1 = n5[@i_133])))))) then
          let injbot2(concat4(AK_40: key, =n1, tk_39: timest, =hostT)) = decsym(m24, kgen(s1_93[@i_133])) in
          event fullCK(hostZ, hostT, n1, m21, TGT_38, m24);
          out(c18[!_31], acceptC1(hostZ, hostT))
        orfind  suchthat defined(tk_104[@i_133], AK_35[@i_133], z_201[@i_133], n5[@i_133], hostW[@i_133], ms4[@i_133], tc1[@i_133], ms3[@i_133]) && ((certC = ms3[@i_133]) && ((tc0 = tc1[@i_133]) && ((!_31 = @i_78[@i_133]) && ((sign2(x_74, sskgen2(rkCs), r1) = ms4[@i_133]) && ((hostT = hostW[@i_133]) && (n1 = n5[@i_133])))))) then
          if defined(tk_104[@i_133], AK_35[@i_133], z_201[@i_133]) && (z_201[@i_133] = m24) then
          let AK_40: key = AK_35[@i_133] in
          let tk_39: timest = tk_104[@i_133] in
          event fullCK(hostZ, hostT, n1, m21, TGT_38, m24);
          out(c18[!_31], acceptC1(hostZ, hostT))
      orfind @i_132 <= N suchthat defined(tk_104[@i_132], AK_35[@i_132], z_201[@i_132], n5[@i_132], hostW[@i_132], ms4[@i_132], tc1[@i_132], ms3[@i_132], m2_123[@i_132]) && (m21 = m2_123[@i_132]) then
        let hostZ: kas = K in
        let x_74: sblocksize = padno(tc0, n2) in
        find  suchthat defined(s1_93[@i_132], n5[@i_132], hostW[@i_132], ms4[@i_132], tc1[@i_132], ms3[@i_132], k1_199[@i_132]) && ((certC = ms3[@i_132]) && ((tc0 = tc1[@i_132]) && ((!_31 = @i_78[@i_132]) && ((sign2(x_74, sskgen2(rkCs), r1) = ms4[@i_132]) && ((hostT = hostW[@i_132]) && (n1 = n5[@i_132])))))) then
          let injbot2(concat4(AK_40: key, =n1, tk_39: timest, =hostT)) = decsym(m24, kgen(s1_93[@i_132])) in
          event fullCK(hostZ, hostT, n1, m21, TGT_38, m24);
          out(c18[!_31], acceptC1(hostZ, hostT))
        orfind  suchthat defined(tk_104[@i_132], AK_35[@i_132], z_201[@i_132], n5[@i_132], hostW[@i_132], ms4[@i_132], tc1[@i_132], ms3[@i_132]) && ((certC = ms3[@i_132]) && ((tc0 = tc1[@i_132]) && ((!_31 = @i_78[@i_132]) && ((sign2(x_74, sskgen2(rkCs), r1) = ms4[@i_132]) && ((hostT = hostW[@i_132]) && (n1 = n5[@i_132])))))) then
          if defined(tk_104[@i_132], AK_35[@i_132], z_201[@i_132]) && (z_201[@i_132] = m24) then
          let AK_40: key = AK_35[@i_132] in
          let tk_39: timest = tk_104[@i_132] in
          event fullCK(hostZ, hostT, n1, m21, TGT_38, m24);
          out(c18[!_31], acceptC1(hostZ, hostT))
    |
      ! !_32 <= N
      in(c22[!_32], (hostY: client, pkY: pkey, spkY: spkey, ms3: signature, tc1: timest, n4: nonce, ms4: signature, hostV: client, hostW: tgs, n5: nonce));
      if (hostV = hostY) then
      if (((hostY = C) && ((pkY = pkC) && (spkY = spkC))) && check2(concat1(hostY, pkY, spkY), pkCA, ms3)) then
      find @i_78 <= N suchthat defined(n2[@i_78], tc0[@i_78], x_74[@i_78]) && (((tc1 = tc0[@i_78]) && (n4 = n2[@i_78])) && check2(padno(tc1, n4), spkY, ms4)) then
        find j1 <= N2 suchthat defined(Qkey[j1], Lhost[j1]) && (Lhost[j1] = hostW) then
        new s3_92: symkeyseed;
        let AK_35: key = kgen(s3_92) in
        new s1_93: symkeyseed;
        let k1_199: key = cst_key in
        new r4_95: symseed;
        new tk_96: timest;
        let TGT_37: maxmac = encsym(concat5(AK_35, tk_96, hostY), Qkey[j1], r4_95) in
        new r5_97: symseed;
        let e24: maxmac = encsym(concat4(AK_35, n5, tk_96, hostW), kgen(s1_93), r5_97) in
        new r7_99: seed;
        let m2_118: bitstring = enc2(Z, pkY, r7_99) in
        let m5: bitstring = (m2_118, hostY, TGT_37, e24) in
        event fullKC(hostY, hostW, n5, m2_118, TGT_37, e24);
        out(c23[!_32], m5)
      orfind @i_78 <= N suchthat defined(n2[@i_78], tc0[@i_78], x_76[@i_78]) && (((tc1 = tc0[@i_78]) && (n4 = n2[@i_78])) && check2(padno(tc1, n4), spkY, ms4)) then
        find j1 <= N2 suchthat defined(Qkey[j1], Lhost[j1]) && (Lhost[j1] = hostW) then
        new s3_100: symkeyseed;
        let AK_35: key = kgen(s3_100) in
        new s1_101: symkeyseed;
        let k1_200: key = cst_key in
        new r4_103: symseed;
        new tk_104: timest;
        let TGT_37: maxmac = encsym(concat5(AK_35, tk_104, hostY), Qkey[j1], r4_103) in
        new r5_105: symseed;
        let x_202: maxenc = concat4(AK_35, n5, tk_104, hostW) in
        let z_201: maxmac = encsym(x_202, kgen2(s1_101), r5_105) in
        let e24: maxmac = z_201 in
        new r7_107: seed;
        let m2_123: bitstring = enc2(Z, pkY, r7_107) in
        let m5: bitstring = (m2_123, hostY, TGT_37, e24) in
        event fullKC(hostY, hostW, n5, m2_123, TGT_37, e24);
        out(c23[!_32], m5)
    )
  |
    ! !_33 <= N2
    in(c21[!_33], (Lhost: tgs, Lkey: key));
    if (Lhost = T) then
      let Qkey: key = Kt
    else
      let Qkey: key = Lkey
  )
|
  ! !_34 <= N2
  in(c16[!_34], (Mhost1: tgs, Mhost2: server, Mkey: key))
)


Applying move new all binders yields

Game 41 is
in(start, ());
new rkC: keyseed;
let pkC: pkey = pkgen2(rkC) in
new rkCs: skeyseed;
let spkC: spkey = spkgen2(rkCs) in
new rkKs: skeyseed;
let spkK: spkey = spkgen2(rkKs) in
new rkCA: skeyseed;
let pkCA: spkey = spkgen2(rkCA) in
new rKt: symkeyseed;
let Kt: key = kgen(rKt) in
let x_53: sblocksize = concat1(C, pkC, spkC) in
new q1: sseed;
let certC: signature = sign2(x_53, sskgen2(rkCA), q1) in
out(c25, (pkC, spkC, spkK, pkCA));
(
  (
    (
      ! !_31 <= N
      in(c1[!_31], hostT: tgs);
      new n2: nonce;
      new tc0: timest;
      let x_76: sblocksize = padno(tc0, n2) in
      new n1: nonce;
      new r1: sseed;
      out(c2[!_31], (C, pkC, spkC, certC, tc0, n2, sign2(x_76, sskgen2(rkCs), r1), C, hostT, n1));
      in(c3[!_31], (m21: bitstring, =C, TGT_38: maxmac, m24: maxmac));
      find @i_133 <= N suchthat defined(AK_35[@i_133], s1_93[@i_133], n5[@i_133], hostW[@i_133], ms4[@i_133], tc1[@i_133], ms3[@i_133], m2_118[@i_133]) && (m21 = m2_118[@i_133]) then
        let hostZ: kas = K in
        let x_74: sblocksize = padno(tc0, n2) in
        find  suchthat defined(s1_93[@i_133], n5[@i_133], hostW[@i_133], ms4[@i_133], tc1[@i_133], ms3[@i_133]) && ((certC = ms3[@i_133]) && ((tc0 = tc1[@i_133]) && ((!_31 = @i_78[@i_133]) && ((sign2(x_74, sskgen2(rkCs), r1) = ms4[@i_133]) && ((hostT = hostW[@i_133]) && (n1 = n5[@i_133])))))) then
          let injbot2(concat4(AK_40: key, =n1, tk_39: timest, =hostT)) = decsym(m24, kgen(s1_93[@i_133])) in
          event fullCK(hostZ, hostT, n1, m21, TGT_38, m24);
          out(c18[!_31], acceptC1(hostZ, hostT))
        orfind  suchthat defined(tk_104[@i_133], AK_35[@i_133], z_201[@i_133], n5[@i_133], hostW[@i_133], ms4[@i_133], tc1[@i_133], ms3[@i_133]) && ((certC = ms3[@i_133]) && ((tc0 = tc1[@i_133]) && ((!_31 = @i_78[@i_133]) && ((sign2(x_74, sskgen2(rkCs), r1) = ms4[@i_133]) && ((hostT = hostW[@i_133]) && (n1 = n5[@i_133])))))) then
          if defined(tk_104[@i_133], AK_35[@i_133], z_201[@i_133]) && (z_201[@i_133] = m24) then
          let AK_40: key = AK_35[@i_133] in
          let tk_39: timest = tk_104[@i_133] in
          event fullCK(hostZ, hostT, n1, m21, TGT_38, m24);
          out(c18[!_31], acceptC1(hostZ, hostT))
      orfind @i_132 <= N suchthat defined(tk_104[@i_132], AK_35[@i_132], z_201[@i_132], n5[@i_132], hostW[@i_132], ms4[@i_132], tc1[@i_132], ms3[@i_132], m2_123[@i_132]) && (m21 = m2_123[@i_132]) then
        let hostZ: kas = K in
        let x_74: sblocksize = padno(tc0, n2) in
        find  suchthat defined(s1_93[@i_132], n5[@i_132], hostW[@i_132], ms4[@i_132], tc1[@i_132], ms3[@i_132], k1_199[@i_132]) && ((certC = ms3[@i_132]) && ((tc0 = tc1[@i_132]) && ((!_31 = @i_78[@i_132]) && ((sign2(x_74, sskgen2(rkCs), r1) = ms4[@i_132]) && ((hostT = hostW[@i_132]) && (n1 = n5[@i_132])))))) then
          let injbot2(concat4(AK_40: key, =n1, tk_39: timest, =hostT)) = decsym(m24, kgen(s1_93[@i_132])) in
          event fullCK(hostZ, hostT, n1, m21, TGT_38, m24);
          out(c18[!_31], acceptC1(hostZ, hostT))
        orfind  suchthat defined(tk_104[@i_132], AK_35[@i_132], z_201[@i_132], n5[@i_132], hostW[@i_132], ms4[@i_132], tc1[@i_132], ms3[@i_132]) && ((certC = ms3[@i_132]) && ((tc0 = tc1[@i_132]) && ((!_31 = @i_78[@i_132]) && ((sign2(x_74, sskgen2(rkCs), r1) = ms4[@i_132]) && ((hostT = hostW[@i_132]) && (n1 = n5[@i_132])))))) then
          if defined(tk_104[@i_132], AK_35[@i_132], z_201[@i_132]) && (z_201[@i_132] = m24) then
          let AK_40: key = AK_35[@i_132] in
          let tk_39: timest = tk_104[@i_132] in
          event fullCK(hostZ, hostT, n1, m21, TGT_38, m24);
          out(c18[!_31], acceptC1(hostZ, hostT))
    |
      ! !_32 <= N
      in(c22[!_32], (hostY: client, pkY: pkey, spkY: spkey, ms3: signature, tc1: timest, n4: nonce, ms4: signature, hostV: client, hostW: tgs, n5: nonce));
      if (hostV = hostY) then
      if (((hostY = C) && ((pkY = pkC) && (spkY = spkC))) && check2(concat1(hostY, pkY, spkY), pkCA, ms3)) then
      find @i_78 <= N suchthat defined(n2[@i_78], tc0[@i_78], x_74[@i_78]) && (((tc1 = tc0[@i_78]) && (n4 = n2[@i_78])) && check2(padno(tc1, n4), spkY, ms4)) then
        find j1 <= N2 suchthat defined(Qkey[j1], Lhost[j1]) && (Lhost[j1] = hostW) then
        new s3_92: symkeyseed;
        let AK_35: key = kgen(s3_92) in
        new s1_93: symkeyseed;
        let k1_199: key = cst_key in
        new tk_96: timest;
        new r4_95: symseed;
        let TGT_37: maxmac = encsym(concat5(AK_35, tk_96, hostY), Qkey[j1], r4_95) in
        new r5_97: symseed;
        let e24: maxmac = encsym(concat4(AK_35, n5, tk_96, hostW), kgen(s1_93), r5_97) in
        new r7_99: seed;
        let m2_118: bitstring = enc2(Z, pkY, r7_99) in
        let m5: bitstring = (m2_118, hostY, TGT_37, e24) in
        event fullKC(hostY, hostW, n5, m2_118, TGT_37, e24);
        out(c23[!_32], m5)
      orfind @i_78 <= N suchthat defined(n2[@i_78], tc0[@i_78], x_76[@i_78]) && (((tc1 = tc0[@i_78]) && (n4 = n2[@i_78])) && check2(padno(tc1, n4), spkY, ms4)) then
        find j1 <= N2 suchthat defined(Qkey[j1], Lhost[j1]) && (Lhost[j1] = hostW) then
        new s3_100: symkeyseed;
        let AK_35: key = kgen(s3_100) in
        let k1_200: key = cst_key in
        new tk_104: timest;
        new r4_103: symseed;
        let TGT_37: maxmac = encsym(concat5(AK_35, tk_104, hostY), Qkey[j1], r4_103) in
        let x_202: maxenc = concat4(AK_35, n5, tk_104, hostW) in
        new r5_105: symseed;
        new s1_101: symkeyseed;
        let z_201: maxmac = encsym(x_202, kgen2(s1_101), r5_105) in
        let e24: maxmac = z_201 in
        new r7_107: seed;
        let m2_123: bitstring = enc2(Z, pkY, r7_107) in
        let m5: bitstring = (m2_123, hostY, TGT_37, e24) in
        event fullKC(hostY, hostW, n5, m2_123, TGT_37, e24);
        out(c23[!_32], m5)
    )
  |
    ! !_33 <= N2
    in(c21[!_33], (Lhost: tgs, Lkey: key));
    if (Lhost = T) then
      let Qkey: key = Kt
    else
      let Qkey: key = Lkey
  )
|
  ! !_34 <= N2
  in(c16[!_34], (Mhost1: tgs, Mhost2: server, Mkey: key))
)


Applying remove assignments of useless yields

Game 42 is
in(start, ());
new rkC: keyseed;
let pkC: pkey = pkgen2(rkC) in
new rkCs: skeyseed;
let spkC: spkey = spkgen2(rkCs) in
new rkKs: skeyseed;
let spkK: spkey = spkgen2(rkKs) in
new rkCA: skeyseed;
let pkCA: spkey = spkgen2(rkCA) in
new rKt: symkeyseed;
let Kt: key = kgen(rKt) in
let x_53: sblocksize = concat1(C, pkC, spkC) in
new q1: sseed;
let certC: signature = sign2(x_53, sskgen2(rkCA), q1) in
out(c25, (pkC, spkC, spkK, pkCA));
(
  (
    (
      ! !_31 <= N
      in(c1[!_31], hostT: tgs);
      new n2: nonce;
      new tc0: timest;
      let x_76: sblocksize = padno(tc0, n2) in
      new n1: nonce;
      new r1: sseed;
      out(c2[!_31], (C, pkC, spkC, certC, tc0, n2, sign2(x_76, sskgen2(rkCs), r1), C, hostT, n1));
      in(c3[!_31], (m21: bitstring, =C, TGT_38: maxmac, m24: maxmac));
      find @i_133 <= N suchthat defined(AK_35[@i_133], s1_93[@i_133], n5[@i_133], hostW[@i_133], ms4[@i_133], tc1[@i_133], ms3[@i_133], m2_118[@i_133]) && (m21 = m2_118[@i_133]) then
        let hostZ: kas = K in
        let x_74: sblocksize = padno(tc0, n2) in
        find  suchthat defined(s1_93[@i_133], n5[@i_133], hostW[@i_133], ms4[@i_133], tc1[@i_133], ms3[@i_133]) && ((certC = ms3[@i_133]) && ((tc0 = tc1[@i_133]) && ((!_31 = @i_78[@i_133]) && ((sign2(x_74, sskgen2(rkCs), r1) = ms4[@i_133]) && ((hostT = hostW[@i_133]) && (n1 = n5[@i_133])))))) then
          let injbot2(concat4(AK_40: key, =n1, tk_39: timest, =hostT)) = decsym(m24, kgen(s1_93[@i_133])) in
          event fullCK(hostZ, hostT, n1, m21, TGT_38, m24);
          out(c18[!_31], acceptC1(hostZ, hostT))
        orfind  suchthat defined(tk_104[@i_133], AK_35[@i_133], z_201[@i_133], n5[@i_133], hostW[@i_133], ms4[@i_133], tc1[@i_133], ms3[@i_133]) && ((certC = ms3[@i_133]) && ((tc0 = tc1[@i_133]) && ((!_31 = @i_78[@i_133]) && ((sign2(x_74, sskgen2(rkCs), r1) = ms4[@i_133]) && ((hostT = hostW[@i_133]) && (n1 = n5[@i_133])))))) then
          if defined(tk_104[@i_133], AK_35[@i_133], z_201[@i_133]) && (z_201[@i_133] = m24) then
          event fullCK(hostZ, hostT, n1, m21, TGT_38, m24);
          out(c18[!_31], acceptC1(hostZ, hostT))
      orfind @i_132 <= N suchthat defined(tk_104[@i_132], AK_35[@i_132], z_201[@i_132], n5[@i_132], hostW[@i_132], ms4[@i_132], tc1[@i_132], ms3[@i_132], m2_123[@i_132]) && (m21 = m2_123[@i_132]) then
        let hostZ: kas = K in
        let x_74: sblocksize = padno(tc0, n2) in
        find  suchthat defined(s1_93[@i_132], n5[@i_132], hostW[@i_132], ms4[@i_132], tc1[@i_132], ms3[@i_132], k1_199[@i_132]) && ((certC = ms3[@i_132]) && ((tc0 = tc1[@i_132]) && ((!_31 = @i_78[@i_132]) && ((sign2(x_74, sskgen2(rkCs), r1) = ms4[@i_132]) && ((hostT = hostW[@i_132]) && (n1 = n5[@i_132])))))) then
          let injbot2(concat4(AK_40: key, =n1, tk_39: timest, =hostT)) = decsym(m24, kgen(s1_93[@i_132])) in
          event fullCK(hostZ, hostT, n1, m21, TGT_38, m24);
          out(c18[!_31], acceptC1(hostZ, hostT))
        orfind  suchthat defined(tk_104[@i_132], AK_35[@i_132], z_201[@i_132], n5[@i_132], hostW[@i_132], ms4[@i_132], tc1[@i_132], ms3[@i_132]) && ((certC = ms3[@i_132]) && ((tc0 = tc1[@i_132]) && ((!_31 = @i_78[@i_132]) && ((sign2(x_74, sskgen2(rkCs), r1) = ms4[@i_132]) && ((hostT = hostW[@i_132]) && (n1 = n5[@i_132])))))) then
          if defined(tk_104[@i_132], AK_35[@i_132], z_201[@i_132]) && (z_201[@i_132] = m24) then
          event fullCK(hostZ, hostT, n1, m21, TGT_38, m24);
          out(c18[!_31], acceptC1(hostZ, hostT))
    |
      ! !_32 <= N
      in(c22[!_32], (hostY: client, pkY: pkey, spkY: spkey, ms3: signature, tc1: timest, n4: nonce, ms4: signature, hostV: client, hostW: tgs, n5: nonce));
      if (hostV = hostY) then
      if (((hostY = C) && ((pkY = pkC) && (spkY = spkC))) && check2(concat1(hostY, pkY, spkY), pkCA, ms3)) then
      find @i_78 <= N suchthat defined(n2[@i_78], tc0[@i_78], x_74[@i_78]) && (((tc1 = tc0[@i_78]) && (n4 = n2[@i_78])) && check2(padno(tc1, n4), spkY, ms4)) then
        find j1 <= N2 suchthat defined(Qkey[j1], Lhost[j1]) && (Lhost[j1] = hostW) then
        new s3_92: symkeyseed;
        let AK_35: key = kgen(s3_92) in
        new s1_93: symkeyseed;
        let k1_199: key = cst_key in
        new tk_96: timest;
        new r4_95: symseed;
        let TGT_37: maxmac = encsym(concat5(AK_35, tk_96, hostY), Qkey[j1], r4_95) in
        new r5_97: symseed;
        let e24: maxmac = encsym(concat4(AK_35, n5, tk_96, hostW), kgen(s1_93), r5_97) in
        new r7_99: seed;
        let m2_118: bitstring = enc2(Z, pkY, r7_99) in
        let m5: bitstring = (m2_118, hostY, TGT_37, e24) in
        event fullKC(hostY, hostW, n5, m2_118, TGT_37, e24);
        out(c23[!_32], m5)
      orfind @i_78 <= N suchthat defined(n2[@i_78], tc0[@i_78], x_76[@i_78]) && (((tc1 = tc0[@i_78]) && (n4 = n2[@i_78])) && check2(padno(tc1, n4), spkY, ms4)) then
        find j1 <= N2 suchthat defined(Qkey[j1], Lhost[j1]) && (Lhost[j1] = hostW) then
        new s3_100: symkeyseed;
        let AK_35: key = kgen(s3_100) in
        new tk_104: timest;
        new r4_103: symseed;
        let TGT_37: maxmac = encsym(concat5(AK_35, tk_104, hostY), Qkey[j1], r4_103) in
        let x_202: maxenc = concat4(AK_35, n5, tk_104, hostW) in
        new r5_105: symseed;
        new s1_101: symkeyseed;
        let z_201: maxmac = encsym(x_202, kgen2(s1_101), r5_105) in
        new r7_107: seed;
        let m2_123: bitstring = enc2(Z, pkY, r7_107) in
        let m5: bitstring = (m2_123, hostY, TGT_37, z_201) in
        event fullKC(hostY, hostW, n5, m2_123, TGT_37, z_201);
        out(c23[!_32], m5)
    )
  |
    ! !_33 <= N2
    in(c21[!_33], (Lhost: tgs, Lkey: key));
    if (Lhost = T) then
      let Qkey: key = Kt
    else
      let Qkey: key = Lkey
  )
|
  ! !_34 <= N2
  in(c16[!_34], (Mhost1: tgs, Mhost2: server, Mkey: key))
)


Applying equivalence
equiv ! !_19 <= N2 new r: symkeyseed; (
  ! !_20 <= N new r2: symseed; (x: maxenc) -> encsym(x, kgen(r), r2),
  ! !_21 <= N3 (y: maxmac) -> decsym(y, kgen(r)))
<=(N2 * Pencctxt(time, N, N3))=>
      ! !_22 <= N2 new r: symkeyseed; (
  ! !_23 <= N new r2: symseed; (x_46: maxenc) -> let x: maxenc = x_46 in let z: maxmac = encsym(x, kgen2(r), r2) in z,
  ! !_24 <= N3 (y: maxmac) -> find j <= N suchthat defined(x[j], r2[j], z[j]) && (z[j] = y) then injbot2(x[j]) else bottom)
 [Difference of probability N * Pencctxt(time + time(context for game 42), 1., N)] yields

Game 43 is
in(start, ());
new rkC: keyseed;
let pkC: pkey = pkgen2(rkC) in
new rkCs: skeyseed;
let spkC: spkey = spkgen2(rkCs) in
new rkKs: skeyseed;
let spkK: spkey = spkgen2(rkKs) in
new rkCA: skeyseed;
let pkCA: spkey = spkgen2(rkCA) in
new rKt: symkeyseed;
let Kt: key = kgen(rKt) in
let x_53: sblocksize = concat1(C, pkC, spkC) in
new q1: sseed;
let certC: signature = sign2(x_53, sskgen2(rkCA), q1) in
out(c25, (pkC, spkC, spkK, pkCA));
(
  (
    (
      ! !_31 <= N
      in(c1[!_31], hostT: tgs);
      new n2: nonce;
      new tc0: timest;
      let x_76: sblocksize = padno(tc0, n2) in
      new n1: nonce;
      new r1: sseed;
      out(c2[!_31], (C, pkC, spkC, certC, tc0, n2, sign2(x_76, sskgen2(rkCs), r1), C, hostT, n1));
      in(c3[!_31], (m21: bitstring, =C, TGT_38: maxmac, m24: maxmac));
      find @i_133 <= N suchthat defined(AK_35[@i_133], s1_93[@i_133], n5[@i_133], hostW[@i_133], ms4[@i_133], tc1[@i_133], ms3[@i_133], m2_118[@i_133]) && (m21 = m2_118[@i_133]) then
        let hostZ: kas = K in
        let x_74: sblocksize = padno(tc0, n2) in
        find  suchthat defined(s1_93[@i_133], n5[@i_133], hostW[@i_133], ms4[@i_133], tc1[@i_133], ms3[@i_133]) && ((certC = ms3[@i_133]) && ((tc0 = tc1[@i_133]) && ((!_31 = @i_78[@i_133]) && ((sign2(x_74, sskgen2(rkCs), r1) = ms4[@i_133]) && ((hostT = hostW[@i_133]) && (n1 = n5[@i_133])))))) then
          if defined(x_231[@i_133], r5_97[@i_133], z_230[@i_133]) && (z_230[@i_133] = m24) then
            let injbot2(concat4(AK_40: key, =n1, tk_39: timest, =hostT)) = injbot2(x_231[@i_133]) in
            event fullCK(hostZ, hostT, n1, m21, TGT_38, m24);
            out(c18[!_31], acceptC1(hostZ, hostT))
          else
            let injbot2(concat4(AK_40: key, =n1, tk_39: timest, =hostT)) = bottom in
            event fullCK(hostZ, hostT, n1, m21, TGT_38, m24);
            out(c18[!_31], acceptC1(hostZ, hostT))
        orfind  suchthat defined(tk_104[@i_133], AK_35[@i_133], z_201[@i_133], n5[@i_133], hostW[@i_133], ms4[@i_133], tc1[@i_133], ms3[@i_133]) && ((certC = ms3[@i_133]) && ((tc0 = tc1[@i_133]) && ((!_31 = @i_78[@i_133]) && ((sign2(x_74, sskgen2(rkCs), r1) = ms4[@i_133]) && ((hostT = hostW[@i_133]) && (n1 = n5[@i_133])))))) then
          if defined(tk_104[@i_133], AK_35[@i_133], z_201[@i_133]) && (z_201[@i_133] = m24) then
          event fullCK(hostZ, hostT, n1, m21, TGT_38, m24);
          out(c18[!_31], acceptC1(hostZ, hostT))
      orfind @i_132 <= N suchthat defined(tk_104[@i_132], AK_35[@i_132], z_201[@i_132], n5[@i_132], hostW[@i_132], ms4[@i_132], tc1[@i_132], ms3[@i_132], m2_123[@i_132]) && (m21 = m2_123[@i_132]) then
        let hostZ: kas = K in
        let x_74: sblocksize = padno(tc0, n2) in
        find  suchthat defined(s1_93[@i_132], n5[@i_132], hostW[@i_132], ms4[@i_132], tc1[@i_132], ms3[@i_132], k1_199[@i_132]) && ((certC = ms3[@i_132]) && ((tc0 = tc1[@i_132]) && ((!_31 = @i_78[@i_132]) && ((sign2(x_74, sskgen2(rkCs), r1) = ms4[@i_132]) && ((hostT = hostW[@i_132]) && (n1 = n5[@i_132])))))) then
          if defined(x_231[@i_132], r5_97[@i_132], z_230[@i_132]) && (z_230[@i_132] = m24) then
            let injbot2(concat4(AK_40: key, =n1, tk_39: timest, =hostT)) = injbot2(x_231[@i_132]) in
            event fullCK(hostZ, hostT, n1, m21, TGT_38, m24);
            out(c18[!_31], acceptC1(hostZ, hostT))
          else
            let injbot2(concat4(AK_40: key, =n1, tk_39: timest, =hostT)) = bottom in
            event fullCK(hostZ, hostT, n1, m21, TGT_38, m24);
            out(c18[!_31], acceptC1(hostZ, hostT))
        orfind  suchthat defined(tk_104[@i_132], AK_35[@i_132], z_201[@i_132], n5[@i_132], hostW[@i_132], ms4[@i_132], tc1[@i_132], ms3[@i_132]) && ((certC = ms3[@i_132]) && ((tc0 = tc1[@i_132]) && ((!_31 = @i_78[@i_132]) && ((sign2(x_74, sskgen2(rkCs), r1) = ms4[@i_132]) && ((hostT = hostW[@i_132]) && (n1 = n5[@i_132])))))) then
          if defined(tk_104[@i_132], AK_35[@i_132], z_201[@i_132]) && (z_201[@i_132] = m24) then
          event fullCK(hostZ, hostT, n1, m21, TGT_38, m24);
          out(c18[!_31], acceptC1(hostZ, hostT))
    |
      ! !_32 <= N
      in(c22[!_32], (hostY: client, pkY: pkey, spkY: spkey, ms3: signature, tc1: timest, n4: nonce, ms4: signature, hostV: client, hostW: tgs, n5: nonce));
      if (hostV = hostY) then
      if (((hostY = C) && ((pkY = pkC) && (spkY = spkC))) && check2(concat1(hostY, pkY, spkY), pkCA, ms3)) then
      find @i_78 <= N suchthat defined(n2[@i_78], tc0[@i_78], x_74[@i_78]) && (((tc1 = tc0[@i_78]) && (n4 = n2[@i_78])) && check2(padno(tc1, n4), spkY, ms4)) then
        find j1 <= N2 suchthat defined(Qkey[j1], Lhost[j1]) && (Lhost[j1] = hostW) then
        new s3_92: symkeyseed;
        let AK_35: key = kgen(s3_92) in
        new s1_93: symkeyseed;
        let k1_199: key = cst_key in
        new tk_96: timest;
        new r4_95: symseed;
        let TGT_37: maxmac = encsym(concat5(AK_35, tk_96, hostY), Qkey[j1], r4_95) in
        new r5_97: symseed;
        let x_231: maxenc = concat4(AK_35, n5, tk_96, hostW) in
        let z_230: maxmac = encsym(x_231, kgen2(s1_93), r5_97) in
        let e24: maxmac = z_230 in
        new r7_99: seed;
        let m2_118: bitstring = enc2(Z, pkY, r7_99) in
        let m5: bitstring = (m2_118, hostY, TGT_37, e24) in
        event fullKC(hostY, hostW, n5, m2_118, TGT_37, e24);
        out(c23[!_32], m5)
      orfind @i_78 <= N suchthat defined(n2[@i_78], tc0[@i_78], x_76[@i_78]) && (((tc1 = tc0[@i_78]) && (n4 = n2[@i_78])) && check2(padno(tc1, n4), spkY, ms4)) then
        find j1 <= N2 suchthat defined(Qkey[j1], Lhost[j1]) && (Lhost[j1] = hostW) then
        new s3_100: symkeyseed;
        let AK_35: key = kgen(s3_100) in
        new tk_104: timest;
        new r4_103: symseed;
        let TGT_37: maxmac = encsym(concat5(AK_35, tk_104, hostY), Qkey[j1], r4_103) in
        let x_202: maxenc = concat4(AK_35, n5, tk_104, hostW) in
        new r5_105: symseed;
        new s1_101: symkeyseed;
        let z_201: maxmac = encsym(x_202, kgen2(s1_101), r5_105) in
        new r7_107: seed;
        let m2_123: bitstring = enc2(Z, pkY, r7_107) in
        let m5: bitstring = (m2_123, hostY, TGT_37, z_201) in
        event fullKC(hostY, hostW, n5, m2_123, TGT_37, z_201);
        out(c23[!_32], m5)
    )
  |
    ! !_33 <= N2
    in(c21[!_33], (Lhost: tgs, Lkey: key));
    if (Lhost = T) then
      let Qkey: key = Kt
    else
      let Qkey: key = Lkey
  )
|
  ! !_34 <= N2
  in(c16[!_34], (Mhost1: tgs, Mhost2: server, Mkey: key))
)


Applying simplify [Difference of probability N / |nonce|] yields

Game 44 is
in(start, ());
new rkC: keyseed;
let pkC: pkey = pkgen2(rkC) in
new rkCs: skeyseed;
let spkC: spkey = spkgen2(rkCs) in
new rkKs: skeyseed;
let spkK: spkey = spkgen2(rkKs) in
new rkCA: skeyseed;
let pkCA: spkey = spkgen2(rkCA) in
new rKt: symkeyseed;
let Kt: key = kgen(rKt) in
let x_53: sblocksize = concat1(C, pkC, spkC) in
new q1: sseed;
let certC: signature = sign2(x_53, sskgen2(rkCA), q1) in
out(c25, (pkC, spkC, spkK, pkCA));
(
  (
    (
      ! !_31 <= N
      in(c1[!_31], hostT: tgs);
      new n2: nonce;
      new tc0: timest;
      let x_76: sblocksize = padno(tc0, n2) in
      new n1: nonce;
      new r1: sseed;
      out(c2[!_31], (C, pkC, spkC, certC, tc0, n2, sign2(x_76, sskgen2(rkCs), r1), C, hostT, n1));
      in(c3[!_31], (m21: bitstring, =C, TGT_38: maxmac, m24: maxmac));
      find @i_133 <= N suchthat defined(tk_96[@i_133], AK_35[@i_133], z_230[@i_133], n5[@i_133], hostW[@i_133], ms4[@i_133], tc1[@i_133], ms3[@i_133], m2_118[@i_133]) && (m21 = m2_118[@i_133]) then
        let hostZ: kas = K in
        let x_74: sblocksize = padno(tc0, n2) in
        find  suchthat defined(tk_96[@i_133], AK_35[@i_133], z_230[@i_133], n5[@i_133], hostW[@i_133], ms4[@i_133], tc1[@i_133], ms3[@i_133]) && ((certC = ms3[@i_133]) && ((tc0 = tc1[@i_133]) && ((!_31 = @i_78[@i_133]) && ((sign2(x_74, sskgen2(rkCs), r1) = ms4[@i_133]) && ((hostT = hostW[@i_133]) && (n1 = n5[@i_133])))))) then
          if defined(tk_96[@i_133], AK_35[@i_133], z_230[@i_133]) && (z_230[@i_133] = m24) then
          let AK_40: key = AK_35[@i_133] in
          let tk_39: timest = tk_96[@i_133] in
          event fullCK(hostZ, hostT, n1, m21, TGT_38, m24);
          out(c18[!_31], acceptC1(hostZ, hostT))
        orfind  suchthat defined(z_201[@i_133], n5[@i_133], hostW[@i_133], ms4[@i_133], tc1[@i_133], ms3[@i_133]) && ((certC = ms3[@i_133]) && ((tc0 = tc1[@i_133]) && ((!_31 = @i_78[@i_133]) && ((sign2(x_74, sskgen2(rkCs), r1) = ms4[@i_133]) && ((hostT = hostW[@i_133]) && (n1 = n5[@i_133])))))) then
          if defined(z_201[@i_133]) && (z_201[@i_133] = m24) then
          event fullCK(hostZ, hostT, n1, m21, TGT_38, m24);
          out(c18[!_31], acceptC1(hostZ, hostT))
      orfind @i_132 <= N suchthat defined(z_201[@i_132], AK_35[@i_132], n5[@i_132], hostW[@i_132], ms4[@i_132], tc1[@i_132], ms3[@i_132], m2_123[@i_132]) && (m21 = m2_123[@i_132]) then
        let hostZ: kas = K in
        let x_74: sblocksize = padno(tc0, n2) in
        find  suchthat defined(tk_96[@i_132], AK_35[@i_132], z_230[@i_132], n5[@i_132], hostW[@i_132], ms4[@i_132], tc1[@i_132], ms3[@i_132]) && ((certC = ms3[@i_132]) && ((tc0 = tc1[@i_132]) && ((!_31 = @i_78[@i_132]) && ((sign2(x_74, sskgen2(rkCs), r1) = ms4[@i_132]) && ((hostT = hostW[@i_132]) && (n1 = n5[@i_132])))))) then
          if defined(tk_96[@i_132], AK_35[@i_132], z_230[@i_132]) && (z_230[@i_132] = m24) then
          let AK_40: key = AK_35[@i_132] in
          let tk_39: timest = tk_96[@i_132] in
          event fullCK(hostZ, hostT, n1, m21, TGT_38, m24);
          out(c18[!_31], acceptC1(hostZ, hostT))
        orfind  suchthat defined(z_201[@i_132], n5[@i_132], hostW[@i_132], ms4[@i_132], tc1[@i_132], ms3[@i_132]) && ((certC = ms3[@i_132]) && ((tc0 = tc1[@i_132]) && ((!_31 = @i_78[@i_132]) && ((sign2(x_74, sskgen2(rkCs), r1) = ms4[@i_132]) && ((hostT = hostW[@i_132]) && (n1 = n5[@i_132])))))) then
          if defined(z_201[@i_132]) && (z_201[@i_132] = m24) then
          event fullCK(hostZ, hostT, n1, m21, TGT_38, m24);
          out(c18[!_31], acceptC1(hostZ, hostT))
    |
      ! !_32 <= N
      in(c22[!_32], (hostY: client, pkY: pkey, spkY: spkey, ms3: signature, tc1: timest, n4: nonce, ms4: signature, hostV: client, hostW: tgs, n5: nonce));
      if (hostV = hostY) then
      if (((hostY = C) && ((pkY = pkC) && (spkY = spkC))) && check2(concat1(hostY, pkY, spkY), pkCA, ms3)) then
      find @i_78 <= N suchthat defined(n2[@i_78], tc0[@i_78], x_74[@i_78]) && (((tc1 = tc0[@i_78]) && (n4 = n2[@i_78])) && check2(padno(tc1, n4), spkY, ms4)) then
        find j1 <= N2 suchthat defined(Qkey[j1], Lhost[j1]) && (Lhost[j1] = hostW) then
        new s3_92: symkeyseed;
        let AK_35: key = kgen(s3_92) in
        new s1_93: symkeyseed;
        let k1_199: key = cst_key in
        new tk_96: timest;
        new r4_95: symseed;
        let TGT_37: maxmac = encsym(concat5(AK_35, tk_96, hostY), Qkey[j1], r4_95) in
        new r5_97: symseed;
        let x_231: maxenc = concat4(AK_35, n5, tk_96, hostW) in
        let z_230: maxmac = encsym(x_231, kgen2(s1_93), r5_97) in
        let e24: maxmac = z_230 in
        new r7_99: seed;
        let m2_118: bitstring = enc2(Z, pkY, r7_99) in
        let m5: bitstring = (m2_118, hostY, TGT_37, e24) in
        event fullKC(hostY, hostW, n5, m2_118, TGT_37, e24);
        out(c23[!_32], m5)
      orfind @i_78 <= N suchthat defined(n2[@i_78], tc0[@i_78], x_76[@i_78]) && (((tc1 = tc0[@i_78]) && (n4 = n2[@i_78])) && check2(padno(tc1, n4), spkY, ms4)) then
        find j1 <= N2 suchthat defined(Qkey[j1], Lhost[j1]) && (Lhost[j1] = hostW) then
        new s3_100: symkeyseed;
        let AK_35: key = kgen(s3_100) in
        new tk_104: timest;
        new r4_103: symseed;
        let TGT_37: maxmac = encsym(concat5(AK_35, tk_104, hostY), Qkey[j1], r4_103) in
        let x_202: maxenc = concat4(AK_35, n5, tk_104, hostW) in
        new r5_105: symseed;
        new s1_101: symkeyseed;
        let z_201: maxmac = encsym(x_202, kgen2(s1_101), r5_105) in
        new r7_107: seed;
        let m2_123: bitstring = enc2(Z, pkY, r7_107) in
        let m5: bitstring = (m2_123, hostY, TGT_37, z_201) in
        event fullKC(hostY, hostW, n5, m2_123, TGT_37, z_201);
        out(c23[!_32], m5)
    )
  |
    ! !_33 <= N2
    in(c21[!_33], (Lhost: tgs, Lkey: key));
    if (Lhost = T) then
      let Qkey: key = Kt
    else
      let Qkey: key = Lkey
  )
|
  ! !_34 <= N2
  in(c16[!_34], (Mhost1: tgs, Mhost2: server, Mkey: key))
)


Applying move new all binders yields

Game 45 is
in(start, ());
new rkC: keyseed;
let pkC: pkey = pkgen2(rkC) in
new rkCs: skeyseed;
let spkC: spkey = spkgen2(rkCs) in
new rkKs: skeyseed;
let spkK: spkey = spkgen2(rkKs) in
new rkCA: skeyseed;
let pkCA: spkey = spkgen2(rkCA) in
new rKt: symkeyseed;
let Kt: key = kgen(rKt) in
let x_53: sblocksize = concat1(C, pkC, spkC) in
new q1: sseed;
let certC: signature = sign2(x_53, sskgen2(rkCA), q1) in
out(c25, (pkC, spkC, spkK, pkCA));
(
  (
    (
      ! !_31 <= N
      in(c1[!_31], hostT: tgs);
      new n2: nonce;
      new tc0: timest;
      let x_76: sblocksize = padno(tc0, n2) in
      new r1: sseed;
      new n1: nonce;
      out(c2[!_31], (C, pkC, spkC, certC, tc0, n2, sign2(x_76, sskgen2(rkCs), r1), C, hostT, n1));
      in(c3[!_31], (m21: bitstring, =C, TGT_38: maxmac, m24: maxmac));
      find @i_133 <= N suchthat defined(tk_96[@i_133], AK_35[@i_133], z_230[@i_133], n5[@i_133], hostW[@i_133], ms4[@i_133], tc1[@i_133], ms3[@i_133], m2_118[@i_133]) && (m21 = m2_118[@i_133]) then
        let hostZ: kas = K in
        let x_74: sblocksize = padno(tc0, n2) in
        find  suchthat defined(tk_96[@i_133], AK_35[@i_133], z_230[@i_133], n5[@i_133], hostW[@i_133], ms4[@i_133], tc1[@i_133], ms3[@i_133]) && ((certC = ms3[@i_133]) && ((tc0 = tc1[@i_133]) && ((!_31 = @i_78[@i_133]) && ((sign2(x_74, sskgen2(rkCs), r1) = ms4[@i_133]) && ((hostT = hostW[@i_133]) && (n1 = n5[@i_133])))))) then
          if defined(tk_96[@i_133], AK_35[@i_133], z_230[@i_133]) && (z_230[@i_133] = m24) then
          let AK_40: key = AK_35[@i_133] in
          let tk_39: timest = tk_96[@i_133] in
          event fullCK(hostZ, hostT, n1, m21, TGT_38, m24);
          out(c18[!_31], acceptC1(hostZ, hostT))
        orfind  suchthat defined(z_201[@i_133], n5[@i_133], hostW[@i_133], ms4[@i_133], tc1[@i_133], ms3[@i_133]) && ((certC = ms3[@i_133]) && ((tc0 = tc1[@i_133]) && ((!_31 = @i_78[@i_133]) && ((sign2(x_74, sskgen2(rkCs), r1) = ms4[@i_133]) && ((hostT = hostW[@i_133]) && (n1 = n5[@i_133])))))) then
          if defined(z_201[@i_133]) && (z_201[@i_133] = m24) then
          event fullCK(hostZ, hostT, n1, m21, TGT_38, m24);
          out(c18[!_31], acceptC1(hostZ, hostT))
      orfind @i_132 <= N suchthat defined(z_201[@i_132], AK_35[@i_132], n5[@i_132], hostW[@i_132], ms4[@i_132], tc1[@i_132], ms3[@i_132], m2_123[@i_132]) && (m21 = m2_123[@i_132]) then
        let hostZ: kas = K in
        let x_74: sblocksize = padno(tc0, n2) in
        find  suchthat defined(tk_96[@i_132], AK_35[@i_132], z_230[@i_132], n5[@i_132], hostW[@i_132], ms4[@i_132], tc1[@i_132], ms3[@i_132]) && ((certC = ms3[@i_132]) && ((tc0 = tc1[@i_132]) && ((!_31 = @i_78[@i_132]) && ((sign2(x_74, sskgen2(rkCs), r1) = ms4[@i_132]) && ((hostT = hostW[@i_132]) && (n1 = n5[@i_132])))))) then
          if defined(tk_96[@i_132], AK_35[@i_132], z_230[@i_132]) && (z_230[@i_132] = m24) then
          let AK_40: key = AK_35[@i_132] in
          let tk_39: timest = tk_96[@i_132] in
          event fullCK(hostZ, hostT, n1, m21, TGT_38, m24);
          out(c18[!_31], acceptC1(hostZ, hostT))
        orfind  suchthat defined(z_201[@i_132], n5[@i_132], hostW[@i_132], ms4[@i_132], tc1[@i_132], ms3[@i_132]) && ((certC = ms3[@i_132]) && ((tc0 = tc1[@i_132]) && ((!_31 = @i_78[@i_132]) && ((sign2(x_74, sskgen2(rkCs), r1) = ms4[@i_132]) && ((hostT = hostW[@i_132]) && (n1 = n5[@i_132])))))) then
          if defined(z_201[@i_132]) && (z_201[@i_132] = m24) then
          event fullCK(hostZ, hostT, n1, m21, TGT_38, m24);
          out(c18[!_31], acceptC1(hostZ, hostT))
    |
      ! !_32 <= N
      in(c22[!_32], (hostY: client, pkY: pkey, spkY: spkey, ms3: signature, tc1: timest, n4: nonce, ms4: signature, hostV: client, hostW: tgs, n5: nonce));
      if (hostV = hostY) then
      if (((hostY = C) && ((pkY = pkC) && (spkY = spkC))) && check2(concat1(hostY, pkY, spkY), pkCA, ms3)) then
      find @i_78 <= N suchthat defined(n2[@i_78], tc0[@i_78], x_74[@i_78]) && (((tc1 = tc0[@i_78]) && (n4 = n2[@i_78])) && check2(padno(tc1, n4), spkY, ms4)) then
        find j1 <= N2 suchthat defined(Qkey[j1], Lhost[j1]) && (Lhost[j1] = hostW) then
        new s3_92: symkeyseed;
        let AK_35: key = kgen(s3_92) in
        let k1_199: key = cst_key in
        new tk_96: timest;
        new r4_95: symseed;
        let TGT_37: maxmac = encsym(concat5(AK_35, tk_96, hostY), Qkey[j1], r4_95) in
        let x_231: maxenc = concat4(AK_35, n5, tk_96, hostW) in
        new r5_97: symseed;
        new s1_93: symkeyseed;
        let z_230: maxmac = encsym(x_231, kgen2(s1_93), r5_97) in
        let e24: maxmac = z_230 in
        new r7_99: seed;
        let m2_118: bitstring = enc2(Z, pkY, r7_99) in
        let m5: bitstring = (m2_118, hostY, TGT_37, e24) in
        event fullKC(hostY, hostW, n5, m2_118, TGT_37, e24);
        out(c23[!_32], m5)
      orfind @i_78 <= N suchthat defined(n2[@i_78], tc0[@i_78], x_76[@i_78]) && (((tc1 = tc0[@i_78]) && (n4 = n2[@i_78])) && check2(padno(tc1, n4), spkY, ms4)) then
        find j1 <= N2 suchthat defined(Qkey[j1], Lhost[j1]) && (Lhost[j1] = hostW) then
        new s3_100: symkeyseed;
        let AK_35: key = kgen(s3_100) in
        new r4_103: symseed;
        new tk_104: timest;
        let TGT_37: maxmac = encsym(concat5(AK_35, tk_104, hostY), Qkey[j1], r4_103) in
        let x_202: maxenc = concat4(AK_35, n5, tk_104, hostW) in
        new s1_101: symkeyseed;
        new r5_105: symseed;
        let z_201: maxmac = encsym(x_202, kgen2(s1_101), r5_105) in
        new r7_107: seed;
        let m2_123: bitstring = enc2(Z, pkY, r7_107) in
        let m5: bitstring = (m2_123, hostY, TGT_37, z_201) in
        event fullKC(hostY, hostW, n5, m2_123, TGT_37, z_201);
        out(c23[!_32], m5)
    )
  |
    ! !_33 <= N2
    in(c21[!_33], (Lhost: tgs, Lkey: key));
    if (Lhost = T) then
      let Qkey: key = Kt
    else
      let Qkey: key = Lkey
  )
|
  ! !_34 <= N2
  in(c16[!_34], (Mhost1: tgs, Mhost2: server, Mkey: key))
)


Applying remove assignments of useless yields

Game 46 is
in(start, ());
new rkC: keyseed;
let pkC: pkey = pkgen2(rkC) in
new rkCs: skeyseed;
let spkC: spkey = spkgen2(rkCs) in
new rkKs: skeyseed;
let spkK: spkey = spkgen2(rkKs) in
new rkCA: skeyseed;
let pkCA: spkey = spkgen2(rkCA) in
new rKt: symkeyseed;
let Kt: key = kgen(rKt) in
let x_53: sblocksize = concat1(C, pkC, spkC) in
new q1: sseed;
let certC: signature = sign2(x_53, sskgen2(rkCA), q1) in
out(c25, (pkC, spkC, spkK, pkCA));
(
  (
    (
      ! !_31 <= N
      in(c1[!_31], hostT: tgs);
      new n2: nonce;
      new tc0: timest;
      let x_76: sblocksize = padno(tc0, n2) in
      new r1: sseed;
      new n1: nonce;
      out(c2[!_31], (C, pkC, spkC, certC, tc0, n2, sign2(x_76, sskgen2(rkCs), r1), C, hostT, n1));
      in(c3[!_31], (m21: bitstring, =C, TGT_38: maxmac, m24: maxmac));
      find @i_133 <= N suchthat defined(tk_96[@i_133], AK_35[@i_133], z_230[@i_133], n5[@i_133], hostW[@i_133], ms4[@i_133], tc1[@i_133], ms3[@i_133], m2_118[@i_133]) && (m21 = m2_118[@i_133]) then
        let hostZ: kas = K in
        let x_74: sblocksize = padno(tc0, n2) in
        find  suchthat defined(tk_96[@i_133], AK_35[@i_133], z_230[@i_133], n5[@i_133], hostW[@i_133], ms4[@i_133], tc1[@i_133], ms3[@i_133]) && ((certC = ms3[@i_133]) && ((tc0 = tc1[@i_133]) && ((!_31 = @i_78[@i_133]) && ((sign2(x_74, sskgen2(rkCs), r1) = ms4[@i_133]) && ((hostT = hostW[@i_133]) && (n1 = n5[@i_133])))))) then
          if defined(tk_96[@i_133], AK_35[@i_133], z_230[@i_133]) && (z_230[@i_133] = m24) then
          event fullCK(hostZ, hostT, n1, m21, TGT_38, m24);
          out(c18[!_31], acceptC1(hostZ, hostT))
        orfind  suchthat defined(z_201[@i_133], n5[@i_133], hostW[@i_133], ms4[@i_133], tc1[@i_133], ms3[@i_133]) && ((certC = ms3[@i_133]) && ((tc0 = tc1[@i_133]) && ((!_31 = @i_78[@i_133]) && ((sign2(x_74, sskgen2(rkCs), r1) = ms4[@i_133]) && ((hostT = hostW[@i_133]) && (n1 = n5[@i_133])))))) then
          if defined(z_201[@i_133]) && (z_201[@i_133] = m24) then
          event fullCK(hostZ, hostT, n1, m21, TGT_38, m24);
          out(c18[!_31], acceptC1(hostZ, hostT))
      orfind @i_132 <= N suchthat defined(z_201[@i_132], AK_35[@i_132], n5[@i_132], hostW[@i_132], ms4[@i_132], tc1[@i_132], ms3[@i_132], m2_123[@i_132]) && (m21 = m2_123[@i_132]) then
        let hostZ: kas = K in
        let x_74: sblocksize = padno(tc0, n2) in
        find  suchthat defined(tk_96[@i_132], AK_35[@i_132], z_230[@i_132], n5[@i_132], hostW[@i_132], ms4[@i_132], tc1[@i_132], ms3[@i_132]) && ((certC = ms3[@i_132]) && ((tc0 = tc1[@i_132]) && ((!_31 = @i_78[@i_132]) && ((sign2(x_74, sskgen2(rkCs), r1) = ms4[@i_132]) && ((hostT = hostW[@i_132]) && (n1 = n5[@i_132])))))) then
          if defined(tk_96[@i_132], AK_35[@i_132], z_230[@i_132]) && (z_230[@i_132] = m24) then
          event fullCK(hostZ, hostT, n1, m21, TGT_38, m24);
          out(c18[!_31], acceptC1(hostZ, hostT))
        orfind  suchthat defined(z_201[@i_132], n5[@i_132], hostW[@i_132], ms4[@i_132], tc1[@i_132], ms3[@i_132]) && ((certC = ms3[@i_132]) && ((tc0 = tc1[@i_132]) && ((!_31 = @i_78[@i_132]) && ((sign2(x_74, sskgen2(rkCs), r1) = ms4[@i_132]) && ((hostT = hostW[@i_132]) && (n1 = n5[@i_132])))))) then
          if defined(z_201[@i_132]) && (z_201[@i_132] = m24) then
          event fullCK(hostZ, hostT, n1, m21, TGT_38, m24);
          out(c18[!_31], acceptC1(hostZ, hostT))
    |
      ! !_32 <= N
      in(c22[!_32], (hostY: client, pkY: pkey, spkY: spkey, ms3: signature, tc1: timest, n4: nonce, ms4: signature, hostV: client, hostW: tgs, n5: nonce));
      if (hostV = hostY) then
      if (((hostY = C) && ((pkY = pkC) && (spkY = spkC))) && check2(concat1(hostY, pkY, spkY), pkCA, ms3)) then
      find @i_78 <= N suchthat defined(n2[@i_78], tc0[@i_78], x_74[@i_78]) && (((tc1 = tc0[@i_78]) && (n4 = n2[@i_78])) && check2(padno(tc1, n4), spkY, ms4)) then
        find j1 <= N2 suchthat defined(Qkey[j1], Lhost[j1]) && (Lhost[j1] = hostW) then
        new s3_92: symkeyseed;
        let AK_35: key = kgen(s3_92) in
        new tk_96: timest;
        new r4_95: symseed;
        let TGT_37: maxmac = encsym(concat5(AK_35, tk_96, hostY), Qkey[j1], r4_95) in
        let x_231: maxenc = concat4(AK_35, n5, tk_96, hostW) in
        new r5_97: symseed;
        new s1_93: symkeyseed;
        let z_230: maxmac = encsym(x_231, kgen2(s1_93), r5_97) in
        new r7_99: seed;
        let m2_118: bitstring = enc2(Z, pkY, r7_99) in
        let m5: bitstring = (m2_118, hostY, TGT_37, z_230) in
        event fullKC(hostY, hostW, n5, m2_118, TGT_37, z_230);
        out(c23[!_32], m5)
      orfind @i_78 <= N suchthat defined(n2[@i_78], tc0[@i_78], x_76[@i_78]) && (((tc1 = tc0[@i_78]) && (n4 = n2[@i_78])) && check2(padno(tc1, n4), spkY, ms4)) then
        find j1 <= N2 suchthat defined(Qkey[j1], Lhost[j1]) && (Lhost[j1] = hostW) then
        new s3_100: symkeyseed;
        let AK_35: key = kgen(s3_100) in
        new r4_103: symseed;
        new tk_104: timest;
        let TGT_37: maxmac = encsym(concat5(AK_35, tk_104, hostY), Qkey[j1], r4_103) in
        let x_202: maxenc = concat4(AK_35, n5, tk_104, hostW) in
        new s1_101: symkeyseed;
        new r5_105: symseed;
        let z_201: maxmac = encsym(x_202, kgen2(s1_101), r5_105) in
        new r7_107: seed;
        let m2_123: bitstring = enc2(Z, pkY, r7_107) in
        let m5: bitstring = (m2_123, hostY, TGT_37, z_201) in
        event fullKC(hostY, hostW, n5, m2_123, TGT_37, z_201);
        out(c23[!_32], m5)
    )
  |
    ! !_33 <= N2
    in(c21[!_33], (Lhost: tgs, Lkey: key));
    if (Lhost = T) then
      let Qkey: key = Kt
    else
      let Qkey: key = Lkey
  )
|
  ! !_34 <= N2
  in(c16[!_34], (Mhost1: tgs, Mhost2: server, Mkey: key))
)


RESULT Proved event fullCK(K, T, N, w, x, y) ==> fullKC(C, T, N, w', z, y) with probability 2. * N / |nonce| + N * Pencctxt(time + time(context for game 42), 1., N) + N * Pencctxt(time + time(context for game 38), 1., N) + N * Pmac(time + time(context for game 30), 1., N) + 0.5 * N * N / |nonce| + N * Pmac(time + time(context for game 26), 1., N) + 3. * 1. / |skeyseed| + 3. * Psigncoll + Psign(time + time(context for game 18), 0) + N * Penc(time + time(context for game 14), N) + Psign(time + time(context for game 9), N) + Psign(time + time(context for game 5), 2. * 1.)

Applying equivalence
equiv ! !_15 <= N2 new r: symkeyseed; ! !_16 <= N new r2: symseed; (x: maxenc) -> encsym(x, kgen2(r), r2)
<=(N2 * Penc(time, N))=>
      ! !_17 <= N2 new r: symkeyseed; ! !_18 <= N new r2: symseed; (x: maxenc) -> encsym2(Z2(x), kgen2(r), r2)
 [Difference of probability N * Penc(time + time(context for game 47), 1.)] yields

Game 48 is
in(start, ());
new rkC: keyseed;
let pkC: pkey = pkgen2(rkC) in
new rkCs: skeyseed;
let spkC: spkey = spkgen2(rkCs) in
new rkKs: skeyseed;
let spkK: spkey = spkgen2(rkKs) in
new rkCA: skeyseed;
let pkCA: spkey = spkgen2(rkCA) in
new rKt: symkeyseed;
let Kt: key = kgen(rKt) in
let x_53: sblocksize = concat1(C, pkC, spkC) in
new q1: sseed;
let certC: signature = sign2(x_53, sskgen2(rkCA), q1) in
out(c25, (pkC, spkC, spkK, pkCA));
(
  (
    (
      ! !_31 <= N
      in(c1[!_31], hostT: tgs);
      new n2: nonce;
      new tc0: timest;
      let x_76: sblocksize = padno(tc0, n2) in
      new r1: sseed;
      new n1: nonce;
      out(c2[!_31], (C, pkC, spkC, certC, tc0, n2, sign2(x_76, sskgen2(rkCs), r1), C, hostT, n1));
      in(c3[!_31], (m21: bitstring, =C, TGT_38: maxmac, m24: maxmac));
      find @i_133 <= N suchthat defined(tk_96[@i_133], AK_35[@i_133], z_230[@i_133], n5[@i_133], hostW[@i_133], ms4[@i_133], tc1[@i_133], ms3[@i_133], m2_118[@i_133]) && (m21 = m2_118[@i_133]) then
        let hostZ: kas = K in
        let x_74: sblocksize = padno(tc0, n2) in
        find  suchthat defined(tk_96[@i_133], AK_35[@i_133], z_230[@i_133], n5[@i_133], hostW[@i_133], ms4[@i_133], tc1[@i_133], ms3[@i_133]) && ((certC = ms3[@i_133]) && ((tc0 = tc1[@i_133]) && ((!_31 = @i_78[@i_133]) && ((sign2(x_74, sskgen2(rkCs), r1) = ms4[@i_133]) && ((hostT = hostW[@i_133]) && (n1 = n5[@i_133])))))) then
          if defined(tk_96[@i_133], AK_35[@i_133], z_230[@i_133]) && (z_230[@i_133] = m24) then
          event fullCK(hostZ, hostT, n1, m21, TGT_38, m24);
          out(c18[!_31], acceptC1(hostZ, hostT))
        orfind  suchthat defined(z_201[@i_133], n5[@i_133], hostW[@i_133], ms4[@i_133], tc1[@i_133], ms3[@i_133]) && ((certC = ms3[@i_133]) && ((tc0 = tc1[@i_133]) && ((!_31 = @i_78[@i_133]) && ((sign2(x_74, sskgen2(rkCs), r1) = ms4[@i_133]) && ((hostT = hostW[@i_133]) && (n1 = n5[@i_133])))))) then
          if defined(z_201[@i_133]) && (z_201[@i_133] = m24) then
          event fullCK(hostZ, hostT, n1, m21, TGT_38, m24);
          out(c18[!_31], acceptC1(hostZ, hostT))
      orfind @i_132 <= N suchthat defined(z_201[@i_132], AK_35[@i_132], n5[@i_132], hostW[@i_132], ms4[@i_132], tc1[@i_132], ms3[@i_132], m2_123[@i_132]) && (m21 = m2_123[@i_132]) then
        let hostZ: kas = K in
        let x_74: sblocksize = padno(tc0, n2) in
        find  suchthat defined(tk_96[@i_132], AK_35[@i_132], z_230[@i_132], n5[@i_132], hostW[@i_132], ms4[@i_132], tc1[@i_132], ms3[@i_132]) && ((certC = ms3[@i_132]) && ((tc0 = tc1[@i_132]) && ((!_31 = @i_78[@i_132]) && ((sign2(x_74, sskgen2(rkCs), r1) = ms4[@i_132]) && ((hostT = hostW[@i_132]) && (n1 = n5[@i_132])))))) then
          if defined(tk_96[@i_132], AK_35[@i_132], z_230[@i_132]) && (z_230[@i_132] = m24) then
          event fullCK(hostZ, hostT, n1, m21, TGT_38, m24);
          out(c18[!_31], acceptC1(hostZ, hostT))
        orfind  suchthat defined(z_201[@i_132], n5[@i_132], hostW[@i_132], ms4[@i_132], tc1[@i_132], ms3[@i_132]) && ((certC = ms3[@i_132]) && ((tc0 = tc1[@i_132]) && ((!_31 = @i_78[@i_132]) && ((sign2(x_74, sskgen2(rkCs), r1) = ms4[@i_132]) && ((hostT = hostW[@i_132]) && (n1 = n5[@i_132])))))) then
          if defined(z_201[@i_132]) && (z_201[@i_132] = m24) then
          event fullCK(hostZ, hostT, n1, m21, TGT_38, m24);
          out(c18[!_31], acceptC1(hostZ, hostT))
    |
      ! !_32 <= N
      in(c22[!_32], (hostY: client, pkY: pkey, spkY: spkey, ms3: signature, tc1: timest, n4: nonce, ms4: signature, hostV: client, hostW: tgs, n5: nonce));
      if (hostV = hostY) then
      if (((hostY = C) && ((pkY = pkC) && (spkY = spkC))) && check2(concat1(hostY, pkY, spkY), pkCA, ms3)) then
      find @i_78 <= N suchthat defined(n2[@i_78], tc0[@i_78], x_74[@i_78]) && (((tc1 = tc0[@i_78]) && (n4 = n2[@i_78])) && check2(padno(tc1, n4), spkY, ms4)) then
        find j1 <= N2 suchthat defined(Qkey[j1], Lhost[j1]) && (Lhost[j1] = hostW) then
        new s3_92: symkeyseed;
        let AK_35: key = kgen(s3_92) in
        new tk_96: timest;
        new r4_95: symseed;
        let TGT_37: maxmac = encsym(concat5(AK_35, tk_96, hostY), Qkey[j1], r4_95) in
        let x_231: maxenc = concat4(AK_35, n5, tk_96, hostW) in
        new r5_97: symseed;
        new s1_93: symkeyseed;
        let z_230: maxmac = encsym(x_231, kgen2(s1_93), r5_97) in
        new r7_99: seed;
        let m2_118: bitstring = enc2(Z, pkY, r7_99) in
        let m5: bitstring = (m2_118, hostY, TGT_37, z_230) in
        event fullKC(hostY, hostW, n5, m2_118, TGT_37, z_230);
        out(c23[!_32], m5)
      orfind @i_78 <= N suchthat defined(n2[@i_78], tc0[@i_78], x_76[@i_78]) && (((tc1 = tc0[@i_78]) && (n4 = n2[@i_78])) && check2(padno(tc1, n4), spkY, ms4)) then
        find j1 <= N2 suchthat defined(Qkey[j1], Lhost[j1]) && (Lhost[j1] = hostW) then
        new s3_100: symkeyseed;
        let AK_35: key = kgen(s3_100) in
        new r4_103: symseed;
        new tk_104: timest;
        let TGT_37: maxmac = encsym(concat5(AK_35, tk_104, hostY), Qkey[j1], r4_103) in
        let x_202: maxenc = concat4(AK_35, n5, tk_104, hostW) in
        new s1_101: symkeyseed;
        new r5_105: symseed;
        let z_201: maxmac = encsym2(Z2(x_202), kgen2(s1_101), r5_105) in
        new r7_107: seed;
        let m2_123: bitstring = enc2(Z, pkY, r7_107) in
        let m5: bitstring = (m2_123, hostY, TGT_37, z_201) in
        event fullKC(hostY, hostW, n5, m2_123, TGT_37, z_201);
        out(c23[!_32], m5)
    )
  |
    ! !_33 <= N2
    in(c21[!_33], (Lhost: tgs, Lkey: key));
    if (Lhost = T) then
      let Qkey: key = Kt
    else
      let Qkey: key = Lkey
  )
|
  ! !_34 <= N2
  in(c16[!_34], (Mhost1: tgs, Mhost2: server, Mkey: key))
)


Applying simplify yields

Game 49 is
in(start, ());
new rkC: keyseed;
let pkC: pkey = pkgen2(rkC) in
new rkCs: skeyseed;
let spkC: spkey = spkgen2(rkCs) in
new rkKs: skeyseed;
let spkK: spkey = spkgen2(rkKs) in
new rkCA: skeyseed;
let pkCA: spkey = spkgen2(rkCA) in
new rKt: symkeyseed;
let Kt: key = kgen(rKt) in
let x_53: sblocksize = concat1(C, pkC, spkC) in
new q1: sseed;
let certC: signature = sign2(x_53, sskgen2(rkCA), q1) in
out(c25, (pkC, spkC, spkK, pkCA));
(
  (
    (
      ! !_31 <= N
      in(c1[!_31], hostT: tgs);
      new n2: nonce;
      new tc0: timest;
      let x_76: sblocksize = padno(tc0, n2) in
      new r1: sseed;
      new n1: nonce;
      out(c2[!_31], (C, pkC, spkC, certC, tc0, n2, sign2(x_76, sskgen2(rkCs), r1), C, hostT, n1));
      in(c3[!_31], (m21: bitstring, =C, TGT_38: maxmac, m24: maxmac));
      find @i_133 <= N suchthat defined(z_230[@i_133], n5[@i_133], hostW[@i_133], ms4[@i_133], tc1[@i_133], ms3[@i_133], m2_118[@i_133]) && (m21 = m2_118[@i_133]) then
        let hostZ: kas = K in
        let x_74: sblocksize = padno(tc0, n2) in
        find  suchthat defined(z_230[@i_133], n5[@i_133], hostW[@i_133], ms4[@i_133], tc1[@i_133], ms3[@i_133]) && ((certC = ms3[@i_133]) && ((tc0 = tc1[@i_133]) && ((!_31 = @i_78[@i_133]) && ((sign2(x_74, sskgen2(rkCs), r1) = ms4[@i_133]) && ((hostT = hostW[@i_133]) && (n1 = n5[@i_133])))))) then
          if defined(z_230[@i_133]) && (z_230[@i_133] = m24) then
          event fullCK(hostZ, hostT, n1, m21, TGT_38, m24);
          out(c18[!_31], acceptC1(hostZ, hostT))
        orfind  suchthat defined(z_201[@i_133], n5[@i_133], hostW[@i_133], ms4[@i_133], tc1[@i_133], ms3[@i_133]) && ((certC = ms3[@i_133]) && ((tc0 = tc1[@i_133]) && ((!_31 = @i_78[@i_133]) && ((sign2(x_74, sskgen2(rkCs), r1) = ms4[@i_133]) && ((hostT = hostW[@i_133]) && (n1 = n5[@i_133])))))) then
          if defined(z_201[@i_133]) && (z_201[@i_133] = m24) then
          event fullCK(hostZ, hostT, n1, m21, TGT_38, m24);
          out(c18[!_31], acceptC1(hostZ, hostT))
      orfind @i_132 <= N suchthat defined(z_201[@i_132], n5[@i_132], hostW[@i_132], ms4[@i_132], tc1[@i_132], ms3[@i_132], m2_123[@i_132]) && (m21 = m2_123[@i_132]) then
        let hostZ: kas = K in
        let x_74: sblocksize = padno(tc0, n2) in
        find  suchthat defined(z_230[@i_132], n5[@i_132], hostW[@i_132], ms4[@i_132], tc1[@i_132], ms3[@i_132]) && ((certC = ms3[@i_132]) && ((tc0 = tc1[@i_132]) && ((!_31 = @i_78[@i_132]) && ((sign2(x_74, sskgen2(rkCs), r1) = ms4[@i_132]) && ((hostT = hostW[@i_132]) && (n1 = n5[@i_132])))))) then
          if defined(z_230[@i_132]) && (z_230[@i_132] = m24) then
          event fullCK(hostZ, hostT, n1, m21, TGT_38, m24);
          out(c18[!_31], acceptC1(hostZ, hostT))
        orfind  suchthat defined(z_201[@i_132], n5[@i_132], hostW[@i_132], ms4[@i_132], tc1[@i_132], ms3[@i_132]) && ((certC = ms3[@i_132]) && ((tc0 = tc1[@i_132]) && ((!_31 = @i_78[@i_132]) && ((sign2(x_74, sskgen2(rkCs), r1) = ms4[@i_132]) && ((hostT = hostW[@i_132]) && (n1 = n5[@i_132])))))) then
          if defined(z_201[@i_132]) && (z_201[@i_132] = m24) then
          event fullCK(hostZ, hostT, n1, m21, TGT_38, m24);
          out(c18[!_31], acceptC1(hostZ, hostT))
    |
      ! !_32 <= N
      in(c22[!_32], (hostY: client, pkY: pkey, spkY: spkey, ms3: signature, tc1: timest, n4: nonce, ms4: signature, hostV: client, hostW: tgs, n5: nonce));
      if (hostV = hostY) then
      if (((hostY = C) && ((pkY = pkC) && (spkY = spkC))) && check2(concat1(hostY, pkY, spkY), pkCA, ms3)) then
      find @i_78 <= N suchthat defined(n2[@i_78], tc0[@i_78], x_74[@i_78]) && (((tc1 = tc0[@i_78]) && (n4 = n2[@i_78])) && check2(padno(tc1, n4), spkY, ms4)) then
        find j1 <= N2 suchthat defined(Qkey[j1], Lhost[j1]) && (Lhost[j1] = hostW) then
        new s3_92: symkeyseed;
        let AK_35: key = kgen(s3_92) in
        new tk_96: timest;
        new r4_95: symseed;
        let TGT_37: maxmac = encsym(concat5(AK_35, tk_96, hostY), Qkey[j1], r4_95) in
        let x_231: maxenc = concat4(AK_35, n5, tk_96, hostW) in
        new r5_97: symseed;
        new s1_93: symkeyseed;
        let z_230: maxmac = encsym(x_231, kgen2(s1_93), r5_97) in
        new r7_99: seed;
        let m2_118: bitstring = enc2(Z, pkY, r7_99) in
        let m5: bitstring = (m2_118, hostY, TGT_37, z_230) in
        event fullKC(hostY, hostW, n5, m2_118, TGT_37, z_230);
        out(c23[!_32], m5)
      orfind @i_78 <= N suchthat defined(n2[@i_78], tc0[@i_78], x_76[@i_78]) && (((tc1 = tc0[@i_78]) && (n4 = n2[@i_78])) && check2(padno(tc1, n4), spkY, ms4)) then
        find j1 <= N2 suchthat defined(Qkey[j1], Lhost[j1]) && (Lhost[j1] = hostW) then
        new s3_100: symkeyseed;
        let AK_35: key = kgen(s3_100) in
        new r4_103: symseed;
        new tk_104: timest;
        let TGT_37: maxmac = encsym(concat5(AK_35, tk_104, hostY), Qkey[j1], r4_103) in
        let x_202: maxenc = concat4(AK_35, n5, tk_104, hostW) in
        new s1_101: symkeyseed;
        new r5_105: symseed;
        let z_201: maxmac = encsym2(Zconcat4, kgen2(s1_101), r5_105) in
        new r7_107: seed;
        let m2_123: bitstring = enc2(Z, pkY, r7_107) in
        let m5: bitstring = (m2_123, hostY, TGT_37, z_201) in
        event fullKC(hostY, hostW, n5, m2_123, TGT_37, z_201);
        out(c23[!_32], m5)
    )
  |
    ! !_33 <= N2
    in(c21[!_33], (Lhost: tgs, Lkey: key));
    if (Lhost = T) then
      let Qkey: key = Kt
    else
      let Qkey: key = Lkey
  )
|
  ! !_34 <= N2
  in(c16[!_34], (Mhost1: tgs, Mhost2: server, Mkey: key))
)


Applying move new all binders yields

Game 50 is
in(start, ());
new rkC: keyseed;
let pkC: pkey = pkgen2(rkC) in
new rkCs: skeyseed;
let spkC: spkey = spkgen2(rkCs) in
new rkKs: skeyseed;
let spkK: spkey = spkgen2(rkKs) in
new rkCA: skeyseed;
let pkCA: spkey = spkgen2(rkCA) in
new rKt: symkeyseed;
let Kt: key = kgen(rKt) in
let x_53: sblocksize = concat1(C, pkC, spkC) in
new q1: sseed;
let certC: signature = sign2(x_53, sskgen2(rkCA), q1) in
out(c25, (pkC, spkC, spkK, pkCA));
(
  (
    (
      ! !_31 <= N
      in(c1[!_31], hostT: tgs);
      new n2: nonce;
      new tc0: timest;
      let x_76: sblocksize = padno(tc0, n2) in
      new n1: nonce;
      new r1: sseed;
      out(c2[!_31], (C, pkC, spkC, certC, tc0, n2, sign2(x_76, sskgen2(rkCs), r1), C, hostT, n1));
      in(c3[!_31], (m21: bitstring, =C, TGT_38: maxmac, m24: maxmac));
      find @i_133 <= N suchthat defined(z_230[@i_133], n5[@i_133], hostW[@i_133], ms4[@i_133], tc1[@i_133], ms3[@i_133], m2_118[@i_133]) && (m21 = m2_118[@i_133]) then
        let hostZ: kas = K in
        let x_74: sblocksize = padno(tc0, n2) in
        find  suchthat defined(z_230[@i_133], n5[@i_133], hostW[@i_133], ms4[@i_133], tc1[@i_133], ms3[@i_133]) && ((certC = ms3[@i_133]) && ((tc0 = tc1[@i_133]) && ((!_31 = @i_78[@i_133]) && ((sign2(x_74, sskgen2(rkCs), r1) = ms4[@i_133]) && ((hostT = hostW[@i_133]) && (n1 = n5[@i_133])))))) then
          if defined(z_230[@i_133]) && (z_230[@i_133] = m24) then
          event fullCK(hostZ, hostT, n1, m21, TGT_38, m24);
          out(c18[!_31], acceptC1(hostZ, hostT))
        orfind  suchthat defined(z_201[@i_133], n5[@i_133], hostW[@i_133], ms4[@i_133], tc1[@i_133], ms3[@i_133]) && ((certC = ms3[@i_133]) && ((tc0 = tc1[@i_133]) && ((!_31 = @i_78[@i_133]) && ((sign2(x_74, sskgen2(rkCs), r1) = ms4[@i_133]) && ((hostT = hostW[@i_133]) && (n1 = n5[@i_133])))))) then
          if defined(z_201[@i_133]) && (z_201[@i_133] = m24) then
          event fullCK(hostZ, hostT, n1, m21, TGT_38, m24);
          out(c18[!_31], acceptC1(hostZ, hostT))
      orfind @i_132 <= N suchthat defined(z_201[@i_132], n5[@i_132], hostW[@i_132], ms4[@i_132], tc1[@i_132], ms3[@i_132], m2_123[@i_132]) && (m21 = m2_123[@i_132]) then
        let hostZ: kas = K in
        let x_74: sblocksize = padno(tc0, n2) in
        find  suchthat defined(z_230[@i_132], n5[@i_132], hostW[@i_132], ms4[@i_132], tc1[@i_132], ms3[@i_132]) && ((certC = ms3[@i_132]) && ((tc0 = tc1[@i_132]) && ((!_31 = @i_78[@i_132]) && ((sign2(x_74, sskgen2(rkCs), r1) = ms4[@i_132]) && ((hostT = hostW[@i_132]) && (n1 = n5[@i_132])))))) then
          if defined(z_230[@i_132]) && (z_230[@i_132] = m24) then
          event fullCK(hostZ, hostT, n1, m21, TGT_38, m24);
          out(c18[!_31], acceptC1(hostZ, hostT))
        orfind  suchthat defined(z_201[@i_132], n5[@i_132], hostW[@i_132], ms4[@i_132], tc1[@i_132], ms3[@i_132]) && ((certC = ms3[@i_132]) && ((tc0 = tc1[@i_132]) && ((!_31 = @i_78[@i_132]) && ((sign2(x_74, sskgen2(rkCs), r1) = ms4[@i_132]) && ((hostT = hostW[@i_132]) && (n1 = n5[@i_132])))))) then
          if defined(z_201[@i_132]) && (z_201[@i_132] = m24) then
          event fullCK(hostZ, hostT, n1, m21, TGT_38, m24);
          out(c18[!_31], acceptC1(hostZ, hostT))
    |
      ! !_32 <= N
      in(c22[!_32], (hostY: client, pkY: pkey, spkY: spkey, ms3: signature, tc1: timest, n4: nonce, ms4: signature, hostV: client, hostW: tgs, n5: nonce));
      if (hostV = hostY) then
      if (((hostY = C) && ((pkY = pkC) && (spkY = spkC))) && check2(concat1(hostY, pkY, spkY), pkCA, ms3)) then
      find @i_78 <= N suchthat defined(n2[@i_78], tc0[@i_78], x_74[@i_78]) && (((tc1 = tc0[@i_78]) && (n4 = n2[@i_78])) && check2(padno(tc1, n4), spkY, ms4)) then
        find j1 <= N2 suchthat defined(Qkey[j1], Lhost[j1]) && (Lhost[j1] = hostW) then
        new s3_92: symkeyseed;
        let AK_35: key = kgen(s3_92) in
        new r4_95: symseed;
        new tk_96: timest;
        let TGT_37: maxmac = encsym(concat5(AK_35, tk_96, hostY), Qkey[j1], r4_95) in
        let x_231: maxenc = concat4(AK_35, n5, tk_96, hostW) in
        new s1_93: symkeyseed;
        new r5_97: symseed;
        let z_230: maxmac = encsym(x_231, kgen2(s1_93), r5_97) in
        new r7_99: seed;
        let m2_118: bitstring = enc2(Z, pkY, r7_99) in
        let m5: bitstring = (m2_118, hostY, TGT_37, z_230) in
        event fullKC(hostY, hostW, n5, m2_118, TGT_37, z_230);
        out(c23[!_32], m5)
      orfind @i_78 <= N suchthat defined(n2[@i_78], tc0[@i_78], x_76[@i_78]) && (((tc1 = tc0[@i_78]) && (n4 = n2[@i_78])) && check2(padno(tc1, n4), spkY, ms4)) then
        find j1 <= N2 suchthat defined(Qkey[j1], Lhost[j1]) && (Lhost[j1] = hostW) then
        new s3_100: symkeyseed;
        let AK_35: key = kgen(s3_100) in
        new tk_104: timest;
        new r4_103: symseed;
        let TGT_37: maxmac = encsym(concat5(AK_35, tk_104, hostY), Qkey[j1], r4_103) in
        let x_202: maxenc = concat4(AK_35, n5, tk_104, hostW) in
        new r5_105: symseed;
        new s1_101: symkeyseed;
        let z_201: maxmac = encsym2(Zconcat4, kgen2(s1_101), r5_105) in
        new r7_107: seed;
        let m2_123: bitstring = enc2(Z, pkY, r7_107) in
        let m5: bitstring = (m2_123, hostY, TGT_37, z_201) in
        event fullKC(hostY, hostW, n5, m2_123, TGT_37, z_201);
        out(c23[!_32], m5)
    )
  |
    ! !_33 <= N2
    in(c21[!_33], (Lhost: tgs, Lkey: key));
    if (Lhost = T) then
      let Qkey: key = Kt
    else
      let Qkey: key = Lkey
  )
|
  ! !_34 <= N2
  in(c16[!_34], (Mhost1: tgs, Mhost2: server, Mkey: key))
)


Applying remove assignments of useless yields

Game 51 is
in(start, ());
new rkC: keyseed;
let pkC: pkey = pkgen2(rkC) in
new rkCs: skeyseed;
let spkC: spkey = spkgen2(rkCs) in
new rkKs: skeyseed;
let spkK: spkey = spkgen2(rkKs) in
new rkCA: skeyseed;
let pkCA: spkey = spkgen2(rkCA) in
new rKt: symkeyseed;
let Kt: key = kgen(rKt) in
let x_53: sblocksize = concat1(C, pkC, spkC) in
new q1: sseed;
let certC: signature = sign2(x_53, sskgen2(rkCA), q1) in
out(c25, (pkC, spkC, spkK, pkCA));
(
  (
    (
      ! !_31 <= N
      in(c1[!_31], hostT: tgs);
      new n2: nonce;
      new tc0: timest;
      let x_76: sblocksize = padno(tc0, n2) in
      new n1: nonce;
      new r1: sseed;
      out(c2[!_31], (C, pkC, spkC, certC, tc0, n2, sign2(x_76, sskgen2(rkCs), r1), C, hostT, n1));
      in(c3[!_31], (m21: bitstring, =C, TGT_38: maxmac, m24: maxmac));
      find @i_133 <= N suchthat defined(z_230[@i_133], n5[@i_133], hostW[@i_133], ms4[@i_133], tc1[@i_133], ms3[@i_133], m2_118[@i_133]) && (m21 = m2_118[@i_133]) then
        let hostZ: kas = K in
        let x_74: sblocksize = padno(tc0, n2) in
        find  suchthat defined(z_230[@i_133], n5[@i_133], hostW[@i_133], ms4[@i_133], tc1[@i_133], ms3[@i_133]) && ((certC = ms3[@i_133]) && ((tc0 = tc1[@i_133]) && ((!_31 = @i_78[@i_133]) && ((sign2(x_74, sskgen2(rkCs), r1) = ms4[@i_133]) && ((hostT = hostW[@i_133]) && (n1 = n5[@i_133])))))) then
          if defined(z_230[@i_133]) && (z_230[@i_133] = m24) then
          event fullCK(hostZ, hostT, n1, m21, TGT_38, m24);
          out(c18[!_31], acceptC1(hostZ, hostT))
        orfind  suchthat defined(z_201[@i_133], n5[@i_133], hostW[@i_133], ms4[@i_133], tc1[@i_133], ms3[@i_133]) && ((certC = ms3[@i_133]) && ((tc0 = tc1[@i_133]) && ((!_31 = @i_78[@i_133]) && ((sign2(x_74, sskgen2(rkCs), r1) = ms4[@i_133]) && ((hostT = hostW[@i_133]) && (n1 = n5[@i_133])))))) then
          if defined(z_201[@i_133]) && (z_201[@i_133] = m24) then
          event fullCK(hostZ, hostT, n1, m21, TGT_38, m24);
          out(c18[!_31], acceptC1(hostZ, hostT))
      orfind @i_132 <= N suchthat defined(z_201[@i_132], n5[@i_132], hostW[@i_132], ms4[@i_132], tc1[@i_132], ms3[@i_132], m2_123[@i_132]) && (m21 = m2_123[@i_132]) then
        let hostZ: kas = K in
        let x_74: sblocksize = padno(tc0, n2) in
        find  suchthat defined(z_230[@i_132], n5[@i_132], hostW[@i_132], ms4[@i_132], tc1[@i_132], ms3[@i_132]) && ((certC = ms3[@i_132]) && ((tc0 = tc1[@i_132]) && ((!_31 = @i_78[@i_132]) && ((sign2(x_74, sskgen2(rkCs), r1) = ms4[@i_132]) && ((hostT = hostW[@i_132]) && (n1 = n5[@i_132])))))) then
          if defined(z_230[@i_132]) && (z_230[@i_132] = m24) then
          event fullCK(hostZ, hostT, n1, m21, TGT_38, m24);
          out(c18[!_31], acceptC1(hostZ, hostT))
        orfind  suchthat defined(z_201[@i_132], n5[@i_132], hostW[@i_132], ms4[@i_132], tc1[@i_132], ms3[@i_132]) && ((certC = ms3[@i_132]) && ((tc0 = tc1[@i_132]) && ((!_31 = @i_78[@i_132]) && ((sign2(x_74, sskgen2(rkCs), r1) = ms4[@i_132]) && ((hostT = hostW[@i_132]) && (n1 = n5[@i_132])))))) then
          if defined(z_201[@i_132]) && (z_201[@i_132] = m24) then
          event fullCK(hostZ, hostT, n1, m21, TGT_38, m24);
          out(c18[!_31], acceptC1(hostZ, hostT))
    |
      ! !_32 <= N
      in(c22[!_32], (hostY: client, pkY: pkey, spkY: spkey, ms3: signature, tc1: timest, n4: nonce, ms4: signature, hostV: client, hostW: tgs, n5: nonce));
      if (hostV = hostY) then
      if (((hostY = C) && ((pkY = pkC) && (spkY = spkC))) && check2(concat1(hostY, pkY, spkY), pkCA, ms3)) then
      find @i_78 <= N suchthat defined(n2[@i_78], tc0[@i_78], x_74[@i_78]) && (((tc1 = tc0[@i_78]) && (n4 = n2[@i_78])) && check2(padno(tc1, n4), spkY, ms4)) then
        find j1 <= N2 suchthat defined(Qkey[j1], Lhost[j1]) && (Lhost[j1] = hostW) then
        new s3_92: symkeyseed;
        let AK_35: key = kgen(s3_92) in
        new r4_95: symseed;
        new tk_96: timest;
        let TGT_37: maxmac = encsym(concat5(AK_35, tk_96, hostY), Qkey[j1], r4_95) in
        let x_231: maxenc = concat4(AK_35, n5, tk_96, hostW) in
        new s1_93: symkeyseed;
        new r5_97: symseed;
        let z_230: maxmac = encsym(x_231, kgen2(s1_93), r5_97) in
        new r7_99: seed;
        let m2_118: bitstring = enc2(Z, pkY, r7_99) in
        let m5: bitstring = (m2_118, hostY, TGT_37, z_230) in
        event fullKC(hostY, hostW, n5, m2_118, TGT_37, z_230);
        out(c23[!_32], m5)
      orfind @i_78 <= N suchthat defined(n2[@i_78], tc0[@i_78], x_76[@i_78]) && (((tc1 = tc0[@i_78]) && (n4 = n2[@i_78])) && check2(padno(tc1, n4), spkY, ms4)) then
        find j1 <= N2 suchthat defined(Qkey[j1], Lhost[j1]) && (Lhost[j1] = hostW) then
        new s3_100: symkeyseed;
        let AK_35: key = kgen(s3_100) in
        new tk_104: timest;
        new r4_103: symseed;
        let TGT_37: maxmac = encsym(concat5(AK_35, tk_104, hostY), Qkey[j1], r4_103) in
        new r5_105: symseed;
        new s1_101: symkeyseed;
        let z_201: maxmac = encsym2(Zconcat4, kgen2(s1_101), r5_105) in
        new r7_107: seed;
        let m2_123: bitstring = enc2(Z, pkY, r7_107) in
        let m5: bitstring = (m2_123, hostY, TGT_37, z_201) in
        event fullKC(hostY, hostW, n5, m2_123, TGT_37, z_201);
        out(c23[!_32], m5)
    )
  |
    ! !_33 <= N2
    in(c21[!_33], (Lhost: tgs, Lkey: key));
    if (Lhost = T) then
      let Qkey: key = Kt
    else
      let Qkey: key = Lkey
  )
|
  ! !_34 <= N2
  in(c16[!_34], (Mhost1: tgs, Mhost2: server, Mkey: key))
)


Applying equivalence
equiv ! !_15 <= N2 new r: symkeyseed; ! !_16 <= N new r2: symseed; (x: maxenc) -> encsym(x, kgen2(r), r2)
<=(N2 * Penc(time, N))=>
      ! !_17 <= N2 new r: symkeyseed; ! !_18 <= N new r2: symseed; (x: maxenc) -> encsym2(Z2(x), kgen2(r), r2)
 [Difference of probability N * Penc(time + time(context for game 51), 1.)] yields

Game 52 is
in(start, ());
new rkC: keyseed;
let pkC: pkey = pkgen2(rkC) in
new rkCs: skeyseed;
let spkC: spkey = spkgen2(rkCs) in
new rkKs: skeyseed;
let spkK: spkey = spkgen2(rkKs) in
new rkCA: skeyseed;
let pkCA: spkey = spkgen2(rkCA) in
new rKt: symkeyseed;
let Kt: key = kgen(rKt) in
let x_53: sblocksize = concat1(C, pkC, spkC) in
new q1: sseed;
let certC: signature = sign2(x_53, sskgen2(rkCA), q1) in
out(c25, (pkC, spkC, spkK, pkCA));
(
  (
    (
      ! !_31 <= N
      in(c1[!_31], hostT: tgs);
      new n2: nonce;
      new tc0: timest;
      let x_76: sblocksize = padno(tc0, n2) in
      new n1: nonce;
      new r1: sseed;
      out(c2[!_31], (C, pkC, spkC, certC, tc0, n2, sign2(x_76, sskgen2(rkCs), r1), C, hostT, n1));
      in(c3[!_31], (m21: bitstring, =C, TGT_38: maxmac, m24: maxmac));
      find @i_133 <= N suchthat defined(z_230[@i_133], n5[@i_133], hostW[@i_133], ms4[@i_133], tc1[@i_133], ms3[@i_133], m2_118[@i_133]) && (m21 = m2_118[@i_133]) then
        let hostZ: kas = K in
        let x_74: sblocksize = padno(tc0, n2) in
        find  suchthat defined(z_230[@i_133], n5[@i_133], hostW[@i_133], ms4[@i_133], tc1[@i_133], ms3[@i_133]) && ((certC = ms3[@i_133]) && ((tc0 = tc1[@i_133]) && ((!_31 = @i_78[@i_133]) && ((sign2(x_74, sskgen2(rkCs), r1) = ms4[@i_133]) && ((hostT = hostW[@i_133]) && (n1 = n5[@i_133])))))) then
          if defined(z_230[@i_133]) && (z_230[@i_133] = m24) then
          event fullCK(hostZ, hostT, n1, m21, TGT_38, m24);
          out(c18[!_31], acceptC1(hostZ, hostT))
        orfind  suchthat defined(z_201[@i_133], n5[@i_133], hostW[@i_133], ms4[@i_133], tc1[@i_133], ms3[@i_133]) && ((certC = ms3[@i_133]) && ((tc0 = tc1[@i_133]) && ((!_31 = @i_78[@i_133]) && ((sign2(x_74, sskgen2(rkCs), r1) = ms4[@i_133]) && ((hostT = hostW[@i_133]) && (n1 = n5[@i_133])))))) then
          if defined(z_201[@i_133]) && (z_201[@i_133] = m24) then
          event fullCK(hostZ, hostT, n1, m21, TGT_38, m24);
          out(c18[!_31], acceptC1(hostZ, hostT))
      orfind @i_132 <= N suchthat defined(z_201[@i_132], n5[@i_132], hostW[@i_132], ms4[@i_132], tc1[@i_132], ms3[@i_132], m2_123[@i_132]) && (m21 = m2_123[@i_132]) then
        let hostZ: kas = K in
        let x_74: sblocksize = padno(tc0, n2) in
        find  suchthat defined(z_230[@i_132], n5[@i_132], hostW[@i_132], ms4[@i_132], tc1[@i_132], ms3[@i_132]) && ((certC = ms3[@i_132]) && ((tc0 = tc1[@i_132]) && ((!_31 = @i_78[@i_132]) && ((sign2(x_74, sskgen2(rkCs), r1) = ms4[@i_132]) && ((hostT = hostW[@i_132]) && (n1 = n5[@i_132])))))) then
          if defined(z_230[@i_132]) && (z_230[@i_132] = m24) then
          event fullCK(hostZ, hostT, n1, m21, TGT_38, m24);
          out(c18[!_31], acceptC1(hostZ, hostT))
        orfind  suchthat defined(z_201[@i_132], n5[@i_132], hostW[@i_132], ms4[@i_132], tc1[@i_132], ms3[@i_132]) && ((certC = ms3[@i_132]) && ((tc0 = tc1[@i_132]) && ((!_31 = @i_78[@i_132]) && ((sign2(x_74, sskgen2(rkCs), r1) = ms4[@i_132]) && ((hostT = hostW[@i_132]) && (n1 = n5[@i_132])))))) then
          if defined(z_201[@i_132]) && (z_201[@i_132] = m24) then
          event fullCK(hostZ, hostT, n1, m21, TGT_38, m24);
          out(c18[!_31], acceptC1(hostZ, hostT))
    |
      ! !_32 <= N
      in(c22[!_32], (hostY: client, pkY: pkey, spkY: spkey, ms3: signature, tc1: timest, n4: nonce, ms4: signature, hostV: client, hostW: tgs, n5: nonce));
      if (hostV = hostY) then
      if (((hostY = C) && ((pkY = pkC) && (spkY = spkC))) && check2(concat1(hostY, pkY, spkY), pkCA, ms3)) then
      find @i_78 <= N suchthat defined(n2[@i_78], tc0[@i_78], x_74[@i_78]) && (((tc1 = tc0[@i_78]) && (n4 = n2[@i_78])) && check2(padno(tc1, n4), spkY, ms4)) then
        find j1 <= N2 suchthat defined(Qkey[j1], Lhost[j1]) && (Lhost[j1] = hostW) then
        new s3_92: symkeyseed;
        let AK_35: key = kgen(s3_92) in
        new r4_95: symseed;
        new tk_96: timest;
        let TGT_37: maxmac = encsym(concat5(AK_35, tk_96, hostY), Qkey[j1], r4_95) in
        let x_231: maxenc = concat4(AK_35, n5, tk_96, hostW) in
        new s1_93: symkeyseed;
        new r5_97: symseed;
        let z_230: maxmac = encsym2(Z2(x_231), kgen2(s1_93), r5_97) in
        new r7_99: seed;
        let m2_118: bitstring = enc2(Z, pkY, r7_99) in
        let m5: bitstring = (m2_118, hostY, TGT_37, z_230) in
        event fullKC(hostY, hostW, n5, m2_118, TGT_37, z_230);
        out(c23[!_32], m5)
      orfind @i_78 <= N suchthat defined(n2[@i_78], tc0[@i_78], x_76[@i_78]) && (((tc1 = tc0[@i_78]) && (n4 = n2[@i_78])) && check2(padno(tc1, n4), spkY, ms4)) then
        find j1 <= N2 suchthat defined(Qkey[j1], Lhost[j1]) && (Lhost[j1] = hostW) then
        new s3_100: symkeyseed;
        let AK_35: key = kgen(s3_100) in
        new tk_104: timest;
        new r4_103: symseed;
        let TGT_37: maxmac = encsym(concat5(AK_35, tk_104, hostY), Qkey[j1], r4_103) in
        new r5_105: symseed;
        new s1_101: symkeyseed;
        let z_201: maxmac = encsym2(Zconcat4, kgen2(s1_101), r5_105) in
        new r7_107: seed;
        let m2_123: bitstring = enc2(Z, pkY, r7_107) in
        let m5: bitstring = (m2_123, hostY, TGT_37, z_201) in
        event fullKC(hostY, hostW, n5, m2_123, TGT_37, z_201);
        out(c23[!_32], m5)
    )
  |
    ! !_33 <= N2
    in(c21[!_33], (Lhost: tgs, Lkey: key));
    if (Lhost = T) then
      let Qkey: key = Kt
    else
      let Qkey: key = Lkey
  )
|
  ! !_34 <= N2
  in(c16[!_34], (Mhost1: tgs, Mhost2: server, Mkey: key))
)


Applying simplify yields

Game 53 is
in(start, ());
new rkC: keyseed;
let pkC: pkey = pkgen2(rkC) in
new rkCs: skeyseed;
let spkC: spkey = spkgen2(rkCs) in
new rkKs: skeyseed;
let spkK: spkey = spkgen2(rkKs) in
new rkCA: skeyseed;
let pkCA: spkey = spkgen2(rkCA) in
new rKt: symkeyseed;
let Kt: key = kgen(rKt) in
let x_53: sblocksize = concat1(C, pkC, spkC) in
new q1: sseed;
let certC: signature = sign2(x_53, sskgen2(rkCA), q1) in
out(c25, (pkC, spkC, spkK, pkCA));
(
  (
    (
      ! !_31 <= N
      in(c1[!_31], hostT: tgs);
      new n2: nonce;
      new tc0: timest;
      let x_76: sblocksize = padno(tc0, n2) in
      new n1: nonce;
      new r1: sseed;
      out(c2[!_31], (C, pkC, spkC, certC, tc0, n2, sign2(x_76, sskgen2(rkCs), r1), C, hostT, n1));
      in(c3[!_31], (m21: bitstring, =C, TGT_38: maxmac, m24: maxmac));
      find @i_133 <= N suchthat defined(z_230[@i_133], n5[@i_133], hostW[@i_133], ms4[@i_133], tc1[@i_133], ms3[@i_133], m2_118[@i_133]) && (m21 = m2_118[@i_133]) then
        let hostZ: kas = K in
        let x_74: sblocksize = padno(tc0, n2) in
        find  suchthat defined(z_230[@i_133], n5[@i_133], hostW[@i_133], ms4[@i_133], tc1[@i_133], ms3[@i_133]) && ((certC = ms3[@i_133]) && ((tc0 = tc1[@i_133]) && ((!_31 = @i_78[@i_133]) && ((sign2(x_74, sskgen2(rkCs), r1) = ms4[@i_133]) && ((hostT = hostW[@i_133]) && (n1 = n5[@i_133])))))) then
          if defined(z_230[@i_133]) && (z_230[@i_133] = m24) then
          event fullCK(hostZ, hostT, n1, m21, TGT_38, m24);
          out(c18[!_31], acceptC1(hostZ, hostT))
        orfind  suchthat defined(z_201[@i_133], n5[@i_133], hostW[@i_133], ms4[@i_133], tc1[@i_133], ms3[@i_133]) && ((certC = ms3[@i_133]) && ((tc0 = tc1[@i_133]) && ((!_31 = @i_78[@i_133]) && ((sign2(x_74, sskgen2(rkCs), r1) = ms4[@i_133]) && ((hostT = hostW[@i_133]) && (n1 = n5[@i_133])))))) then
          if defined(z_201[@i_133]) && (z_201[@i_133] = m24) then
          event fullCK(hostZ, hostT, n1, m21, TGT_38, m24);
          out(c18[!_31], acceptC1(hostZ, hostT))
      orfind @i_132 <= N suchthat defined(z_201[@i_132], n5[@i_132], hostW[@i_132], ms4[@i_132], tc1[@i_132], ms3[@i_132], m2_123[@i_132]) && (m21 = m2_123[@i_132]) then
        let hostZ: kas = K in
        let x_74: sblocksize = padno(tc0, n2) in
        find  suchthat defined(z_230[@i_132], n5[@i_132], hostW[@i_132], ms4[@i_132], tc1[@i_132], ms3[@i_132]) && ((certC = ms3[@i_132]) && ((tc0 = tc1[@i_132]) && ((!_31 = @i_78[@i_132]) && ((sign2(x_74, sskgen2(rkCs), r1) = ms4[@i_132]) && ((hostT = hostW[@i_132]) && (n1 = n5[@i_132])))))) then
          if defined(z_230[@i_132]) && (z_230[@i_132] = m24) then
          event fullCK(hostZ, hostT, n1, m21, TGT_38, m24);
          out(c18[!_31], acceptC1(hostZ, hostT))
        orfind  suchthat defined(z_201[@i_132], n5[@i_132], hostW[@i_132], ms4[@i_132], tc1[@i_132], ms3[@i_132]) && ((certC = ms3[@i_132]) && ((tc0 = tc1[@i_132]) && ((!_31 = @i_78[@i_132]) && ((sign2(x_74, sskgen2(rkCs), r1) = ms4[@i_132]) && ((hostT = hostW[@i_132]) && (n1 = n5[@i_132])))))) then
          if defined(z_201[@i_132]) && (z_201[@i_132] = m24) then
          event fullCK(hostZ, hostT, n1, m21, TGT_38, m24);
          out(c18[!_31], acceptC1(hostZ, hostT))
    |
      ! !_32 <= N
      in(c22[!_32], (hostY: client, pkY: pkey, spkY: spkey, ms3: signature, tc1: timest, n4: nonce, ms4: signature, hostV: client, hostW: tgs, n5: nonce));
      if (hostV = hostY) then
      if (((hostY = C) && ((pkY = pkC) && (spkY = spkC))) && check2(concat1(hostY, pkY, spkY), pkCA, ms3)) then
      find @i_78 <= N suchthat defined(n2[@i_78], tc0[@i_78], x_74[@i_78]) && (((tc1 = tc0[@i_78]) && (n4 = n2[@i_78])) && check2(padno(tc1, n4), spkY, ms4)) then
        find j1 <= N2 suchthat defined(Qkey[j1], Lhost[j1]) && (Lhost[j1] = hostW) then
        new s3_92: symkeyseed;
        let AK_35: key = kgen(s3_92) in
        new r4_95: symseed;
        new tk_96: timest;
        let TGT_37: maxmac = encsym(concat5(AK_35, tk_96, hostY), Qkey[j1], r4_95) in
        let x_231: maxenc = concat4(AK_35, n5, tk_96, hostW) in
        new s1_93: symkeyseed;
        new r5_97: symseed;
        let z_230: maxmac = encsym2(Zconcat4, kgen2(s1_93), r5_97) in
        new r7_99: seed;
        let m2_118: bitstring = enc2(Z, pkY, r7_99) in
        let m5: bitstring = (m2_118, hostY, TGT_37, z_230) in
        event fullKC(hostY, hostW, n5, m2_118, TGT_37, z_230);
        out(c23[!_32], m5)
      orfind @i_78 <= N suchthat defined(n2[@i_78], tc0[@i_78], x_76[@i_78]) && (((tc1 = tc0[@i_78]) && (n4 = n2[@i_78])) && check2(padno(tc1, n4), spkY, ms4)) then
        find j1 <= N2 suchthat defined(Qkey[j1], Lhost[j1]) && (Lhost[j1] = hostW) then
        new s3_100: symkeyseed;
        let AK_35: key = kgen(s3_100) in
        new tk_104: timest;
        new r4_103: symseed;
        let TGT_37: maxmac = encsym(concat5(AK_35, tk_104, hostY), Qkey[j1], r4_103) in
        new r5_105: symseed;
        new s1_101: symkeyseed;
        let z_201: maxmac = encsym2(Zconcat4, kgen2(s1_101), r5_105) in
        new r7_107: seed;
        let m2_123: bitstring = enc2(Z, pkY, r7_107) in
        let m5: bitstring = (m2_123, hostY, TGT_37, z_201) in
        event fullKC(hostY, hostW, n5, m2_123, TGT_37, z_201);
        out(c23[!_32], m5)
    )
  |
    ! !_33 <= N2
    in(c21[!_33], (Lhost: tgs, Lkey: key));
    if (Lhost = T) then
      let Qkey: key = Kt
    else
      let Qkey: key = Lkey
  )
|
  ! !_34 <= N2
  in(c16[!_34], (Mhost1: tgs, Mhost2: server, Mkey: key))
)


Applying move new all binders yields

Game 54 is
in(start, ());
new rkC: keyseed;
let pkC: pkey = pkgen2(rkC) in
new rkCs: skeyseed;
let spkC: spkey = spkgen2(rkCs) in
new rkKs: skeyseed;
let spkK: spkey = spkgen2(rkKs) in
new rkCA: skeyseed;
let pkCA: spkey = spkgen2(rkCA) in
new rKt: symkeyseed;
let Kt: key = kgen(rKt) in
let x_53: sblocksize = concat1(C, pkC, spkC) in
new q1: sseed;
let certC: signature = sign2(x_53, sskgen2(rkCA), q1) in
out(c25, (pkC, spkC, spkK, pkCA));
(
  (
    (
      ! !_31 <= N
      in(c1[!_31], hostT: tgs);
      new n2: nonce;
      new tc0: timest;
      let x_76: sblocksize = padno(tc0, n2) in
      new r1: sseed;
      new n1: nonce;
      out(c2[!_31], (C, pkC, spkC, certC, tc0, n2, sign2(x_76, sskgen2(rkCs), r1), C, hostT, n1));
      in(c3[!_31], (m21: bitstring, =C, TGT_38: maxmac, m24: maxmac));
      find @i_133 <= N suchthat defined(z_230[@i_133], n5[@i_133], hostW[@i_133], ms4[@i_133], tc1[@i_133], ms3[@i_133], m2_118[@i_133]) && (m21 = m2_118[@i_133]) then
        let hostZ: kas = K in
        let x_74: sblocksize = padno(tc0, n2) in
        find  suchthat defined(z_230[@i_133], n5[@i_133], hostW[@i_133], ms4[@i_133], tc1[@i_133], ms3[@i_133]) && ((certC = ms3[@i_133]) && ((tc0 = tc1[@i_133]) && ((!_31 = @i_78[@i_133]) && ((sign2(x_74, sskgen2(rkCs), r1) = ms4[@i_133]) && ((hostT = hostW[@i_133]) && (n1 = n5[@i_133])))))) then
          if defined(z_230[@i_133]) && (z_230[@i_133] = m24) then
          event fullCK(hostZ, hostT, n1, m21, TGT_38, m24);
          out(c18[!_31], acceptC1(hostZ, hostT))
        orfind  suchthat defined(z_201[@i_133], n5[@i_133], hostW[@i_133], ms4[@i_133], tc1[@i_133], ms3[@i_133]) && ((certC = ms3[@i_133]) && ((tc0 = tc1[@i_133]) && ((!_31 = @i_78[@i_133]) && ((sign2(x_74, sskgen2(rkCs), r1) = ms4[@i_133]) && ((hostT = hostW[@i_133]) && (n1 = n5[@i_133])))))) then
          if defined(z_201[@i_133]) && (z_201[@i_133] = m24) then
          event fullCK(hostZ, hostT, n1, m21, TGT_38, m24);
          out(c18[!_31], acceptC1(hostZ, hostT))
      orfind @i_132 <= N suchthat defined(z_201[@i_132], n5[@i_132], hostW[@i_132], ms4[@i_132], tc1[@i_132], ms3[@i_132], m2_123[@i_132]) && (m21 = m2_123[@i_132]) then
        let hostZ: kas = K in
        let x_74: sblocksize = padno(tc0, n2) in
        find  suchthat defined(z_230[@i_132], n5[@i_132], hostW[@i_132], ms4[@i_132], tc1[@i_132], ms3[@i_132]) && ((certC = ms3[@i_132]) && ((tc0 = tc1[@i_132]) && ((!_31 = @i_78[@i_132]) && ((sign2(x_74, sskgen2(rkCs), r1) = ms4[@i_132]) && ((hostT = hostW[@i_132]) && (n1 = n5[@i_132])))))) then
          if defined(z_230[@i_132]) && (z_230[@i_132] = m24) then
          event fullCK(hostZ, hostT, n1, m21, TGT_38, m24);
          out(c18[!_31], acceptC1(hostZ, hostT))
        orfind  suchthat defined(z_201[@i_132], n5[@i_132], hostW[@i_132], ms4[@i_132], tc1[@i_132], ms3[@i_132]) && ((certC = ms3[@i_132]) && ((tc0 = tc1[@i_132]) && ((!_31 = @i_78[@i_132]) && ((sign2(x_74, sskgen2(rkCs), r1) = ms4[@i_132]) && ((hostT = hostW[@i_132]) && (n1 = n5[@i_132])))))) then
          if defined(z_201[@i_132]) && (z_201[@i_132] = m24) then
          event fullCK(hostZ, hostT, n1, m21, TGT_38, m24);
          out(c18[!_31], acceptC1(hostZ, hostT))
    |
      ! !_32 <= N
      in(c22[!_32], (hostY: client, pkY: pkey, spkY: spkey, ms3: signature, tc1: timest, n4: nonce, ms4: signature, hostV: client, hostW: tgs, n5: nonce));
      if (hostV = hostY) then
      if (((hostY = C) && ((pkY = pkC) && (spkY = spkC))) && check2(concat1(hostY, pkY, spkY), pkCA, ms3)) then
      find @i_78 <= N suchthat defined(n2[@i_78], tc0[@i_78], x_74[@i_78]) && (((tc1 = tc0[@i_78]) && (n4 = n2[@i_78])) && check2(padno(tc1, n4), spkY, ms4)) then
        find j1 <= N2 suchthat defined(Qkey[j1], Lhost[j1]) && (Lhost[j1] = hostW) then
        new s3_92: symkeyseed;
        let AK_35: key = kgen(s3_92) in
        new tk_96: timest;
        new r4_95: symseed;
        let TGT_37: maxmac = encsym(concat5(AK_35, tk_96, hostY), Qkey[j1], r4_95) in
        let x_231: maxenc = concat4(AK_35, n5, tk_96, hostW) in
        new r5_97: symseed;
        new s1_93: symkeyseed;
        let z_230: maxmac = encsym2(Zconcat4, kgen2(s1_93), r5_97) in
        new r7_99: seed;
        let m2_118: bitstring = enc2(Z, pkY, r7_99) in
        let m5: bitstring = (m2_118, hostY, TGT_37, z_230) in
        event fullKC(hostY, hostW, n5, m2_118, TGT_37, z_230);
        out(c23[!_32], m5)
      orfind @i_78 <= N suchthat defined(n2[@i_78], tc0[@i_78], x_76[@i_78]) && (((tc1 = tc0[@i_78]) && (n4 = n2[@i_78])) && check2(padno(tc1, n4), spkY, ms4)) then
        find j1 <= N2 suchthat defined(Qkey[j1], Lhost[j1]) && (Lhost[j1] = hostW) then
        new s3_100: symkeyseed;
        let AK_35: key = kgen(s3_100) in
        new r4_103: symseed;
        new tk_104: timest;
        let TGT_37: maxmac = encsym(concat5(AK_35, tk_104, hostY), Qkey[j1], r4_103) in
        new s1_101: symkeyseed;
        new r5_105: symseed;
        let z_201: maxmac = encsym2(Zconcat4, kgen2(s1_101), r5_105) in
        new r7_107: seed;
        let m2_123: bitstring = enc2(Z, pkY, r7_107) in
        let m5: bitstring = (m2_123, hostY, TGT_37, z_201) in
        event fullKC(hostY, hostW, n5, m2_123, TGT_37, z_201);
        out(c23[!_32], m5)
    )
  |
    ! !_33 <= N2
    in(c21[!_33], (Lhost: tgs, Lkey: key));
    if (Lhost = T) then
      let Qkey: key = Kt
    else
      let Qkey: key = Lkey
  )
|
  ! !_34 <= N2
  in(c16[!_34], (Mhost1: tgs, Mhost2: server, Mkey: key))
)


Applying remove assignments of useless yields

Game 55 is
in(start, ());
new rkC: keyseed;
let pkC: pkey = pkgen2(rkC) in
new rkCs: skeyseed;
let spkC: spkey = spkgen2(rkCs) in
new rkKs: skeyseed;
let spkK: spkey = spkgen2(rkKs) in
new rkCA: skeyseed;
let pkCA: spkey = spkgen2(rkCA) in
new rKt: symkeyseed;
let Kt: key = kgen(rKt) in
let x_53: sblocksize = concat1(C, pkC, spkC) in
new q1: sseed;
let certC: signature = sign2(x_53, sskgen2(rkCA), q1) in
out(c25, (pkC, spkC, spkK, pkCA));
(
  (
    (
      ! !_31 <= N
      in(c1[!_31], hostT: tgs);
      new n2: nonce;
      new tc0: timest;
      let x_76: sblocksize = padno(tc0, n2) in
      new r1: sseed;
      new n1: nonce;
      out(c2[!_31], (C, pkC, spkC, certC, tc0, n2, sign2(x_76, sskgen2(rkCs), r1), C, hostT, n1));
      in(c3[!_31], (m21: bitstring, =C, TGT_38: maxmac, m24: maxmac));
      find @i_133 <= N suchthat defined(z_230[@i_133], n5[@i_133], hostW[@i_133], ms4[@i_133], tc1[@i_133], ms3[@i_133], m2_118[@i_133]) && (m21 = m2_118[@i_133]) then
        let hostZ: kas = K in
        let x_74: sblocksize = padno(tc0, n2) in
        find  suchthat defined(z_230[@i_133], n5[@i_133], hostW[@i_133], ms4[@i_133], tc1[@i_133], ms3[@i_133]) && ((certC = ms3[@i_133]) && ((tc0 = tc1[@i_133]) && ((!_31 = @i_78[@i_133]) && ((sign2(x_74, sskgen2(rkCs), r1) = ms4[@i_133]) && ((hostT = hostW[@i_133]) && (n1 = n5[@i_133])))))) then
          if defined(z_230[@i_133]) && (z_230[@i_133] = m24) then
          event fullCK(hostZ, hostT, n1, m21, TGT_38, m24);
          out(c18[!_31], acceptC1(hostZ, hostT))
        orfind  suchthat defined(z_201[@i_133], n5[@i_133], hostW[@i_133], ms4[@i_133], tc1[@i_133], ms3[@i_133]) && ((certC = ms3[@i_133]) && ((tc0 = tc1[@i_133]) && ((!_31 = @i_78[@i_133]) && ((sign2(x_74, sskgen2(rkCs), r1) = ms4[@i_133]) && ((hostT = hostW[@i_133]) && (n1 = n5[@i_133])))))) then
          if defined(z_201[@i_133]) && (z_201[@i_133] = m24) then
          event fullCK(hostZ, hostT, n1, m21, TGT_38, m24);
          out(c18[!_31], acceptC1(hostZ, hostT))
      orfind @i_132 <= N suchthat defined(z_201[@i_132], n5[@i_132], hostW[@i_132], ms4[@i_132], tc1[@i_132], ms3[@i_132], m2_123[@i_132]) && (m21 = m2_123[@i_132]) then
        let hostZ: kas = K in
        let x_74: sblocksize = padno(tc0, n2) in
        find  suchthat defined(z_230[@i_132], n5[@i_132], hostW[@i_132], ms4[@i_132], tc1[@i_132], ms3[@i_132]) && ((certC = ms3[@i_132]) && ((tc0 = tc1[@i_132]) && ((!_31 = @i_78[@i_132]) && ((sign2(x_74, sskgen2(rkCs), r1) = ms4[@i_132]) && ((hostT = hostW[@i_132]) && (n1 = n5[@i_132])))))) then
          if defined(z_230[@i_132]) && (z_230[@i_132] = m24) then
          event fullCK(hostZ, hostT, n1, m21, TGT_38, m24);
          out(c18[!_31], acceptC1(hostZ, hostT))
        orfind  suchthat defined(z_201[@i_132], n5[@i_132], hostW[@i_132], ms4[@i_132], tc1[@i_132], ms3[@i_132]) && ((certC = ms3[@i_132]) && ((tc0 = tc1[@i_132]) && ((!_31 = @i_78[@i_132]) && ((sign2(x_74, sskgen2(rkCs), r1) = ms4[@i_132]) && ((hostT = hostW[@i_132]) && (n1 = n5[@i_132])))))) then
          if defined(z_201[@i_132]) && (z_201[@i_132] = m24) then
          event fullCK(hostZ, hostT, n1, m21, TGT_38, m24);
          out(c18[!_31], acceptC1(hostZ, hostT))
    |
      ! !_32 <= N
      in(c22[!_32], (hostY: client, pkY: pkey, spkY: spkey, ms3: signature, tc1: timest, n4: nonce, ms4: signature, hostV: client, hostW: tgs, n5: nonce));
      if (hostV = hostY) then
      if (((hostY = C) && ((pkY = pkC) && (spkY = spkC))) && check2(concat1(hostY, pkY, spkY), pkCA, ms3)) then
      find @i_78 <= N suchthat defined(n2[@i_78], tc0[@i_78], x_74[@i_78]) && (((tc1 = tc0[@i_78]) && (n4 = n2[@i_78])) && check2(padno(tc1, n4), spkY, ms4)) then
        find j1 <= N2 suchthat defined(Qkey[j1], Lhost[j1]) && (Lhost[j1] = hostW) then
        new s3_92: symkeyseed;
        let AK_35: key = kgen(s3_92) in
        new tk_96: timest;
        new r4_95: symseed;
        let TGT_37: maxmac = encsym(concat5(AK_35, tk_96, hostY), Qkey[j1], r4_95) in
        new r5_97: symseed;
        new s1_93: symkeyseed;
        let z_230: maxmac = encsym2(Zconcat4, kgen2(s1_93), r5_97) in
        new r7_99: seed;
        let m2_118: bitstring = enc2(Z, pkY, r7_99) in
        let m5: bitstring = (m2_118, hostY, TGT_37, z_230) in
        event fullKC(hostY, hostW, n5, m2_118, TGT_37, z_230);
        out(c23[!_32], m5)
      orfind @i_78 <= N suchthat defined(n2[@i_78], tc0[@i_78], x_76[@i_78]) && (((tc1 = tc0[@i_78]) && (n4 = n2[@i_78])) && check2(padno(tc1, n4), spkY, ms4)) then
        find j1 <= N2 suchthat defined(Qkey[j1], Lhost[j1]) && (Lhost[j1] = hostW) then
        new s3_100: symkeyseed;
        let AK_35: key = kgen(s3_100) in
        new r4_103: symseed;
        new tk_104: timest;
        let TGT_37: maxmac = encsym(concat5(AK_35, tk_104, hostY), Qkey[j1], r4_103) in
        new s1_101: symkeyseed;
        new r5_105: symseed;
        let z_201: maxmac = encsym2(Zconcat4, kgen2(s1_101), r5_105) in
        new r7_107: seed;
        let m2_123: bitstring = enc2(Z, pkY, r7_107) in
        let m5: bitstring = (m2_123, hostY, TGT_37, z_201) in
        event fullKC(hostY, hostW, n5, m2_123, TGT_37, z_201);
        out(c23[!_32], m5)
    )
  |
    ! !_33 <= N2
    in(c21[!_33], (Lhost: tgs, Lkey: key));
    if (Lhost = T) then
      let Qkey: key = Kt
    else
      let Qkey: key = Lkey
  )
|
  ! !_34 <= N2
  in(c16[!_34], (Mhost1: tgs, Mhost2: server, Mkey: key))
)


Applying remove assignments of binder Kt yields

Game 56 is
in(start, ());
new rkC: keyseed;
let pkC: pkey = pkgen2(rkC) in
new rkCs: skeyseed;
let spkC: spkey = spkgen2(rkCs) in
new rkKs: skeyseed;
let spkK: spkey = spkgen2(rkKs) in
new rkCA: skeyseed;
let pkCA: spkey = spkgen2(rkCA) in
new rKt: symkeyseed;
let x_53: sblocksize = concat1(C, pkC, spkC) in
new q1: sseed;
let certC: signature = sign2(x_53, sskgen2(rkCA), q1) in
out(c25, (pkC, spkC, spkK, pkCA));
(
  (
    (
      ! !_31 <= N
      in(c1[!_31], hostT: tgs);
      new n2: nonce;
      new tc0: timest;
      let x_76: sblocksize = padno(tc0, n2) in
      new r1: sseed;
      new n1: nonce;
      out(c2[!_31], (C, pkC, spkC, certC, tc0, n2, sign2(x_76, sskgen2(rkCs), r1), C, hostT, n1));
      in(c3[!_31], (m21: bitstring, =C, TGT_38: maxmac, m24: maxmac));
      find @i_133 <= N suchthat defined(z_230[@i_133], n5[@i_133], hostW[@i_133], ms4[@i_133], tc1[@i_133], ms3[@i_133], m2_118[@i_133]) && (m21 = m2_118[@i_133]) then
        let hostZ: kas = K in
        let x_74: sblocksize = padno(tc0, n2) in
        find  suchthat defined(z_230[@i_133], n5[@i_133], hostW[@i_133], ms4[@i_133], tc1[@i_133], ms3[@i_133]) && ((certC = ms3[@i_133]) && ((tc0 = tc1[@i_133]) && ((!_31 = @i_78[@i_133]) && ((sign2(x_74, sskgen2(rkCs), r1) = ms4[@i_133]) && ((hostT = hostW[@i_133]) && (n1 = n5[@i_133])))))) then
          if defined(z_230[@i_133]) && (z_230[@i_133] = m24) then
          event fullCK(hostZ, hostT, n1, m21, TGT_38, m24);
          out(c18[!_31], acceptC1(hostZ, hostT))
        orfind  suchthat defined(z_201[@i_133], n5[@i_133], hostW[@i_133], ms4[@i_133], tc1[@i_133], ms3[@i_133]) && ((certC = ms3[@i_133]) && ((tc0 = tc1[@i_133]) && ((!_31 = @i_78[@i_133]) && ((sign2(x_74, sskgen2(rkCs), r1) = ms4[@i_133]) && ((hostT = hostW[@i_133]) && (n1 = n5[@i_133])))))) then
          if defined(z_201[@i_133]) && (z_201[@i_133] = m24) then
          event fullCK(hostZ, hostT, n1, m21, TGT_38, m24);
          out(c18[!_31], acceptC1(hostZ, hostT))
      orfind @i_132 <= N suchthat defined(z_201[@i_132], n5[@i_132], hostW[@i_132], ms4[@i_132], tc1[@i_132], ms3[@i_132], m2_123[@i_132]) && (m21 = m2_123[@i_132]) then
        let hostZ: kas = K in
        let x_74: sblocksize = padno(tc0, n2) in
        find  suchthat defined(z_230[@i_132], n5[@i_132], hostW[@i_132], ms4[@i_132], tc1[@i_132], ms3[@i_132]) && ((certC = ms3[@i_132]) && ((tc0 = tc1[@i_132]) && ((!_31 = @i_78[@i_132]) && ((sign2(x_74, sskgen2(rkCs), r1) = ms4[@i_132]) && ((hostT = hostW[@i_132]) && (n1 = n5[@i_132])))))) then
          if defined(z_230[@i_132]) && (z_230[@i_132] = m24) then
          event fullCK(hostZ, hostT, n1, m21, TGT_38, m24);
          out(c18[!_31], acceptC1(hostZ, hostT))
        orfind  suchthat defined(z_201[@i_132], n5[@i_132], hostW[@i_132], ms4[@i_132], tc1[@i_132], ms3[@i_132]) && ((certC = ms3[@i_132]) && ((tc0 = tc1[@i_132]) && ((!_31 = @i_78[@i_132]) && ((sign2(x_74, sskgen2(rkCs), r1) = ms4[@i_132]) && ((hostT = hostW[@i_132]) && (n1 = n5[@i_132])))))) then
          if defined(z_201[@i_132]) && (z_201[@i_132] = m24) then
          event fullCK(hostZ, hostT, n1, m21, TGT_38, m24);
          out(c18[!_31], acceptC1(hostZ, hostT))
    |
      ! !_32 <= N
      in(c22[!_32], (hostY: client, pkY: pkey, spkY: spkey, ms3: signature, tc1: timest, n4: nonce, ms4: signature, hostV: client, hostW: tgs, n5: nonce));
      if (hostV = hostY) then
      if (((hostY = C) && ((pkY = pkC) && (spkY = spkC))) && check2(concat1(hostY, pkY, spkY), pkCA, ms3)) then
      find @i_78 <= N suchthat defined(n2[@i_78], tc0[@i_78], x_74[@i_78]) && (((tc1 = tc0[@i_78]) && (n4 = n2[@i_78])) && check2(padno(tc1, n4), spkY, ms4)) then
        find j1 <= N2 suchthat defined(Qkey[j1], Lhost[j1]) && (Lhost[j1] = hostW) then
        new s3_92: symkeyseed;
        let AK_35: key = kgen(s3_92) in
        new tk_96: timest;
        new r4_95: symseed;
        let TGT_37: maxmac = encsym(concat5(AK_35, tk_96, hostY), Qkey[j1], r4_95) in
        new r5_97: symseed;
        new s1_93: symkeyseed;
        let z_230: maxmac = encsym2(Zconcat4, kgen2(s1_93), r5_97) in
        new r7_99: seed;
        let m2_118: bitstring = enc2(Z, pkY, r7_99) in
        let m5: bitstring = (m2_118, hostY, TGT_37, z_230) in
        event fullKC(hostY, hostW, n5, m2_118, TGT_37, z_230);
        out(c23[!_32], m5)
      orfind @i_78 <= N suchthat defined(n2[@i_78], tc0[@i_78], x_76[@i_78]) && (((tc1 = tc0[@i_78]) && (n4 = n2[@i_78])) && check2(padno(tc1, n4), spkY, ms4)) then
        find j1 <= N2 suchthat defined(Qkey[j1], Lhost[j1]) && (Lhost[j1] = hostW) then
        new s3_100: symkeyseed;
        let AK_35: key = kgen(s3_100) in
        new r4_103: symseed;
        new tk_104: timest;
        let TGT_37: maxmac = encsym(concat5(AK_35, tk_104, hostY), Qkey[j1], r4_103) in
        new s1_101: symkeyseed;
        new r5_105: symseed;
        let z_201: maxmac = encsym2(Zconcat4, kgen2(s1_101), r5_105) in
        new r7_107: seed;
        let m2_123: bitstring = enc2(Z, pkY, r7_107) in
        let m5: bitstring = (m2_123, hostY, TGT_37, z_201) in
        event fullKC(hostY, hostW, n5, m2_123, TGT_37, z_201);
        out(c23[!_32], m5)
    )
  |
    ! !_33 <= N2
    in(c21[!_33], (Lhost: tgs, Lkey: key));
    if (Lhost = T) then
      let Qkey: key = kgen(rKt)
    else
      let Qkey: key = Lkey
  )
|
  ! !_34 <= N2
  in(c16[!_34], (Mhost1: tgs, Mhost2: server, Mkey: key))
)


Applying SA rename Qkey yields

Game 57 is
in(start, ());
new rkC: keyseed;
let pkC: pkey = pkgen2(rkC) in
new rkCs: skeyseed;
let spkC: spkey = spkgen2(rkCs) in
new rkKs: skeyseed;
let spkK: spkey = spkgen2(rkKs) in
new rkCA: skeyseed;
let pkCA: spkey = spkgen2(rkCA) in
new rKt: symkeyseed;
let x_53: sblocksize = concat1(C, pkC, spkC) in
new q1: sseed;
let certC: signature = sign2(x_53, sskgen2(rkCA), q1) in
out(c25, (pkC, spkC, spkK, pkCA));
(
  (
    (
      ! !_31 <= N
      in(c1[!_31], hostT: tgs);
      new n2: nonce;
      new tc0: timest;
      let x_76: sblocksize = padno(tc0, n2) in
      new r1: sseed;
      new n1: nonce;
      out(c2[!_31], (C, pkC, spkC, certC, tc0, n2, sign2(x_76, sskgen2(rkCs), r1), C, hostT, n1));
      in(c3[!_31], (m21: bitstring, =C, TGT_38: maxmac, m24: maxmac));
      find @i_133 <= N suchthat defined(z_230[@i_133], n5[@i_133], hostW[@i_133], ms4[@i_133], tc1[@i_133], ms3[@i_133], m2_118[@i_133]) && (m21 = m2_118[@i_133]) then
        let hostZ: kas = K in
        let x_74: sblocksize = padno(tc0, n2) in
        find  suchthat defined(z_230[@i_133], n5[@i_133], hostW[@i_133], ms4[@i_133], tc1[@i_133], ms3[@i_133]) && ((certC = ms3[@i_133]) && ((tc0 = tc1[@i_133]) && ((!_31 = @i_78[@i_133]) && ((sign2(x_74, sskgen2(rkCs), r1) = ms4[@i_133]) && ((hostT = hostW[@i_133]) && (n1 = n5[@i_133])))))) then
          if defined(z_230[@i_133]) && (z_230[@i_133] = m24) then
          event fullCK(hostZ, hostT, n1, m21, TGT_38, m24);
          out(c18[!_31], acceptC1(hostZ, hostT))
        orfind  suchthat defined(z_201[@i_133], n5[@i_133], hostW[@i_133], ms4[@i_133], tc1[@i_133], ms3[@i_133]) && ((certC = ms3[@i_133]) && ((tc0 = tc1[@i_133]) && ((!_31 = @i_78[@i_133]) && ((sign2(x_74, sskgen2(rkCs), r1) = ms4[@i_133]) && ((hostT = hostW[@i_133]) && (n1 = n5[@i_133])))))) then
          if defined(z_201[@i_133]) && (z_201[@i_133] = m24) then
          event fullCK(hostZ, hostT, n1, m21, TGT_38, m24);
          out(c18[!_31], acceptC1(hostZ, hostT))
      orfind @i_132 <= N suchthat defined(z_201[@i_132], n5[@i_132], hostW[@i_132], ms4[@i_132], tc1[@i_132], ms3[@i_132], m2_123[@i_132]) && (m21 = m2_123[@i_132]) then
        let hostZ: kas = K in
        let x_74: sblocksize = padno(tc0, n2) in
        find  suchthat defined(z_230[@i_132], n5[@i_132], hostW[@i_132], ms4[@i_132], tc1[@i_132], ms3[@i_132]) && ((certC = ms3[@i_132]) && ((tc0 = tc1[@i_132]) && ((!_31 = @i_78[@i_132]) && ((sign2(x_74, sskgen2(rkCs), r1) = ms4[@i_132]) && ((hostT = hostW[@i_132]) && (n1 = n5[@i_132])))))) then
          if defined(z_230[@i_132]) && (z_230[@i_132] = m24) then
          event fullCK(hostZ, hostT, n1, m21, TGT_38, m24);
          out(c18[!_31], acceptC1(hostZ, hostT))
        orfind  suchthat defined(z_201[@i_132], n5[@i_132], hostW[@i_132], ms4[@i_132], tc1[@i_132], ms3[@i_132]) && ((certC = ms3[@i_132]) && ((tc0 = tc1[@i_132]) && ((!_31 = @i_78[@i_132]) && ((sign2(x_74, sskgen2(rkCs), r1) = ms4[@i_132]) && ((hostT = hostW[@i_132]) && (n1 = n5[@i_132])))))) then
          if defined(z_201[@i_132]) && (z_201[@i_132] = m24) then
          event fullCK(hostZ, hostT, n1, m21, TGT_38, m24);
          out(c18[!_31], acceptC1(hostZ, hostT))
    |
      ! !_32 <= N
      in(c22[!_32], (hostY: client, pkY: pkey, spkY: spkey, ms3: signature, tc1: timest, n4: nonce, ms4: signature, hostV: client, hostW: tgs, n5: nonce));
      if (hostV = hostY) then
      if (((hostY = C) && ((pkY = pkC) && (spkY = spkC))) && check2(concat1(hostY, pkY, spkY), pkCA, ms3)) then
      find @i_78 <= N suchthat defined(n2[@i_78], tc0[@i_78], x_74[@i_78]) && (((tc1 = tc0[@i_78]) && (n4 = n2[@i_78])) && check2(padno(tc1, n4), spkY, ms4)) then
        find j1 <= N2 suchthat defined(Qkey_347[j1], Lhost[j1]) && (Lhost[j1] = hostW) then
          new s3_92: symkeyseed;
          let AK_35: key = kgen(s3_92) in
          new tk_96: timest;
          new r4_95: symseed;
          let TGT_37: maxmac = encsym(concat5(AK_35, tk_96, hostY), Qkey_347[j1], r4_95) in
          new r5_97: symseed;
          new s1_93: symkeyseed;
          let z_230: maxmac = encsym2(Zconcat4, kgen2(s1_93), r5_97) in
          new r7_99: seed;
          let m2_118: bitstring = enc2(Z, pkY, r7_99) in
          let m5: bitstring = (m2_118, hostY, TGT_37, z_230) in
          event fullKC(hostY, hostW, n5, m2_118, TGT_37, z_230);
          out(c23[!_32], m5)
        orfind j1 <= N2 suchthat defined(Qkey_348[j1], Lhost[j1]) && (Lhost[j1] = hostW) then
          new s3_92: symkeyseed;
          let AK_35: key = kgen(s3_92) in
          new tk_96: timest;
          new r4_95: symseed;
          let TGT_37: maxmac = encsym(concat5(AK_35, tk_96, hostY), Qkey_348[j1], r4_95) in
          new r5_97: symseed;
          new s1_93: symkeyseed;
          let z_230: maxmac = encsym2(Zconcat4, kgen2(s1_93), r5_97) in
          new r7_99: seed;
          let m2_118: bitstring = enc2(Z, pkY, r7_99) in
          let m5: bitstring = (m2_118, hostY, TGT_37, z_230) in
          event fullKC(hostY, hostW, n5, m2_118, TGT_37, z_230);
          out(c23[!_32], m5)
      orfind @i_78 <= N suchthat defined(n2[@i_78], tc0[@i_78], x_76[@i_78]) && (((tc1 = tc0[@i_78]) && (n4 = n2[@i_78])) && check2(padno(tc1, n4), spkY, ms4)) then
        find j1 <= N2 suchthat defined(Qkey_347[j1], Lhost[j1]) && (Lhost[j1] = hostW) then
          new s3_100: symkeyseed;
          let AK_35: key = kgen(s3_100) in
          new r4_103: symseed;
          new tk_104: timest;
          let TGT_37: maxmac = encsym(concat5(AK_35, tk_104, hostY), Qkey_347[j1], r4_103) in
          new s1_101: symkeyseed;
          new r5_105: symseed;
          let z_201: maxmac = encsym2(Zconcat4, kgen2(s1_101), r5_105) in
          new r7_107: seed;
          let m2_123: bitstring = enc2(Z, pkY, r7_107) in
          let m5: bitstring = (m2_123, hostY, TGT_37, z_201) in
          event fullKC(hostY, hostW, n5, m2_123, TGT_37, z_201);
          out(c23[!_32], m5)
        orfind j1 <= N2 suchthat defined(Qkey_348[j1], Lhost[j1]) && (Lhost[j1] = hostW) then
          new s3_100: symkeyseed;
          let AK_35: key = kgen(s3_100) in
          new r4_103: symseed;
          new tk_104: timest;
          let TGT_37: maxmac = encsym(concat5(AK_35, tk_104, hostY), Qkey_348[j1], r4_103) in
          new s1_101: symkeyseed;
          new r5_105: symseed;
          let z_201: maxmac = encsym2(Zconcat4, kgen2(s1_101), r5_105) in
          new r7_107: seed;
          let m2_123: bitstring = enc2(Z, pkY, r7_107) in
          let m5: bitstring = (m2_123, hostY, TGT_37, z_201) in
          event fullKC(hostY, hostW, n5, m2_123, TGT_37, z_201);
          out(c23[!_32], m5)
    )
  |
    ! !_33 <= N2
    in(c21[!_33], (Lhost: tgs, Lkey: key));
    if (Lhost = T) then
      let Qkey_348: key = kgen(rKt)
    else
      let Qkey_347: key = Lkey
  )
|
  ! !_34 <= N2
  in(c16[!_34], (Mhost1: tgs, Mhost2: server, Mkey: key))
)


Applying remove assignments of binder Qkey_348 yields

Game 58 is
in(start, ());
new rkC: keyseed;
let pkC: pkey = pkgen2(rkC) in
new rkCs: skeyseed;
let spkC: spkey = spkgen2(rkCs) in
new rkKs: skeyseed;
let spkK: spkey = spkgen2(rkKs) in
new rkCA: skeyseed;
let pkCA: spkey = spkgen2(rkCA) in
new rKt: symkeyseed;
let x_53: sblocksize = concat1(C, pkC, spkC) in
new q1: sseed;
let certC: signature = sign2(x_53, sskgen2(rkCA), q1) in
out(c25, (pkC, spkC, spkK, pkCA));
(
  (
    (
      ! !_31 <= N
      in(c1[!_31], hostT: tgs);
      new n2: nonce;
      new tc0: timest;
      let x_76: sblocksize = padno(tc0, n2) in
      new r1: sseed;
      new n1: nonce;
      out(c2[!_31], (C, pkC, spkC, certC, tc0, n2, sign2(x_76, sskgen2(rkCs), r1), C, hostT, n1));
      in(c3[!_31], (m21: bitstring, =C, TGT_38: maxmac, m24: maxmac));
      find @i_133 <= N suchthat defined(z_230[@i_133], n5[@i_133], hostW[@i_133], ms4[@i_133], tc1[@i_133], ms3[@i_133], m2_118[@i_133]) && (m21 = m2_118[@i_133]) then
        let hostZ: kas = K in
        let x_74: sblocksize = padno(tc0, n2) in
        find  suchthat defined(z_230[@i_133], n5[@i_133], hostW[@i_133], ms4[@i_133], tc1[@i_133], ms3[@i_133]) && ((certC = ms3[@i_133]) && ((tc0 = tc1[@i_133]) && ((!_31 = @i_78[@i_133]) && ((sign2(x_74, sskgen2(rkCs), r1) = ms4[@i_133]) && ((hostT = hostW[@i_133]) && (n1 = n5[@i_133])))))) then
          if defined(z_230[@i_133]) && (z_230[@i_133] = m24) then
          event fullCK(hostZ, hostT, n1, m21, TGT_38, m24);
          out(c18[!_31], acceptC1(hostZ, hostT))
        orfind  suchthat defined(z_201[@i_133], n5[@i_133], hostW[@i_133], ms4[@i_133], tc1[@i_133], ms3[@i_133]) && ((certC = ms3[@i_133]) && ((tc0 = tc1[@i_133]) && ((!_31 = @i_78[@i_133]) && ((sign2(x_74, sskgen2(rkCs), r1) = ms4[@i_133]) && ((hostT = hostW[@i_133]) && (n1 = n5[@i_133])))))) then
          if defined(z_201[@i_133]) && (z_201[@i_133] = m24) then
          event fullCK(hostZ, hostT, n1, m21, TGT_38, m24);
          out(c18[!_31], acceptC1(hostZ, hostT))
      orfind @i_132 <= N suchthat defined(z_201[@i_132], n5[@i_132], hostW[@i_132], ms4[@i_132], tc1[@i_132], ms3[@i_132], m2_123[@i_132]) && (m21 = m2_123[@i_132]) then
        let hostZ: kas = K in
        let x_74: sblocksize = padno(tc0, n2) in
        find  suchthat defined(z_230[@i_132], n5[@i_132], hostW[@i_132], ms4[@i_132], tc1[@i_132], ms3[@i_132]) && ((certC = ms3[@i_132]) && ((tc0 = tc1[@i_132]) && ((!_31 = @i_78[@i_132]) && ((sign2(x_74, sskgen2(rkCs), r1) = ms4[@i_132]) && ((hostT = hostW[@i_132]) && (n1 = n5[@i_132])))))) then
          if defined(z_230[@i_132]) && (z_230[@i_132] = m24) then
          event fullCK(hostZ, hostT, n1, m21, TGT_38, m24);
          out(c18[!_31], acceptC1(hostZ, hostT))
        orfind  suchthat defined(z_201[@i_132], n5[@i_132], hostW[@i_132], ms4[@i_132], tc1[@i_132], ms3[@i_132]) && ((certC = ms3[@i_132]) && ((tc0 = tc1[@i_132]) && ((!_31 = @i_78[@i_132]) && ((sign2(x_74, sskgen2(rkCs), r1) = ms4[@i_132]) && ((hostT = hostW[@i_132]) && (n1 = n5[@i_132])))))) then
          if defined(z_201[@i_132]) && (z_201[@i_132] = m24) then
          event fullCK(hostZ, hostT, n1, m21, TGT_38, m24);
          out(c18[!_31], acceptC1(hostZ, hostT))
    |
      ! !_32 <= N
      in(c22[!_32], (hostY: client, pkY: pkey, spkY: spkey, ms3: signature, tc1: timest, n4: nonce, ms4: signature, hostV: client, hostW: tgs, n5: nonce));
      if (hostV = hostY) then
      if (((hostY = C) && ((pkY = pkC) && (spkY = spkC))) && check2(concat1(hostY, pkY, spkY), pkCA, ms3)) then
      find @i_78 <= N suchthat defined(n2[@i_78], tc0[@i_78], x_74[@i_78]) && (((tc1 = tc0[@i_78]) && (n4 = n2[@i_78])) && check2(padno(tc1, n4), spkY, ms4)) then
        find j1 <= N2 suchthat defined(Lkey[j1], Qkey_347[j1], Lhost[j1]) && (Lhost[j1] = hostW) then
          new s3_349: symkeyseed;
          let AK_35: key = kgen(s3_349) in
          new tk_350: timest;
          new r4_351: symseed;
          let TGT_37: maxmac = encsym(concat5(AK_35, tk_350, hostY), Lkey[j1], r4_351) in
          new r5_352: symseed;
          new s1_353: symkeyseed;
          let z_230: maxmac = encsym2(Zconcat4, kgen2(s1_353), r5_352) in
          new r7_354: seed;
          let m2_118: bitstring = enc2(Z, pkY, r7_354) in
          let m5: bitstring = (m2_118, hostY, TGT_37, z_230) in
          event fullKC(hostY, hostW, n5, m2_118, TGT_37, z_230);
          out(c23[!_32], m5)
        orfind j1 <= N2 suchthat defined(rKt, Qkey_348[j1], Lhost[j1]) && (Lhost[j1] = hostW) then
          new s3_355: symkeyseed;
          let AK_35: key = kgen(s3_355) in
          new tk_356: timest;
          new r4_357: symseed;
          let TGT_37: maxmac = encsym(concat5(AK_35, tk_356, hostY), kgen(rKt), r4_357) in
          new r5_358: symseed;
          new s1_359: symkeyseed;
          let z_230: maxmac = encsym2(Zconcat4, kgen2(s1_359), r5_358) in
          new r7_360: seed;
          let m2_118: bitstring = enc2(Z, pkY, r7_360) in
          let m5: bitstring = (m2_118, hostY, TGT_37, z_230) in
          event fullKC(hostY, hostW, n5, m2_118, TGT_37, z_230);
          out(c23[!_32], m5)
      orfind @i_78 <= N suchthat defined(n2[@i_78], tc0[@i_78], x_76[@i_78]) && (((tc1 = tc0[@i_78]) && (n4 = n2[@i_78])) && check2(padno(tc1, n4), spkY, ms4)) then
        find j1 <= N2 suchthat defined(Lkey[j1], Qkey_347[j1], Lhost[j1]) && (Lhost[j1] = hostW) then
          new s3_361: symkeyseed;
          let AK_35: key = kgen(s3_361) in
          new r4_362: symseed;
          new tk_363: timest;
          let TGT_37: maxmac = encsym(concat5(AK_35, tk_363, hostY), Lkey[j1], r4_362) in
          new s1_364: symkeyseed;
          new r5_365: symseed;
          let z_201: maxmac = encsym2(Zconcat4, kgen2(s1_364), r5_365) in
          new r7_366: seed;
          let m2_123: bitstring = enc2(Z, pkY, r7_366) in
          let m5: bitstring = (m2_123, hostY, TGT_37, z_201) in
          event fullKC(hostY, hostW, n5, m2_123, TGT_37, z_201);
          out(c23[!_32], m5)
        orfind j1 <= N2 suchthat defined(rKt, Qkey_348[j1], Lhost[j1]) && (Lhost[j1] = hostW) then
          new s3_367: symkeyseed;
          let AK_35: key = kgen(s3_367) in
          new r4_368: symseed;
          new tk_369: timest;
          let TGT_37: maxmac = encsym(concat5(AK_35, tk_369, hostY), kgen(rKt), r4_368) in
          new s1_370: symkeyseed;
          new r5_371: symseed;
          let z_201: maxmac = encsym2(Zconcat4, kgen2(s1_370), r5_371) in
          new r7_372: seed;
          let m2_123: bitstring = enc2(Z, pkY, r7_372) in
          let m5: bitstring = (m2_123, hostY, TGT_37, z_201) in
          event fullKC(hostY, hostW, n5, m2_123, TGT_37, z_201);
          out(c23[!_32], m5)
    )
  |
    ! !_33 <= N2
    in(c21[!_33], (Lhost: tgs, Lkey: key));
    if (Lhost = T) then
      let Qkey_348: key = cst_key
    else
      let Qkey_347: key = cst_key
  )
|
  ! !_34 <= N2
  in(c16[!_34], (Mhost1: tgs, Mhost2: server, Mkey: key))
)


Applying equivalence
equiv ! !_19 <= N2 new r: symkeyseed; (
  ! !_20 <= N new r2: symseed; (x: maxenc) -> encsym(x, kgen(r), r2),
  ! !_21 <= N3 (y: maxmac) -> decsym(y, kgen(r)))
<=(N2 * Pencctxt(time, N, N3))=>
      ! !_22 <= N2 new r: symkeyseed; (
  ! !_23 <= N new r2: symseed; (x_46: maxenc) -> let x: maxenc = x_46 in let z: maxmac = encsym(x, kgen2(r), r2) in z,
  ! !_24 <= N3 (y: maxmac) -> find j <= N suchthat defined(x[j], r2[j], z[j]) && (z[j] = y) then injbot2(x[j]) else bottom)
with rKt [Difference of probability Pencctxt(time + time(context for game 58), N, 0)] yields

Game 59 is
in(start, ());
new rkC: keyseed;
let pkC: pkey = pkgen2(rkC) in
new rkCs: skeyseed;
let spkC: spkey = spkgen2(rkCs) in
new rkKs: skeyseed;
let spkK: spkey = spkgen2(rkKs) in
new rkCA: skeyseed;
let pkCA: spkey = spkgen2(rkCA) in
new rKt: symkeyseed;
let x_53: sblocksize = concat1(C, pkC, spkC) in
new q1: sseed;
let certC: signature = sign2(x_53, sskgen2(rkCA), q1) in
out(c25, (pkC, spkC, spkK, pkCA));
(
  (
    (
      ! !_31 <= N
      in(c1[!_31], hostT: tgs);
      new n2: nonce;
      new tc0: timest;
      let x_76: sblocksize = padno(tc0, n2) in
      new r1: sseed;
      new n1: nonce;
      out(c2[!_31], (C, pkC, spkC, certC, tc0, n2, sign2(x_76, sskgen2(rkCs), r1), C, hostT, n1));
      in(c3[!_31], (m21: bitstring, =C, TGT_38: maxmac, m24: maxmac));
      find @i_133 <= N suchthat defined(z_230[@i_133], n5[@i_133], hostW[@i_133], ms4[@i_133], tc1[@i_133], ms3[@i_133], m2_118[@i_133]) && (m21 = m2_118[@i_133]) then
        let hostZ: kas = K in
        let x_74: sblocksize = padno(tc0, n2) in
        find  suchthat defined(z_230[@i_133], n5[@i_133], hostW[@i_133], ms4[@i_133], tc1[@i_133], ms3[@i_133]) && ((certC = ms3[@i_133]) && ((tc0 = tc1[@i_133]) && ((!_31 = @i_78[@i_133]) && ((sign2(x_74, sskgen2(rkCs), r1) = ms4[@i_133]) && ((hostT = hostW[@i_133]) && (n1 = n5[@i_133])))))) then
          if defined(z_230[@i_133]) && (z_230[@i_133] = m24) then
          event fullCK(hostZ, hostT, n1, m21, TGT_38, m24);
          out(c18[!_31], acceptC1(hostZ, hostT))
        orfind  suchthat defined(z_201[@i_133], n5[@i_133], hostW[@i_133], ms4[@i_133], tc1[@i_133], ms3[@i_133]) && ((certC = ms3[@i_133]) && ((tc0 = tc1[@i_133]) && ((!_31 = @i_78[@i_133]) && ((sign2(x_74, sskgen2(rkCs), r1) = ms4[@i_133]) && ((hostT = hostW[@i_133]) && (n1 = n5[@i_133])))))) then
          if defined(z_201[@i_133]) && (z_201[@i_133] = m24) then
          event fullCK(hostZ, hostT, n1, m21, TGT_38, m24);
          out(c18[!_31], acceptC1(hostZ, hostT))
      orfind @i_132 <= N suchthat defined(z_201[@i_132], n5[@i_132], hostW[@i_132], ms4[@i_132], tc1[@i_132], ms3[@i_132], m2_123[@i_132]) && (m21 = m2_123[@i_132]) then
        let hostZ: kas = K in
        let x_74: sblocksize = padno(tc0, n2) in
        find  suchthat defined(z_230[@i_132], n5[@i_132], hostW[@i_132], ms4[@i_132], tc1[@i_132], ms3[@i_132]) && ((certC = ms3[@i_132]) && ((tc0 = tc1[@i_132]) && ((!_31 = @i_78[@i_132]) && ((sign2(x_74, sskgen2(rkCs), r1) = ms4[@i_132]) && ((hostT = hostW[@i_132]) && (n1 = n5[@i_132])))))) then
          if defined(z_230[@i_132]) && (z_230[@i_132] = m24) then
          event fullCK(hostZ, hostT, n1, m21, TGT_38, m24);
          out(c18[!_31], acceptC1(hostZ, hostT))
        orfind  suchthat defined(z_201[@i_132], n5[@i_132], hostW[@i_132], ms4[@i_132], tc1[@i_132], ms3[@i_132]) && ((certC = ms3[@i_132]) && ((tc0 = tc1[@i_132]) && ((!_31 = @i_78[@i_132]) && ((sign2(x_74, sskgen2(rkCs), r1) = ms4[@i_132]) && ((hostT = hostW[@i_132]) && (n1 = n5[@i_132])))))) then
          if defined(z_201[@i_132]) && (z_201[@i_132] = m24) then
          event fullCK(hostZ, hostT, n1, m21, TGT_38, m24);
          out(c18[!_31], acceptC1(hostZ, hostT))
    |
      ! !_32 <= N
      in(c22[!_32], (hostY: client, pkY: pkey, spkY: spkey, ms3: signature, tc1: timest, n4: nonce, ms4: signature, hostV: client, hostW: tgs, n5: nonce));
      if (hostV = hostY) then
      if (((hostY = C) && ((pkY = pkC) && (spkY = spkC))) && check2(concat1(hostY, pkY, spkY), pkCA, ms3)) then
      find @i_78 <= N suchthat defined(n2[@i_78], tc0[@i_78], x_74[@i_78]) && (((tc1 = tc0[@i_78]) && (n4 = n2[@i_78])) && check2(padno(tc1, n4), spkY, ms4)) then
        find j1 <= N2 suchthat defined(Lkey[j1], Qkey_347[j1], Lhost[j1]) && (Lhost[j1] = hostW) then
          new s3_349: symkeyseed;
          let AK_35: key = kgen(s3_349) in
          new tk_350: timest;
          new r4_351: symseed;
          let TGT_37: maxmac = encsym(concat5(AK_35, tk_350, hostY), Lkey[j1], r4_351) in
          new r5_352: symseed;
          new s1_353: symkeyseed;
          let z_230: maxmac = encsym2(Zconcat4, kgen2(s1_353), r5_352) in
          new r7_354: seed;
          let m2_118: bitstring = enc2(Z, pkY, r7_354) in
          let m5: bitstring = (m2_118, hostY, TGT_37, z_230) in
          event fullKC(hostY, hostW, n5, m2_118, TGT_37, z_230);
          out(c23[!_32], m5)
        orfind j1 <= N2 suchthat defined(rKt, Qkey_348[j1], Lhost[j1]) && (Lhost[j1] = hostW) then
          new s3_355: symkeyseed;
          let AK_35: key = kgen(s3_355) in
          new tk_356: timest;
          new r4_357: symseed;
          let x_374: maxenc = concat5(AK_35, tk_356, hostY) in
          let z_373: maxmac = encsym(x_374, kgen2(rKt), r4_357) in
          let TGT_37: maxmac = z_373 in
          new r5_358: symseed;
          new s1_359: symkeyseed;
          let z_230: maxmac = encsym2(Zconcat4, kgen2(s1_359), r5_358) in
          new r7_360: seed;
          let m2_118: bitstring = enc2(Z, pkY, r7_360) in
          let m5: bitstring = (m2_118, hostY, TGT_37, z_230) in
          event fullKC(hostY, hostW, n5, m2_118, TGT_37, z_230);
          out(c23[!_32], m5)
      orfind @i_78 <= N suchthat defined(n2[@i_78], tc0[@i_78], x_76[@i_78]) && (((tc1 = tc0[@i_78]) && (n4 = n2[@i_78])) && check2(padno(tc1, n4), spkY, ms4)) then
        find j1 <= N2 suchthat defined(Lkey[j1], Qkey_347[j1], Lhost[j1]) && (Lhost[j1] = hostW) then
          new s3_361: symkeyseed;
          let AK_35: key = kgen(s3_361) in
          new r4_362: symseed;
          new tk_363: timest;
          let TGT_37: maxmac = encsym(concat5(AK_35, tk_363, hostY), Lkey[j1], r4_362) in
          new s1_364: symkeyseed;
          new r5_365: symseed;
          let z_201: maxmac = encsym2(Zconcat4, kgen2(s1_364), r5_365) in
          new r7_366: seed;
          let m2_123: bitstring = enc2(Z, pkY, r7_366) in
          let m5: bitstring = (m2_123, hostY, TGT_37, z_201) in
          event fullKC(hostY, hostW, n5, m2_123, TGT_37, z_201);
          out(c23[!_32], m5)
        orfind j1 <= N2 suchthat defined(rKt, Qkey_348[j1], Lhost[j1]) && (Lhost[j1] = hostW) then
          new s3_367: symkeyseed;
          let AK_35: key = kgen(s3_367) in
          new r4_368: symseed;
          new tk_369: timest;
          let x_377: maxenc = concat5(AK_35, tk_369, hostY) in
          let z_376: maxmac = encsym(x_377, kgen2(rKt), r4_368) in
          let TGT_37: maxmac = z_376 in
          new s1_370: symkeyseed;
          new r5_371: symseed;
          let z_201: maxmac = encsym2(Zconcat4, kgen2(s1_370), r5_371) in
          new r7_372: seed;
          let m2_123: bitstring = enc2(Z, pkY, r7_372) in
          let m5: bitstring = (m2_123, hostY, TGT_37, z_201) in
          event fullKC(hostY, hostW, n5, m2_123, TGT_37, z_201);
          out(c23[!_32], m5)
    )
  |
    ! !_33 <= N2
    in(c21[!_33], (Lhost: tgs, Lkey: key));
    if (Lhost = T) then
      let Qkey_348: key = cst_key
    else
      let Qkey_347: key = cst_key
  )
|
  ! !_34 <= N2
  in(c16[!_34], (Mhost1: tgs, Mhost2: server, Mkey: key))
)


Applying move new all binders yields

Game 60 is
in(start, ());
new rkC: keyseed;
let pkC: pkey = pkgen2(rkC) in
new rkCs: skeyseed;
let spkC: spkey = spkgen2(rkCs) in
new rkKs: skeyseed;
let spkK: spkey = spkgen2(rkKs) in
new rkCA: skeyseed;
let pkCA: spkey = spkgen2(rkCA) in
new rKt: symkeyseed;
let x_53: sblocksize = concat1(C, pkC, spkC) in
new q1: sseed;
let certC: signature = sign2(x_53, sskgen2(rkCA), q1) in
out(c25, (pkC, spkC, spkK, pkCA));
(
  (
    (
      ! !_31 <= N
      in(c1[!_31], hostT: tgs);
      new n2: nonce;
      new tc0: timest;
      let x_76: sblocksize = padno(tc0, n2) in
      new n1: nonce;
      new r1: sseed;
      out(c2[!_31], (C, pkC, spkC, certC, tc0, n2, sign2(x_76, sskgen2(rkCs), r1), C, hostT, n1));
      in(c3[!_31], (m21: bitstring, =C, TGT_38: maxmac, m24: maxmac));
      find @i_133 <= N suchthat defined(z_230[@i_133], n5[@i_133], hostW[@i_133], ms4[@i_133], tc1[@i_133], ms3[@i_133], m2_118[@i_133]) && (m21 = m2_118[@i_133]) then
        let hostZ: kas = K in
        let x_74: sblocksize = padno(tc0, n2) in
        find  suchthat defined(z_230[@i_133], n5[@i_133], hostW[@i_133], ms4[@i_133], tc1[@i_133], ms3[@i_133]) && ((certC = ms3[@i_133]) && ((tc0 = tc1[@i_133]) && ((!_31 = @i_78[@i_133]) && ((sign2(x_74, sskgen2(rkCs), r1) = ms4[@i_133]) && ((hostT = hostW[@i_133]) && (n1 = n5[@i_133])))))) then
          if defined(z_230[@i_133]) && (z_230[@i_133] = m24) then
          event fullCK(hostZ, hostT, n1, m21, TGT_38, m24);
          out(c18[!_31], acceptC1(hostZ, hostT))
        orfind  suchthat defined(z_201[@i_133], n5[@i_133], hostW[@i_133], ms4[@i_133], tc1[@i_133], ms3[@i_133]) && ((certC = ms3[@i_133]) && ((tc0 = tc1[@i_133]) && ((!_31 = @i_78[@i_133]) && ((sign2(x_74, sskgen2(rkCs), r1) = ms4[@i_133]) && ((hostT = hostW[@i_133]) && (n1 = n5[@i_133])))))) then
          if defined(z_201[@i_133]) && (z_201[@i_133] = m24) then
          event fullCK(hostZ, hostT, n1, m21, TGT_38, m24);
          out(c18[!_31], acceptC1(hostZ, hostT))
      orfind @i_132 <= N suchthat defined(z_201[@i_132], n5[@i_132], hostW[@i_132], ms4[@i_132], tc1[@i_132], ms3[@i_132], m2_123[@i_132]) && (m21 = m2_123[@i_132]) then
        let hostZ: kas = K in
        let x_74: sblocksize = padno(tc0, n2) in
        find  suchthat defined(z_230[@i_132], n5[@i_132], hostW[@i_132], ms4[@i_132], tc1[@i_132], ms3[@i_132]) && ((certC = ms3[@i_132]) && ((tc0 = tc1[@i_132]) && ((!_31 = @i_78[@i_132]) && ((sign2(x_74, sskgen2(rkCs), r1) = ms4[@i_132]) && ((hostT = hostW[@i_132]) && (n1 = n5[@i_132])))))) then
          if defined(z_230[@i_132]) && (z_230[@i_132] = m24) then
          event fullCK(hostZ, hostT, n1, m21, TGT_38, m24);
          out(c18[!_31], acceptC1(hostZ, hostT))
        orfind  suchthat defined(z_201[@i_132], n5[@i_132], hostW[@i_132], ms4[@i_132], tc1[@i_132], ms3[@i_132]) && ((certC = ms3[@i_132]) && ((tc0 = tc1[@i_132]) && ((!_31 = @i_78[@i_132]) && ((sign2(x_74, sskgen2(rkCs), r1) = ms4[@i_132]) && ((hostT = hostW[@i_132]) && (n1 = n5[@i_132])))))) then
          if defined(z_201[@i_132]) && (z_201[@i_132] = m24) then
          event fullCK(hostZ, hostT, n1, m21, TGT_38, m24);
          out(c18[!_31], acceptC1(hostZ, hostT))
    |
      ! !_32 <= N
      in(c22[!_32], (hostY: client, pkY: pkey, spkY: spkey, ms3: signature, tc1: timest, n4: nonce, ms4: signature, hostV: client, hostW: tgs, n5: nonce));
      if (hostV = hostY) then
      if (((hostY = C) && ((pkY = pkC) && (spkY = spkC))) && check2(concat1(hostY, pkY, spkY), pkCA, ms3)) then
      find @i_78 <= N suchthat defined(n2[@i_78], tc0[@i_78], x_74[@i_78]) && (((tc1 = tc0[@i_78]) && (n4 = n2[@i_78])) && check2(padno(tc1, n4), spkY, ms4)) then
        find j1 <= N2 suchthat defined(Lkey[j1], Qkey_347[j1], Lhost[j1]) && (Lhost[j1] = hostW) then
          new s3_349: symkeyseed;
          let AK_35: key = kgen(s3_349) in
          new r4_351: symseed;
          new tk_350: timest;
          let TGT_37: maxmac = encsym(concat5(AK_35, tk_350, hostY), Lkey[j1], r4_351) in
          new s1_353: symkeyseed;
          new r5_352: symseed;
          let z_230: maxmac = encsym2(Zconcat4, kgen2(s1_353), r5_352) in
          new r7_354: seed;
          let m2_118: bitstring = enc2(Z, pkY, r7_354) in
          let m5: bitstring = (m2_118, hostY, TGT_37, z_230) in
          event fullKC(hostY, hostW, n5, m2_118, TGT_37, z_230);
          out(c23[!_32], m5)
        orfind j1 <= N2 suchthat defined(rKt, Qkey_348[j1], Lhost[j1]) && (Lhost[j1] = hostW) then
          new s3_355: symkeyseed;
          let AK_35: key = kgen(s3_355) in
          new tk_356: timest;
          let x_374: maxenc = concat5(AK_35, tk_356, hostY) in
          new r4_357: symseed;
          let z_373: maxmac = encsym(x_374, kgen2(rKt), r4_357) in
          let TGT_37: maxmac = z_373 in
          new s1_359: symkeyseed;
          new r5_358: symseed;
          let z_230: maxmac = encsym2(Zconcat4, kgen2(s1_359), r5_358) in
          new r7_360: seed;
          let m2_118: bitstring = enc2(Z, pkY, r7_360) in
          let m5: bitstring = (m2_118, hostY, TGT_37, z_230) in
          event fullKC(hostY, hostW, n5, m2_118, TGT_37, z_230);
          out(c23[!_32], m5)
      orfind @i_78 <= N suchthat defined(n2[@i_78], tc0[@i_78], x_76[@i_78]) && (((tc1 = tc0[@i_78]) && (n4 = n2[@i_78])) && check2(padno(tc1, n4), spkY, ms4)) then
        find j1 <= N2 suchthat defined(Lkey[j1], Qkey_347[j1], Lhost[j1]) && (Lhost[j1] = hostW) then
          new s3_361: symkeyseed;
          let AK_35: key = kgen(s3_361) in
          new tk_363: timest;
          new r4_362: symseed;
          let TGT_37: maxmac = encsym(concat5(AK_35, tk_363, hostY), Lkey[j1], r4_362) in
          new r5_365: symseed;
          new s1_364: symkeyseed;
          let z_201: maxmac = encsym2(Zconcat4, kgen2(s1_364), r5_365) in
          new r7_366: seed;
          let m2_123: bitstring = enc2(Z, pkY, r7_366) in
          let m5: bitstring = (m2_123, hostY, TGT_37, z_201) in
          event fullKC(hostY, hostW, n5, m2_123, TGT_37, z_201);
          out(c23[!_32], m5)
        orfind j1 <= N2 suchthat defined(rKt, Qkey_348[j1], Lhost[j1]) && (Lhost[j1] = hostW) then
          new s3_367: symkeyseed;
          let AK_35: key = kgen(s3_367) in
          new tk_369: timest;
          let x_377: maxenc = concat5(AK_35, tk_369, hostY) in
          new r4_368: symseed;
          let z_376: maxmac = encsym(x_377, kgen2(rKt), r4_368) in
          let TGT_37: maxmac = z_376 in
          new r5_371: symseed;
          new s1_370: symkeyseed;
          let z_201: maxmac = encsym2(Zconcat4, kgen2(s1_370), r5_371) in
          new r7_372: seed;
          let m2_123: bitstring = enc2(Z, pkY, r7_372) in
          let m5: bitstring = (m2_123, hostY, TGT_37, z_201) in
          event fullKC(hostY, hostW, n5, m2_123, TGT_37, z_201);
          out(c23[!_32], m5)
    )
  |
    ! !_33 <= N2
    in(c21[!_33], (Lhost: tgs, Lkey: key));
    if (Lhost = T) then
      let Qkey_348: key = cst_key
    else
      let Qkey_347: key = cst_key
  )
|
  ! !_34 <= N2
  in(c16[!_34], (Mhost1: tgs, Mhost2: server, Mkey: key))
)


Applying remove assignments of useless yields

Game 61 is
in(start, ());
new rkC: keyseed;
let pkC: pkey = pkgen2(rkC) in
new rkCs: skeyseed;
let spkC: spkey = spkgen2(rkCs) in
new rkKs: skeyseed;
let spkK: spkey = spkgen2(rkKs) in
new rkCA: skeyseed;
let pkCA: spkey = spkgen2(rkCA) in
new rKt: symkeyseed;
let x_53: sblocksize = concat1(C, pkC, spkC) in
new q1: sseed;
let certC: signature = sign2(x_53, sskgen2(rkCA), q1) in
out(c25, (pkC, spkC, spkK, pkCA));
(
  (
    (
      ! !_31 <= N
      in(c1[!_31], hostT: tgs);
      new n2: nonce;
      new tc0: timest;
      let x_76: sblocksize = padno(tc0, n2) in
      new n1: nonce;
      new r1: sseed;
      out(c2[!_31], (C, pkC, spkC, certC, tc0, n2, sign2(x_76, sskgen2(rkCs), r1), C, hostT, n1));
      in(c3[!_31], (m21: bitstring, =C, TGT_38: maxmac, m24: maxmac));
      find @i_133 <= N suchthat defined(z_230[@i_133], n5[@i_133], hostW[@i_133], ms4[@i_133], tc1[@i_133], ms3[@i_133], m2_118[@i_133]) && (m21 = m2_118[@i_133]) then
        let hostZ: kas = K in
        let x_74: sblocksize = padno(tc0, n2) in
        find  suchthat defined(z_230[@i_133], n5[@i_133], hostW[@i_133], ms4[@i_133], tc1[@i_133], ms3[@i_133]) && ((certC = ms3[@i_133]) && ((tc0 = tc1[@i_133]) && ((!_31 = @i_78[@i_133]) && ((sign2(x_74, sskgen2(rkCs), r1) = ms4[@i_133]) && ((hostT = hostW[@i_133]) && (n1 = n5[@i_133])))))) then
          if defined(z_230[@i_133]) && (z_230[@i_133] = m24) then
          event fullCK(hostZ, hostT, n1, m21, TGT_38, m24);
          out(c18[!_31], acceptC1(hostZ, hostT))
        orfind  suchthat defined(z_201[@i_133], n5[@i_133], hostW[@i_133], ms4[@i_133], tc1[@i_133], ms3[@i_133]) && ((certC = ms3[@i_133]) && ((tc0 = tc1[@i_133]) && ((!_31 = @i_78[@i_133]) && ((sign2(x_74, sskgen2(rkCs), r1) = ms4[@i_133]) && ((hostT = hostW[@i_133]) && (n1 = n5[@i_133])))))) then
          if defined(z_201[@i_133]) && (z_201[@i_133] = m24) then
          event fullCK(hostZ, hostT, n1, m21, TGT_38, m24);
          out(c18[!_31], acceptC1(hostZ, hostT))
      orfind @i_132 <= N suchthat defined(z_201[@i_132], n5[@i_132], hostW[@i_132], ms4[@i_132], tc1[@i_132], ms3[@i_132], m2_123[@i_132]) && (m21 = m2_123[@i_132]) then
        let hostZ: kas = K in
        let x_74: sblocksize = padno(tc0, n2) in
        find  suchthat defined(z_230[@i_132], n5[@i_132], hostW[@i_132], ms4[@i_132], tc1[@i_132], ms3[@i_132]) && ((certC = ms3[@i_132]) && ((tc0 = tc1[@i_132]) && ((!_31 = @i_78[@i_132]) && ((sign2(x_74, sskgen2(rkCs), r1) = ms4[@i_132]) && ((hostT = hostW[@i_132]) && (n1 = n5[@i_132])))))) then
          if defined(z_230[@i_132]) && (z_230[@i_132] = m24) then
          event fullCK(hostZ, hostT, n1, m21, TGT_38, m24);
          out(c18[!_31], acceptC1(hostZ, hostT))
        orfind  suchthat defined(z_201[@i_132], n5[@i_132], hostW[@i_132], ms4[@i_132], tc1[@i_132], ms3[@i_132]) && ((certC = ms3[@i_132]) && ((tc0 = tc1[@i_132]) && ((!_31 = @i_78[@i_132]) && ((sign2(x_74, sskgen2(rkCs), r1) = ms4[@i_132]) && ((hostT = hostW[@i_132]) && (n1 = n5[@i_132])))))) then
          if defined(z_201[@i_132]) && (z_201[@i_132] = m24) then
          event fullCK(hostZ, hostT, n1, m21, TGT_38, m24);
          out(c18[!_31], acceptC1(hostZ, hostT))
    |
      ! !_32 <= N
      in(c22[!_32], (hostY: client, pkY: pkey, spkY: spkey, ms3: signature, tc1: timest, n4: nonce, ms4: signature, hostV: client, hostW: tgs, n5: nonce));
      if (hostV = hostY) then
      if (((hostY = C) && ((pkY = pkC) && (spkY = spkC))) && check2(concat1(hostY, pkY, spkY), pkCA, ms3)) then
      find @i_78 <= N suchthat defined(n2[@i_78], tc0[@i_78], x_74[@i_78]) && (((tc1 = tc0[@i_78]) && (n4 = n2[@i_78])) && check2(padno(tc1, n4), spkY, ms4)) then
        find j1 <= N2 suchthat defined(Lkey[j1], Qkey_347[j1], Lhost[j1]) && (Lhost[j1] = hostW) then
          new s3_349: symkeyseed;
          let AK_35: key = kgen(s3_349) in
          new r4_351: symseed;
          new tk_350: timest;
          let TGT_37: maxmac = encsym(concat5(AK_35, tk_350, hostY), Lkey[j1], r4_351) in
          new s1_353: symkeyseed;
          new r5_352: symseed;
          let z_230: maxmac = encsym2(Zconcat4, kgen2(s1_353), r5_352) in
          new r7_354: seed;
          let m2_118: bitstring = enc2(Z, pkY, r7_354) in
          let m5: bitstring = (m2_118, hostY, TGT_37, z_230) in
          event fullKC(hostY, hostW, n5, m2_118, TGT_37, z_230);
          out(c23[!_32], m5)
        orfind j1 <= N2 suchthat defined(rKt, Qkey_348[j1], Lhost[j1]) && (Lhost[j1] = hostW) then
          new s3_355: symkeyseed;
          let AK_35: key = kgen(s3_355) in
          new tk_356: timest;
          let x_374: maxenc = concat5(AK_35, tk_356, hostY) in
          new r4_357: symseed;
          let z_373: maxmac = encsym(x_374, kgen2(rKt), r4_357) in
          new s1_359: symkeyseed;
          new r5_358: symseed;
          let z_230: maxmac = encsym2(Zconcat4, kgen2(s1_359), r5_358) in
          new r7_360: seed;
          let m2_118: bitstring = enc2(Z, pkY, r7_360) in
          let m5: bitstring = (m2_118, hostY, z_373, z_230) in
          event fullKC(hostY, hostW, n5, m2_118, z_373, z_230);
          out(c23[!_32], m5)
      orfind @i_78 <= N suchthat defined(n2[@i_78], tc0[@i_78], x_76[@i_78]) && (((tc1 = tc0[@i_78]) && (n4 = n2[@i_78])) && check2(padno(tc1, n4), spkY, ms4)) then
        find j1 <= N2 suchthat defined(Lkey[j1], Qkey_347[j1], Lhost[j1]) && (Lhost[j1] = hostW) then
          new s3_361: symkeyseed;
          let AK_35: key = kgen(s3_361) in
          new tk_363: timest;
          new r4_362: symseed;
          let TGT_37: maxmac = encsym(concat5(AK_35, tk_363, hostY), Lkey[j1], r4_362) in
          new r5_365: symseed;
          new s1_364: symkeyseed;
          let z_201: maxmac = encsym2(Zconcat4, kgen2(s1_364), r5_365) in
          new r7_366: seed;
          let m2_123: bitstring = enc2(Z, pkY, r7_366) in
          let m5: bitstring = (m2_123, hostY, TGT_37, z_201) in
          event fullKC(hostY, hostW, n5, m2_123, TGT_37, z_201);
          out(c23[!_32], m5)
        orfind j1 <= N2 suchthat defined(rKt, Qkey_348[j1], Lhost[j1]) && (Lhost[j1] = hostW) then
          new s3_367: symkeyseed;
          let AK_35: key = kgen(s3_367) in
          new tk_369: timest;
          let x_377: maxenc = concat5(AK_35, tk_369, hostY) in
          new r4_368: symseed;
          let z_376: maxmac = encsym(x_377, kgen2(rKt), r4_368) in
          new r5_371: symseed;
          new s1_370: symkeyseed;
          let z_201: maxmac = encsym2(Zconcat4, kgen2(s1_370), r5_371) in
          new r7_372: seed;
          let m2_123: bitstring = enc2(Z, pkY, r7_372) in
          let m5: bitstring = (m2_123, hostY, z_376, z_201) in
          event fullKC(hostY, hostW, n5, m2_123, z_376, z_201);
          out(c23[!_32], m5)
    )
  |
    ! !_33 <= N2
    in(c21[!_33], (Lhost: tgs, Lkey: key));
    if (Lhost = T) then
      let Qkey_348: key = cst_key
    else
      let Qkey_347: key = cst_key
  )
|
  ! !_34 <= N2
  in(c16[!_34], (Mhost1: tgs, Mhost2: server, Mkey: key))
)


Applying equivalence
equiv ! !_15 <= N2 new r: symkeyseed; ! !_16 <= N new r2: symseed; (x: maxenc) -> encsym(x, kgen2(r), r2)
<=(N2 * Penc(time, N))=>
      ! !_17 <= N2 new r: symkeyseed; ! !_18 <= N new r2: symseed; (x: maxenc) -> encsym2(Z2(x), kgen2(r), r2)
 [Difference of probability Penc(time + time(context for game 61), N)] yields

Game 62 is
in(start, ());
new rkC: keyseed;
let pkC: pkey = pkgen2(rkC) in
new rkCs: skeyseed;
let spkC: spkey = spkgen2(rkCs) in
new rkKs: skeyseed;
let spkK: spkey = spkgen2(rkKs) in
new rkCA: skeyseed;
let pkCA: spkey = spkgen2(rkCA) in
new rKt: symkeyseed;
let x_53: sblocksize = concat1(C, pkC, spkC) in
new q1: sseed;
let certC: signature = sign2(x_53, sskgen2(rkCA), q1) in
out(c25, (pkC, spkC, spkK, pkCA));
(
  (
    (
      ! !_31 <= N
      in(c1[!_31], hostT: tgs);
      new n2: nonce;
      new tc0: timest;
      let x_76: sblocksize = padno(tc0, n2) in
      new n1: nonce;
      new r1: sseed;
      out(c2[!_31], (C, pkC, spkC, certC, tc0, n2, sign2(x_76, sskgen2(rkCs), r1), C, hostT, n1));
      in(c3[!_31], (m21: bitstring, =C, TGT_38: maxmac, m24: maxmac));
      find @i_133 <= N suchthat defined(z_230[@i_133], n5[@i_133], hostW[@i_133], ms4[@i_133], tc1[@i_133], ms3[@i_133], m2_118[@i_133]) && (m21 = m2_118[@i_133]) then
        let hostZ: kas = K in
        let x_74: sblocksize = padno(tc0, n2) in
        find  suchthat defined(z_230[@i_133], n5[@i_133], hostW[@i_133], ms4[@i_133], tc1[@i_133], ms3[@i_133]) && ((certC = ms3[@i_133]) && ((tc0 = tc1[@i_133]) && ((!_31 = @i_78[@i_133]) && ((sign2(x_74, sskgen2(rkCs), r1) = ms4[@i_133]) && ((hostT = hostW[@i_133]) && (n1 = n5[@i_133])))))) then
          if defined(z_230[@i_133]) && (z_230[@i_133] = m24) then
          event fullCK(hostZ, hostT, n1, m21, TGT_38, m24);
          out(c18[!_31], acceptC1(hostZ, hostT))
        orfind  suchthat defined(z_201[@i_133], n5[@i_133], hostW[@i_133], ms4[@i_133], tc1[@i_133], ms3[@i_133]) && ((certC = ms3[@i_133]) && ((tc0 = tc1[@i_133]) && ((!_31 = @i_78[@i_133]) && ((sign2(x_74, sskgen2(rkCs), r1) = ms4[@i_133]) && ((hostT = hostW[@i_133]) && (n1 = n5[@i_133])))))) then
          if defined(z_201[@i_133]) && (z_201[@i_133] = m24) then
          event fullCK(hostZ, hostT, n1, m21, TGT_38, m24);
          out(c18[!_31], acceptC1(hostZ, hostT))
      orfind @i_132 <= N suchthat defined(z_201[@i_132], n5[@i_132], hostW[@i_132], ms4[@i_132], tc1[@i_132], ms3[@i_132], m2_123[@i_132]) && (m21 = m2_123[@i_132]) then
        let hostZ: kas = K in
        let x_74: sblocksize = padno(tc0, n2) in
        find  suchthat defined(z_230[@i_132], n5[@i_132], hostW[@i_132], ms4[@i_132], tc1[@i_132], ms3[@i_132]) && ((certC = ms3[@i_132]) && ((tc0 = tc1[@i_132]) && ((!_31 = @i_78[@i_132]) && ((sign2(x_74, sskgen2(rkCs), r1) = ms4[@i_132]) && ((hostT = hostW[@i_132]) && (n1 = n5[@i_132])))))) then
          if defined(z_230[@i_132]) && (z_230[@i_132] = m24) then
          event fullCK(hostZ, hostT, n1, m21, TGT_38, m24);
          out(c18[!_31], acceptC1(hostZ, hostT))
        orfind  suchthat defined(z_201[@i_132], n5[@i_132], hostW[@i_132], ms4[@i_132], tc1[@i_132], ms3[@i_132]) && ((certC = ms3[@i_132]) && ((tc0 = tc1[@i_132]) && ((!_31 = @i_78[@i_132]) && ((sign2(x_74, sskgen2(rkCs), r1) = ms4[@i_132]) && ((hostT = hostW[@i_132]) && (n1 = n5[@i_132])))))) then
          if defined(z_201[@i_132]) && (z_201[@i_132] = m24) then
          event fullCK(hostZ, hostT, n1, m21, TGT_38, m24);
          out(c18[!_31], acceptC1(hostZ, hostT))
    |
      ! !_32 <= N
      in(c22[!_32], (hostY: client, pkY: pkey, spkY: spkey, ms3: signature, tc1: timest, n4: nonce, ms4: signature, hostV: client, hostW: tgs, n5: nonce));
      if (hostV = hostY) then
      if (((hostY = C) && ((pkY = pkC) && (spkY = spkC))) && check2(concat1(hostY, pkY, spkY), pkCA, ms3)) then
      find @i_78 <= N suchthat defined(n2[@i_78], tc0[@i_78], x_74[@i_78]) && (((tc1 = tc0[@i_78]) && (n4 = n2[@i_78])) && check2(padno(tc1, n4), spkY, ms4)) then
        find j1 <= N2 suchthat defined(Lkey[j1], Qkey_347[j1], Lhost[j1]) && (Lhost[j1] = hostW) then
          new s3_349: symkeyseed;
          let AK_35: key = kgen(s3_349) in
          new r4_351: symseed;
          new tk_350: timest;
          let TGT_37: maxmac = encsym(concat5(AK_35, tk_350, hostY), Lkey[j1], r4_351) in
          new s1_353: symkeyseed;
          new r5_352: symseed;
          let z_230: maxmac = encsym2(Zconcat4, kgen2(s1_353), r5_352) in
          new r7_354: seed;
          let m2_118: bitstring = enc2(Z, pkY, r7_354) in
          let m5: bitstring = (m2_118, hostY, TGT_37, z_230) in
          event fullKC(hostY, hostW, n5, m2_118, TGT_37, z_230);
          out(c23[!_32], m5)
        orfind j1 <= N2 suchthat defined(rKt, Qkey_348[j1], Lhost[j1]) && (Lhost[j1] = hostW) then
          new s3_355: symkeyseed;
          let AK_35: key = kgen(s3_355) in
          new tk_356: timest;
          let x_374: maxenc = concat5(AK_35, tk_356, hostY) in
          new r4_357: symseed;
          let z_373: maxmac = encsym2(Z2(x_374), kgen2(rKt), r4_357) in
          new s1_359: symkeyseed;
          new r5_358: symseed;
          let z_230: maxmac = encsym2(Zconcat4, kgen2(s1_359), r5_358) in
          new r7_360: seed;
          let m2_118: bitstring = enc2(Z, pkY, r7_360) in
          let m5: bitstring = (m2_118, hostY, z_373, z_230) in
          event fullKC(hostY, hostW, n5, m2_118, z_373, z_230);
          out(c23[!_32], m5)
      orfind @i_78 <= N suchthat defined(n2[@i_78], tc0[@i_78], x_76[@i_78]) && (((tc1 = tc0[@i_78]) && (n4 = n2[@i_78])) && check2(padno(tc1, n4), spkY, ms4)) then
        find j1 <= N2 suchthat defined(Lkey[j1], Qkey_347[j1], Lhost[j1]) && (Lhost[j1] = hostW) then
          new s3_361: symkeyseed;
          let AK_35: key = kgen(s3_361) in
          new tk_363: timest;
          new r4_362: symseed;
          let TGT_37: maxmac = encsym(concat5(AK_35, tk_363, hostY), Lkey[j1], r4_362) in
          new r5_365: symseed;
          new s1_364: symkeyseed;
          let z_201: maxmac = encsym2(Zconcat4, kgen2(s1_364), r5_365) in
          new r7_366: seed;
          let m2_123: bitstring = enc2(Z, pkY, r7_366) in
          let m5: bitstring = (m2_123, hostY, TGT_37, z_201) in
          event fullKC(hostY, hostW, n5, m2_123, TGT_37, z_201);
          out(c23[!_32], m5)
        orfind j1 <= N2 suchthat defined(rKt, Qkey_348[j1], Lhost[j1]) && (Lhost[j1] = hostW) then
          new s3_367: symkeyseed;
          let AK_35: key = kgen(s3_367) in
          new tk_369: timest;
          let x_377: maxenc = concat5(AK_35, tk_369, hostY) in
          new r4_368: symseed;
          let z_376: maxmac = encsym2(Z2(x_377), kgen2(rKt), r4_368) in
          new r5_371: symseed;
          new s1_370: symkeyseed;
          let z_201: maxmac = encsym2(Zconcat4, kgen2(s1_370), r5_371) in
          new r7_372: seed;
          let m2_123: bitstring = enc2(Z, pkY, r7_372) in
          let m5: bitstring = (m2_123, hostY, z_376, z_201) in
          event fullKC(hostY, hostW, n5, m2_123, z_376, z_201);
          out(c23[!_32], m5)
    )
  |
    ! !_33 <= N2
    in(c21[!_33], (Lhost: tgs, Lkey: key));
    if (Lhost = T) then
      let Qkey_348: key = cst_key
    else
      let Qkey_347: key = cst_key
  )
|
  ! !_34 <= N2
  in(c16[!_34], (Mhost1: tgs, Mhost2: server, Mkey: key))
)


Applying simplify yields

Game 63 is
in(start, ());
new rkC: keyseed;
let pkC: pkey = pkgen2(rkC) in
new rkCs: skeyseed;
let spkC: spkey = spkgen2(rkCs) in
new rkKs: skeyseed;
let spkK: spkey = spkgen2(rkKs) in
new rkCA: skeyseed;
let pkCA: spkey = spkgen2(rkCA) in
new rKt: symkeyseed;
let x_53: sblocksize = concat1(C, pkC, spkC) in
new q1: sseed;
let certC: signature = sign2(x_53, sskgen2(rkCA), q1) in
out(c25, (pkC, spkC, spkK, pkCA));
(
  (
    (
      ! !_31 <= N
      in(c1[!_31], hostT: tgs);
      new n2: nonce;
      new tc0: timest;
      let x_76: sblocksize = padno(tc0, n2) in
      new n1: nonce;
      new r1: sseed;
      out(c2[!_31], (C, pkC, spkC, certC, tc0, n2, sign2(x_76, sskgen2(rkCs), r1), C, hostT, n1));
      in(c3[!_31], (m21: bitstring, =C, TGT_38: maxmac, m24: maxmac));
      find @i_133 <= N suchthat defined(z_230[@i_133], n5[@i_133], hostW[@i_133], ms4[@i_133], tc1[@i_133], ms3[@i_133], m2_118[@i_133]) && (m21 = m2_118[@i_133]) then
        let hostZ: kas = K in
        let x_74: sblocksize = padno(tc0, n2) in
        find  suchthat defined(z_230[@i_133], n5[@i_133], hostW[@i_133], ms4[@i_133], tc1[@i_133], ms3[@i_133]) && ((certC = ms3[@i_133]) && ((tc0 = tc1[@i_133]) && ((!_31 = @i_78[@i_133]) && ((sign2(x_74, sskgen2(rkCs), r1) = ms4[@i_133]) && ((hostT = hostW[@i_133]) && (n1 = n5[@i_133])))))) then
          if defined(z_230[@i_133]) && (z_230[@i_133] = m24) then
          event fullCK(hostZ, hostT, n1, m21, TGT_38, m24);
          out(c18[!_31], acceptC1(hostZ, hostT))
        orfind  suchthat defined(z_201[@i_133], n5[@i_133], hostW[@i_133], ms4[@i_133], tc1[@i_133], ms3[@i_133]) && ((certC = ms3[@i_133]) && ((tc0 = tc1[@i_133]) && ((!_31 = @i_78[@i_133]) && ((sign2(x_74, sskgen2(rkCs), r1) = ms4[@i_133]) && ((hostT = hostW[@i_133]) && (n1 = n5[@i_133])))))) then
          if defined(z_201[@i_133]) && (z_201[@i_133] = m24) then
          event fullCK(hostZ, hostT, n1, m21, TGT_38, m24);
          out(c18[!_31], acceptC1(hostZ, hostT))
      orfind @i_132 <= N suchthat defined(z_201[@i_132], n5[@i_132], hostW[@i_132], ms4[@i_132], tc1[@i_132], ms3[@i_132], m2_123[@i_132]) && (m21 = m2_123[@i_132]) then
        let hostZ: kas = K in
        let x_74: sblocksize = padno(tc0, n2) in
        find  suchthat defined(z_230[@i_132], n5[@i_132], hostW[@i_132], ms4[@i_132], tc1[@i_132], ms3[@i_132]) && ((certC = ms3[@i_132]) && ((tc0 = tc1[@i_132]) && ((!_31 = @i_78[@i_132]) && ((sign2(x_74, sskgen2(rkCs), r1) = ms4[@i_132]) && ((hostT = hostW[@i_132]) && (n1 = n5[@i_132])))))) then
          if defined(z_230[@i_132]) && (z_230[@i_132] = m24) then
          event fullCK(hostZ, hostT, n1, m21, TGT_38, m24);
          out(c18[!_31], acceptC1(hostZ, hostT))
        orfind  suchthat defined(z_201[@i_132], n5[@i_132], hostW[@i_132], ms4[@i_132], tc1[@i_132], ms3[@i_132]) && ((certC = ms3[@i_132]) && ((tc0 = tc1[@i_132]) && ((!_31 = @i_78[@i_132]) && ((sign2(x_74, sskgen2(rkCs), r1) = ms4[@i_132]) && ((hostT = hostW[@i_132]) && (n1 = n5[@i_132])))))) then
          if defined(z_201[@i_132]) && (z_201[@i_132] = m24) then
          event fullCK(hostZ, hostT, n1, m21, TGT_38, m24);
          out(c18[!_31], acceptC1(hostZ, hostT))
    |
      ! !_32 <= N
      in(c22[!_32], (hostY: client, pkY: pkey, spkY: spkey, ms3: signature, tc1: timest, n4: nonce, ms4: signature, hostV: client, hostW: tgs, n5: nonce));
      if (hostV = hostY) then
      if (((hostY = C) && ((pkY = pkC) && (spkY = spkC))) && check2(concat1(hostY, pkY, spkY), pkCA, ms3)) then
      find @i_78 <= N suchthat defined(n2[@i_78], tc0[@i_78], x_74[@i_78]) && (((tc1 = tc0[@i_78]) && (n4 = n2[@i_78])) && check2(padno(tc1, n4), spkY, ms4)) then
        find j1 <= N2 suchthat defined(Lkey[j1], Lhost[j1], Qkey_347[j1]) && (Lhost[j1] = hostW) then
          new s3_349: symkeyseed;
          let AK_35: key = kgen(s3_349) in
          new r4_351: symseed;
          new tk_350: timest;
          let TGT_37: maxmac = encsym(concat5(AK_35, tk_350, hostY), Lkey[j1], r4_351) in
          new s1_353: symkeyseed;
          new r5_352: symseed;
          let z_230: maxmac = encsym2(Zconcat4, kgen2(s1_353), r5_352) in
          new r7_354: seed;
          let m2_118: bitstring = enc2(Z, pkY, r7_354) in
          let m5: bitstring = (m2_118, hostY, TGT_37, z_230) in
          event fullKC(hostY, hostW, n5, m2_118, TGT_37, z_230);
          out(c23[!_32], m5)
        orfind j1 <= N2 suchthat defined(Lhost[j1], Qkey_348[j1]) && (Lhost[j1] = hostW) then
          new s3_355: symkeyseed;
          let AK_35: key = kgen(s3_355) in
          new tk_356: timest;
          let x_374: maxenc = concat5(AK_35, tk_356, hostY) in
          new r4_357: symseed;
          let z_373: maxmac = encsym2(Zconcat5, kgen2(rKt), r4_357) in
          new s1_359: symkeyseed;
          new r5_358: symseed;
          let z_230: maxmac = encsym2(Zconcat4, kgen2(s1_359), r5_358) in
          new r7_360: seed;
          let m2_118: bitstring = enc2(Z, pkY, r7_360) in
          let m5: bitstring = (m2_118, hostY, z_373, z_230) in
          event fullKC(hostY, hostW, n5, m2_118, z_373, z_230);
          out(c23[!_32], m5)
      orfind @i_78 <= N suchthat defined(n2[@i_78], tc0[@i_78], x_76[@i_78]) && (((tc1 = tc0[@i_78]) && (n4 = n2[@i_78])) && check2(padno(tc1, n4), spkY, ms4)) then
        find j1 <= N2 suchthat defined(Lkey[j1], Lhost[j1], Qkey_347[j1]) && (Lhost[j1] = hostW) then
          new s3_361: symkeyseed;
          let AK_35: key = kgen(s3_361) in
          new tk_363: timest;
          new r4_362: symseed;
          let TGT_37: maxmac = encsym(concat5(AK_35, tk_363, hostY), Lkey[j1], r4_362) in
          new r5_365: symseed;
          new s1_364: symkeyseed;
          let z_201: maxmac = encsym2(Zconcat4, kgen2(s1_364), r5_365) in
          new r7_366: seed;
          let m2_123: bitstring = enc2(Z, pkY, r7_366) in
          let m5: bitstring = (m2_123, hostY, TGT_37, z_201) in
          event fullKC(hostY, hostW, n5, m2_123, TGT_37, z_201);
          out(c23[!_32], m5)
        orfind j1 <= N2 suchthat defined(Lhost[j1], Qkey_348[j1]) && (Lhost[j1] = hostW) then
          new s3_367: symkeyseed;
          let AK_35: key = kgen(s3_367) in
          new tk_369: timest;
          let x_377: maxenc = concat5(AK_35, tk_369, hostY) in
          new r4_368: symseed;
          let z_376: maxmac = encsym2(Zconcat5, kgen2(rKt), r4_368) in
          new r5_371: symseed;
          new s1_370: symkeyseed;
          let z_201: maxmac = encsym2(Zconcat4, kgen2(s1_370), r5_371) in
          new r7_372: seed;
          let m2_123: bitstring = enc2(Z, pkY, r7_372) in
          let m5: bitstring = (m2_123, hostY, z_376, z_201) in
          event fullKC(hostY, hostW, n5, m2_123, z_376, z_201);
          out(c23[!_32], m5)
    )
  |
    ! !_33 <= N2
    in(c21[!_33], (Lhost: tgs, Lkey: key));
    if (Lhost = T) then
      let Qkey_348: key = cst_key
    else
      let Qkey_347: key = cst_key
  )
|
  ! !_34 <= N2
  in(c16[!_34], (Mhost1: tgs, Mhost2: server, Mkey: key))
)


Applying move new all binders yields

Game 64 is
in(start, ());
new rkC: keyseed;
let pkC: pkey = pkgen2(rkC) in
new rkCs: skeyseed;
let spkC: spkey = spkgen2(rkCs) in
new rkKs: skeyseed;
let spkK: spkey = spkgen2(rkKs) in
new rkCA: skeyseed;
let pkCA: spkey = spkgen2(rkCA) in
let x_53: sblocksize = concat1(C, pkC, spkC) in
new q1: sseed;
let certC: signature = sign2(x_53, sskgen2(rkCA), q1) in
new rKt: symkeyseed;
out(c25, (pkC, spkC, spkK, pkCA));
(
  (
    (
      ! !_31 <= N
      in(c1[!_31], hostT: tgs);
      new n2: nonce;
      new tc0: timest;
      let x_76: sblocksize = padno(tc0, n2) in
      new r1: sseed;
      new n1: nonce;
      out(c2[!_31], (C, pkC, spkC, certC, tc0, n2, sign2(x_76, sskgen2(rkCs), r1), C, hostT, n1));
      in(c3[!_31], (m21: bitstring, =C, TGT_38: maxmac, m24: maxmac));
      find @i_133 <= N suchthat defined(z_230[@i_133], n5[@i_133], hostW[@i_133], ms4[@i_133], tc1[@i_133], ms3[@i_133], m2_118[@i_133]) && (m21 = m2_118[@i_133]) then
        let hostZ: kas = K in
        let x_74: sblocksize = padno(tc0, n2) in
        find  suchthat defined(z_230[@i_133], n5[@i_133], hostW[@i_133], ms4[@i_133], tc1[@i_133], ms3[@i_133]) && ((certC = ms3[@i_133]) && ((tc0 = tc1[@i_133]) && ((!_31 = @i_78[@i_133]) && ((sign2(x_74, sskgen2(rkCs), r1) = ms4[@i_133]) && ((hostT = hostW[@i_133]) && (n1 = n5[@i_133])))))) then
          if defined(z_230[@i_133]) && (z_230[@i_133] = m24) then
          event fullCK(hostZ, hostT, n1, m21, TGT_38, m24);
          out(c18[!_31], acceptC1(hostZ, hostT))
        orfind  suchthat defined(z_201[@i_133], n5[@i_133], hostW[@i_133], ms4[@i_133], tc1[@i_133], ms3[@i_133]) && ((certC = ms3[@i_133]) && ((tc0 = tc1[@i_133]) && ((!_31 = @i_78[@i_133]) && ((sign2(x_74, sskgen2(rkCs), r1) = ms4[@i_133]) && ((hostT = hostW[@i_133]) && (n1 = n5[@i_133])))))) then
          if defined(z_201[@i_133]) && (z_201[@i_133] = m24) then
          event fullCK(hostZ, hostT, n1, m21, TGT_38, m24);
          out(c18[!_31], acceptC1(hostZ, hostT))
      orfind @i_132 <= N suchthat defined(z_201[@i_132], n5[@i_132], hostW[@i_132], ms4[@i_132], tc1[@i_132], ms3[@i_132], m2_123[@i_132]) && (m21 = m2_123[@i_132]) then
        let hostZ: kas = K in
        let x_74: sblocksize = padno(tc0, n2) in
        find  suchthat defined(z_230[@i_132], n5[@i_132], hostW[@i_132], ms4[@i_132], tc1[@i_132], ms3[@i_132]) && ((certC = ms3[@i_132]) && ((tc0 = tc1[@i_132]) && ((!_31 = @i_78[@i_132]) && ((sign2(x_74, sskgen2(rkCs), r1) = ms4[@i_132]) && ((hostT = hostW[@i_132]) && (n1 = n5[@i_132])))))) then
          if defined(z_230[@i_132]) && (z_230[@i_132] = m24) then
          event fullCK(hostZ, hostT, n1, m21, TGT_38, m24);
          out(c18[!_31], acceptC1(hostZ, hostT))
        orfind  suchthat defined(z_201[@i_132], n5[@i_132], hostW[@i_132], ms4[@i_132], tc1[@i_132], ms3[@i_132]) && ((certC = ms3[@i_132]) && ((tc0 = tc1[@i_132]) && ((!_31 = @i_78[@i_132]) && ((sign2(x_74, sskgen2(rkCs), r1) = ms4[@i_132]) && ((hostT = hostW[@i_132]) && (n1 = n5[@i_132])))))) then
          if defined(z_201[@i_132]) && (z_201[@i_132] = m24) then
          event fullCK(hostZ, hostT, n1, m21, TGT_38, m24);
          out(c18[!_31], acceptC1(hostZ, hostT))
    |
      ! !_32 <= N
      in(c22[!_32], (hostY: client, pkY: pkey, spkY: spkey, ms3: signature, tc1: timest, n4: nonce, ms4: signature, hostV: client, hostW: tgs, n5: nonce));
      if (hostV = hostY) then
      if (((hostY = C) && ((pkY = pkC) && (spkY = spkC))) && check2(concat1(hostY, pkY, spkY), pkCA, ms3)) then
      find @i_78 <= N suchthat defined(n2[@i_78], tc0[@i_78], x_74[@i_78]) && (((tc1 = tc0[@i_78]) && (n4 = n2[@i_78])) && check2(padno(tc1, n4), spkY, ms4)) then
        find j1 <= N2 suchthat defined(Lkey[j1], Lhost[j1], Qkey_347[j1]) && (Lhost[j1] = hostW) then
          new s3_349: symkeyseed;
          let AK_35: key = kgen(s3_349) in
          new tk_350: timest;
          new r4_351: symseed;
          let TGT_37: maxmac = encsym(concat5(AK_35, tk_350, hostY), Lkey[j1], r4_351) in
          new r5_352: symseed;
          new s1_353: symkeyseed;
          let z_230: maxmac = encsym2(Zconcat4, kgen2(s1_353), r5_352) in
          new r7_354: seed;
          let m2_118: bitstring = enc2(Z, pkY, r7_354) in
          let m5: bitstring = (m2_118, hostY, TGT_37, z_230) in
          event fullKC(hostY, hostW, n5, m2_118, TGT_37, z_230);
          out(c23[!_32], m5)
        orfind j1 <= N2 suchthat defined(Lhost[j1], Qkey_348[j1]) && (Lhost[j1] = hostW) then
          new s3_355: symkeyseed;
          let AK_35: key = kgen(s3_355) in
          new tk_356: timest;
          let x_374: maxenc = concat5(AK_35, tk_356, hostY) in
          new r4_357: symseed;
          let z_373: maxmac = encsym2(Zconcat5, kgen2(rKt), r4_357) in
          new r5_358: symseed;
          new s1_359: symkeyseed;
          let z_230: maxmac = encsym2(Zconcat4, kgen2(s1_359), r5_358) in
          new r7_360: seed;
          let m2_118: bitstring = enc2(Z, pkY, r7_360) in
          let m5: bitstring = (m2_118, hostY, z_373, z_230) in
          event fullKC(hostY, hostW, n5, m2_118, z_373, z_230);
          out(c23[!_32], m5)
      orfind @i_78 <= N suchthat defined(n2[@i_78], tc0[@i_78], x_76[@i_78]) && (((tc1 = tc0[@i_78]) && (n4 = n2[@i_78])) && check2(padno(tc1, n4), spkY, ms4)) then
        find j1 <= N2 suchthat defined(Lkey[j1], Lhost[j1], Qkey_347[j1]) && (Lhost[j1] = hostW) then
          new s3_361: symkeyseed;
          let AK_35: key = kgen(s3_361) in
          new r4_362: symseed;
          new tk_363: timest;
          let TGT_37: maxmac = encsym(concat5(AK_35, tk_363, hostY), Lkey[j1], r4_362) in
          new s1_364: symkeyseed;
          new r5_365: symseed;
          let z_201: maxmac = encsym2(Zconcat4, kgen2(s1_364), r5_365) in
          new r7_366: seed;
          let m2_123: bitstring = enc2(Z, pkY, r7_366) in
          let m5: bitstring = (m2_123, hostY, TGT_37, z_201) in
          event fullKC(hostY, hostW, n5, m2_123, TGT_37, z_201);
          out(c23[!_32], m5)
        orfind j1 <= N2 suchthat defined(Lhost[j1], Qkey_348[j1]) && (Lhost[j1] = hostW) then
          new s3_367: symkeyseed;
          let AK_35: key = kgen(s3_367) in
          new tk_369: timest;
          let x_377: maxenc = concat5(AK_35, tk_369, hostY) in
          new r4_368: symseed;
          let z_376: maxmac = encsym2(Zconcat5, kgen2(rKt), r4_368) in
          new s1_370: symkeyseed;
          new r5_371: symseed;
          let z_201: maxmac = encsym2(Zconcat4, kgen2(s1_370), r5_371) in
          new r7_372: seed;
          let m2_123: bitstring = enc2(Z, pkY, r7_372) in
          let m5: bitstring = (m2_123, hostY, z_376, z_201) in
          event fullKC(hostY, hostW, n5, m2_123, z_376, z_201);
          out(c23[!_32], m5)
    )
  |
    ! !_33 <= N2
    in(c21[!_33], (Lhost: tgs, Lkey: key));
    if (Lhost = T) then
      let Qkey_348: key = cst_key
    else
      let Qkey_347: key = cst_key
  )
|
  ! !_34 <= N2
  in(c16[!_34], (Mhost1: tgs, Mhost2: server, Mkey: key))
)


Applying remove assignments of useless yields

Game 65 is
in(start, ());
new rkC: keyseed;
let pkC: pkey = pkgen2(rkC) in
new rkCs: skeyseed;
let spkC: spkey = spkgen2(rkCs) in
new rkKs: skeyseed;
let spkK: spkey = spkgen2(rkKs) in
new rkCA: skeyseed;
let pkCA: spkey = spkgen2(rkCA) in
let x_53: sblocksize = concat1(C, pkC, spkC) in
new q1: sseed;
let certC: signature = sign2(x_53, sskgen2(rkCA), q1) in
new rKt: symkeyseed;
out(c25, (pkC, spkC, spkK, pkCA));
(
  (
    (
      ! !_31 <= N
      in(c1[!_31], hostT: tgs);
      new n2: nonce;
      new tc0: timest;
      let x_76: sblocksize = padno(tc0, n2) in
      new r1: sseed;
      new n1: nonce;
      out(c2[!_31], (C, pkC, spkC, certC, tc0, n2, sign2(x_76, sskgen2(rkCs), r1), C, hostT, n1));
      in(c3[!_31], (m21: bitstring, =C, TGT_38: maxmac, m24: maxmac));
      find @i_133 <= N suchthat defined(z_230[@i_133], n5[@i_133], hostW[@i_133], ms4[@i_133], tc1[@i_133], ms3[@i_133], m2_118[@i_133]) && (m21 = m2_118[@i_133]) then
        let hostZ: kas = K in
        let x_74: sblocksize = padno(tc0, n2) in
        find  suchthat defined(z_230[@i_133], n5[@i_133], hostW[@i_133], ms4[@i_133], tc1[@i_133], ms3[@i_133]) && ((certC = ms3[@i_133]) && ((tc0 = tc1[@i_133]) && ((!_31 = @i_78[@i_133]) && ((sign2(x_74, sskgen2(rkCs), r1) = ms4[@i_133]) && ((hostT = hostW[@i_133]) && (n1 = n5[@i_133])))))) then
          if defined(z_230[@i_133]) && (z_230[@i_133] = m24) then
          event fullCK(hostZ, hostT, n1, m21, TGT_38, m24);
          out(c18[!_31], acceptC1(hostZ, hostT))
        orfind  suchthat defined(z_201[@i_133], n5[@i_133], hostW[@i_133], ms4[@i_133], tc1[@i_133], ms3[@i_133]) && ((certC = ms3[@i_133]) && ((tc0 = tc1[@i_133]) && ((!_31 = @i_78[@i_133]) && ((sign2(x_74, sskgen2(rkCs), r1) = ms4[@i_133]) && ((hostT = hostW[@i_133]) && (n1 = n5[@i_133])))))) then
          if defined(z_201[@i_133]) && (z_201[@i_133] = m24) then
          event fullCK(hostZ, hostT, n1, m21, TGT_38, m24);
          out(c18[!_31], acceptC1(hostZ, hostT))
      orfind @i_132 <= N suchthat defined(z_201[@i_132], n5[@i_132], hostW[@i_132], ms4[@i_132], tc1[@i_132], ms3[@i_132], m2_123[@i_132]) && (m21 = m2_123[@i_132]) then
        let hostZ: kas = K in
        let x_74: sblocksize = padno(tc0, n2) in
        find  suchthat defined(z_230[@i_132], n5[@i_132], hostW[@i_132], ms4[@i_132], tc1[@i_132], ms3[@i_132]) && ((certC = ms3[@i_132]) && ((tc0 = tc1[@i_132]) && ((!_31 = @i_78[@i_132]) && ((sign2(x_74, sskgen2(rkCs), r1) = ms4[@i_132]) && ((hostT = hostW[@i_132]) && (n1 = n5[@i_132])))))) then
          if defined(z_230[@i_132]) && (z_230[@i_132] = m24) then
          event fullCK(hostZ, hostT, n1, m21, TGT_38, m24);
          out(c18[!_31], acceptC1(hostZ, hostT))
        orfind  suchthat defined(z_201[@i_132], n5[@i_132], hostW[@i_132], ms4[@i_132], tc1[@i_132], ms3[@i_132]) && ((certC = ms3[@i_132]) && ((tc0 = tc1[@i_132]) && ((!_31 = @i_78[@i_132]) && ((sign2(x_74, sskgen2(rkCs), r1) = ms4[@i_132]) && ((hostT = hostW[@i_132]) && (n1 = n5[@i_132])))))) then
          if defined(z_201[@i_132]) && (z_201[@i_132] = m24) then
          event fullCK(hostZ, hostT, n1, m21, TGT_38, m24);
          out(c18[!_31], acceptC1(hostZ, hostT))
    |
      ! !_32 <= N
      in(c22[!_32], (hostY: client, pkY: pkey, spkY: spkey, ms3: signature, tc1: timest, n4: nonce, ms4: signature, hostV: client, hostW: tgs, n5: nonce));
      if (hostV = hostY) then
      if (((hostY = C) && ((pkY = pkC) && (spkY = spkC))) && check2(concat1(hostY, pkY, spkY), pkCA, ms3)) then
      find @i_78 <= N suchthat defined(n2[@i_78], tc0[@i_78], x_74[@i_78]) && (((tc1 = tc0[@i_78]) && (n4 = n2[@i_78])) && check2(padno(tc1, n4), spkY, ms4)) then
        find j1 <= N2 suchthat defined(Lkey[j1], Lhost[j1], Qkey_347[j1]) && (Lhost[j1] = hostW) then
          new s3_349: symkeyseed;
          let AK_35: key = kgen(s3_349) in
          new tk_350: timest;
          new r4_351: symseed;
          let TGT_37: maxmac = encsym(concat5(AK_35, tk_350, hostY), Lkey[j1], r4_351) in
          new r5_352: symseed;
          new s1_353: symkeyseed;
          let z_230: maxmac = encsym2(Zconcat4, kgen2(s1_353), r5_352) in
          new r7_354: seed;
          let m2_118: bitstring = enc2(Z, pkY, r7_354) in
          let m5: bitstring = (m2_118, hostY, TGT_37, z_230) in
          event fullKC(hostY, hostW, n5, m2_118, TGT_37, z_230);
          out(c23[!_32], m5)
        orfind j1 <= N2 suchthat defined(Lhost[j1], Qkey_348[j1]) && (Lhost[j1] = hostW) then
          new s3_355: symkeyseed;
          new tk_356: timest;
          new r4_357: symseed;
          let z_373: maxmac = encsym2(Zconcat5, kgen2(rKt), r4_357) in
          new r5_358: symseed;
          new s1_359: symkeyseed;
          let z_230: maxmac = encsym2(Zconcat4, kgen2(s1_359), r5_358) in
          new r7_360: seed;
          let m2_118: bitstring = enc2(Z, pkY, r7_360) in
          let m5: bitstring = (m2_118, hostY, z_373, z_230) in
          event fullKC(hostY, hostW, n5, m2_118, z_373, z_230);
          out(c23[!_32], m5)
      orfind @i_78 <= N suchthat defined(n2[@i_78], tc0[@i_78], x_76[@i_78]) && (((tc1 = tc0[@i_78]) && (n4 = n2[@i_78])) && check2(padno(tc1, n4), spkY, ms4)) then
        find j1 <= N2 suchthat defined(Lkey[j1], Lhost[j1], Qkey_347[j1]) && (Lhost[j1] = hostW) then
          new s3_361: symkeyseed;
          let AK_35: key = kgen(s3_361) in
          new r4_362: symseed;
          new tk_363: timest;
          let TGT_37: maxmac = encsym(concat5(AK_35, tk_363, hostY), Lkey[j1], r4_362) in
          new s1_364: symkeyseed;
          new r5_365: symseed;
          let z_201: maxmac = encsym2(Zconcat4, kgen2(s1_364), r5_365) in
          new r7_366: seed;
          let m2_123: bitstring = enc2(Z, pkY, r7_366) in
          let m5: bitstring = (m2_123, hostY, TGT_37, z_201) in
          event fullKC(hostY, hostW, n5, m2_123, TGT_37, z_201);
          out(c23[!_32], m5)
        orfind j1 <= N2 suchthat defined(Lhost[j1], Qkey_348[j1]) && (Lhost[j1] = hostW) then
          new s3_367: symkeyseed;
          new tk_369: timest;
          new r4_368: symseed;
          let z_376: maxmac = encsym2(Zconcat5, kgen2(rKt), r4_368) in
          new s1_370: symkeyseed;
          new r5_371: symseed;
          let z_201: maxmac = encsym2(Zconcat4, kgen2(s1_370), r5_371) in
          new r7_372: seed;
          let m2_123: bitstring = enc2(Z, pkY, r7_372) in
          let m5: bitstring = (m2_123, hostY, z_376, z_201) in
          event fullKC(hostY, hostW, n5, m2_123, z_376, z_201);
          out(c23[!_32], m5)
    )
  |
    ! !_33 <= N2
    in(c21[!_33], (Lhost: tgs, Lkey: key));
    if (Lhost = T) then
      let Qkey_348: key = cst_key
    else
      let Qkey_347: key = cst_key
  )
|
  ! !_34 <= N2
  in(c16[!_34], (Mhost1: tgs, Mhost2: server, Mkey: key))
)

RESULT time(context for game 5) = 2. * time(T) * N2 + 2. * time(= tgs) * N2 + time(S) * N2 + time(= server) * N2 + 2. * time(= client) * N + time(concat1) * N + 3. * time(padno) * N + 2. * time(kgen) * N + time(mkgen) * N + time(concat5) * N + time(concat4) * N + 2. * time(encsym) * N + 2. * time(concat6) * N + time(mac) * N + 2. * time(concat3) * N + 3. * time(sign) * N + time(K) * N + time(concat2) * N + time(enc) * N + time((bitstring, client, maxmac, maxmac), maxlength(game 5: e21[!_32])) * N + N2 * time(= tgs) * N + time(let concat2) * N + time(let injbot1) * N + time(dec, maxlength(game 5: m21[!_31])) * N + time(concat7) * N + 5. * time(C) * N + time(checkmac) * N + time(= nonce) * N + time(= tgs) * N + time(let concat4) * N + time(let injbot2) * N + time(decsym) * N + time(acceptC1) * N + time(concat7) + time(K) + time(concat1) + time(C) + time(kgen) + 2. * time(sskgen) + 2. * time(spkgen) + 2. * time(pkgen) + time(skgen)
RESULT time(context for game 9) = time(T) * N2 + time(= tgs) * N2 + 6. * time(C) * N + 3. * time(= client) * N + 2. * time(= pkey) * N + time(concat1) * N + 2. * time(check2) * N + 2. * time(spkgen2) * N + 4. * time(= spkey) * N + 3. * time(padno) * N + 2. * time(kgen) * N + time(mkgen) * N + time(concat5) * N + time(concat4) * N + 2. * time(encsym) * N + 2. * time(concat6) * N + time(mac) * N + 2. * time(concat3) * N + time(sign) * N + 2. * time(K) * N + time(concat2) * N + time(enc) * N + time((bitstring, client, maxmac, maxmac), maxlength(game 9: e21[!_32])) * N + N2 * time(= tgs) * N + time(let concat2) * N + time(let injbot1) * N + time(dec, maxlength(game 9: m21[!_31])) * N + time(= kas) * N + time(concat7) * N + time(checkmac) * N + time(= nonce) * N + time(= tgs) * N + time(let concat4) * N + time(let injbot2) * N + time(decsym) * N + time(acceptC1) * N + 2. * time(sign2) + 2. * time(sskgen2) + time(concat7) + time(K) + time(concat1) + time(C) + time(kgen) + time(spkgen2) + time(sskgen) + time(spkgen) + 2. * time(pkgen) + time(skgen)
RESULT time(context for game 14) = time(T) * N2 + time(= tgs) * N2 + 6. * time(C) * N + 3. * time(= client) * N + 2. * time(= pkey) * N + 4. * time(= spkey) * N + time(concat1) * N + 2. * time(check2) * N + 2. * time(kgen) * N + time(mkgen) * N + time(concat5) * N + time(concat4) * N + 2. * time(encsym) * N + 2. * time(concat6) * N + time(mac) * N + 2. * time(concat3) * N + time(sign) * N + 2. * time(K) * N + time(concat2) * N + time((bitstring, client, maxmac, maxmac), maxlength(game 14: e21[!_32])) * N + N2 * time(= tgs) * N + 2. * N * N * time(check2) + 2. * N * N * time(padno) + 2. * N * N * time(= nonce) + 2. * N * N * time(= timest) + time(let concat2) * N + time(let injbot1) * N + time(= kas) * N + time(concat7) * N + 2. * time(spkgen2) * N + time(check) * N + 2. * time(padno) * N + 2. * time(sskgen2) * N + 2. * time(sign2) * N + time(checkmac) * N + time(= nonce) * N + time(= tgs) * N + time(let concat4) * N + time(let injbot2) * N + time(decsym) * N + time(acceptC1) * N + 2. * time(sign2) + 2. * time(sskgen2) + time(concat7) + time(K) + time(concat1) + time(C) + time(kgen) + 2. * time(spkgen2) + time(sskgen) + time(spkgen) + time(pkgen)
RESULT time(context for game 18) = time(T) * N2 + time(= tgs) * N2 + 6. * time(C) * N + 3. * time(= client) * N + 2. * time(= pkey) * N + 4. * time(= spkey) * N + time(concat1) * N + 2. * time(check2) * N + time((bitstring, client, maxmac, maxmac), maxlength(game 18: m2_118[!_32])) * N + 2. * time(kgen) * N + time(mkgen) * N + time(concat5) * N + time(concat4) * N + 2. * time(encsym) * N + 2. * time(concat6) * N + time(mac) * N + time(Z) * N + time(enc2) * N + time((bitstring, client, maxmac, maxmac), maxlength(game 18: m2_123[!_32])) * N + N2 * time(= tgs) * N + 2. * N * N * time(check2) + 2. * N * N * time(padno) + 2. * N * N * time(= nonce) + 2. * N * N * time(= timest) + time(let concat2) * N + time(let injbot1) * N + time(skgen2) * N + time(dec2, maxlength(game 18: m21[!_31])) * N + time(K) * N + time(= kas) * N + time(concat7) * N + 2. * time(spkgen2) * N + time(concat3) * N + 2. * time(padno) * N + 2. * time(sskgen2) * N + 2. * time(sign2) * N + time(checkmac) * N + time(= nonce) * N + time(= tgs) * N + time(let concat4) * N + time(let injbot2) * N + time(decsym) * N + time(acceptC1) * N + N * N * time(= bitstring, maxlength(game 18: m21[!_31]), maxlength(game 18: m2_123[!_32])) + N * N * time(= bitstring, maxlength(game 18: m21[!_31]), maxlength(game 18: m2_118[!_32])) + time(sign2) + time(sskgen2) + time(concat1) + time(C) + time(kgen) + 2. * time(spkgen2) + time(pkgen) + time(pkgen2)
RESULT time(context for game 26) = time(T) * N2 + time(= tgs) * N2 + 6. * time(C) * N + 3. * time(= client) * N + time(= pkey) * N + time(= spkey) * N + time(concat1) * N + time(check2) * N + 2. * time(mkgen) * N + time(mac) * N + time((bitstring, client, maxmac, maxmac), maxlength(game 26: m2_118[!_32])) * N + 2. * time(kgen) * N + time(concat5) * N + time(concat4) * N + 2. * time(encsym) * N + 2. * time(concat6) * N + time(Z) * N + time(enc2) * N + time((bitstring, client, maxmac, maxmac), maxlength(game 26: m2_123[!_32])) * N + N2 * time(= tgs) * N + 2. * N * N * time(check2) + 2. * N * N * time(padno) + 2. * N * N * time(= nonce) + 2. * N * N * time(= timest) + time(checkmac) * N + time(K) * N + 2. * time(padno) * N + 2. * time(sskgen2) * N + 2. * time(sign2) * N + time(= nonce) * N + time(= tgs) * N + time(let concat4) * N + time(let injbot2) * N + time(decsym) * N + time(acceptC1) * N + N * N * time(= bitstring, maxlength(game 26: m21[!_31]), maxlength(game 26: m2_123[!_32])) + N * N * time(= bitstring, maxlength(game 26: m21[!_31]), maxlength(game 26: m2_118[!_32])) + time(sign2) + time(sskgen2) + time(concat1) + time(C) + time(kgen) + 3. * time(spkgen2) + time(pkgen2)
RESULT time(context for game 30) = time(T) * N2 + time(= tgs) * N2 + 6. * time(C) * N + 3. * time(= client) * N + time(= pkey) * N + time(= spkey) * N + time(concat1) * N + time(check2) * N + time((bitstring, client, maxmac, maxmac), maxlength(game 30: m2_118[!_32])) * N + 2. * time(kgen) * N + time(concat5) * N + time(concat4) * N + 2. * time(encsym) * N + 2. * time(concat6) * N + time(mkgen2) * N + time(mac2) * N + time(Z) * N + time(enc2) * N + time((bitstring, client, maxmac, maxmac), maxlength(game 30: m2_123[!_32])) * N + N2 * time(= tgs) * N + 2. * N * N * time(check2) + 2. * N * N * time(padno) + 2. * N * N * time(= nonce) + 2. * N * N * time(= timest) + time(K) * N + 2. * time(padno) * N + time(let concat4) * N + time(let injbot2) * N + time(decsym) * N + time(acceptC1) * N + time(= timest) * N + time(= [1,N]) * N + 2. * time(sskgen2) * N + 2. * time(sign2) * N + 2. * time(= signature) * N + 2. * time(= tgs) * N + 2. * time(= nonce) * N + N * N * time(= bitstring, maxlength(game 30: m21[!_31]), maxlength(game 30: m2_123[!_32])) + N * N * time(= bitstring, maxlength(game 30: m21[!_31]), maxlength(game 30: m2_118[!_32])) + time(sign2) + time(sskgen2) + time(concat1) + time(C) + time(kgen) + 3. * time(spkgen2) + time(pkgen2)
RESULT time(context for game 38) = time(T) * N2 + time(= tgs) * N2 + 4. * time(C) * N + 3. * time(= client) * N + time(= pkey) * N + time(= spkey) * N + time(concat1) * N + time(check2) * N + time((bitstring, client, maxmac, maxmac), maxlength(game 38: m2_118[!_32])) * N + 3. * time(kgen) * N + time(concat5) * N + 2. * time(encsym) * N + time(concat4) * N + time(Z) * N + time(enc2) * N + time((bitstring, client, maxmac, maxmac), maxlength(game 38: m2_123[!_32])) * N + N2 * time(= tgs) * N + 2. * N * N * time(check2) + 2. * N * N * time(padno) + 2. * N * N * time(= nonce) + 2. * N * N * time(= timest) + time(K) * N + 2. * time(padno) * N + time(decsym) * N + time(let concat4) * N + time(let injbot2) * N + time(acceptC1) * N + 2. * time(= timest) * N + 2. * time(= [1,N]) * N + 3. * time(sskgen2) * N + 3. * time(sign2) * N + 4. * time(= signature) * N + 3. * time(= tgs) * N + 3. * time(= nonce) * N + N * N * time(= bitstring, maxlength(game 38: m21[!_31]), maxlength(game 38: m2_123[!_32])) + N * N * time(= bitstring, maxlength(game 38: m21[!_31]), maxlength(game 38: m2_118[!_32])) + time(sign2) + time(sskgen2) + time(concat1) + time(C) + time(kgen) + 3. * time(spkgen2) + time(pkgen2)
RESULT time(context for game 42) = time(T) * N2 + time(= tgs) * N2 + 4. * time(C) * N + 3. * time(= client) * N + time(= pkey) * N + time(= spkey) * N + time(concat1) * N + time(check2) * N + time((bitstring, client, maxmac, maxmac), maxlength(game 42: m2_118[!_32])) * N + time(kgen) * N + time(concat5) * N + time(concat4) * N + time(kgen2) * N + 2. * time(encsym) * N + time(Z) * N + time(enc2) * N + time((bitstring, client, maxmac, maxmac), maxlength(game 42: m2_123[!_32])) * N + N2 * time(= tgs) * N + 2. * N * N * time(check2) + 2. * N * N * time(padno) + 2. * N * N * time(= nonce) + 2. * N * N * time(= timest) + time(K) * N + 2. * time(padno) * N + time(let concat4) * N + time(let injbot2) * N + time(acceptC1) * N + time(= maxmac) * N + 2. * time(= timest) * N + 2. * time(= [1,N]) * N + 3. * time(sskgen2) * N + 3. * time(sign2) * N + 4. * time(= signature) * N + 3. * time(= tgs) * N + 3. * time(= nonce) * N + N * N * time(= bitstring, maxlength(game 42: m21[!_31]), maxlength(game 42: m2_123[!_32])) + N * N * time(= bitstring, maxlength(game 42: m21[!_31]), maxlength(game 42: m2_118[!_32])) + time(sign2) + time(sskgen2) + time(concat1) + time(C) + time(kgen) + 3. * time(spkgen2) + time(pkgen2)
RESULT time(context for game 47) = time(T) * N2 + time(= tgs) * N2 + 4. * time(C) * N + 3. * time(= client) * N + time(= pkey) * N + time(= spkey) * N + time(concat1) * N + time(check2) * N + time(kgen2) * N + time((bitstring, client, maxmac, maxmac), maxlength(game 47: m2_118[!_32])) * N + time(kgen) * N + time(concat5) * N + 2. * time(encsym) * N + time(concat4) * N + time(Z) * N + time(enc2) * N + time((bitstring, client, maxmac, maxmac), maxlength(game 47: m2_123[!_32])) * N + N2 * time(= tgs) * N + 2. * N * N * time(check2) + 2. * N * N * time(padno) + 2. * N * N * time(= nonce) + 2. * N * N * time(= timest) + time(K) * N + 2. * time(padno) * N + time(acceptC1) * N + time(= maxmac) * N + 2. * time(= timest) * N + 2. * time(= [1,N]) * N + 3. * time(sskgen2) * N + 3. * time(sign2) * N + 4. * time(= signature) * N + 2. * time(= tgs) * N + 2. * time(= nonce) * N + N * N * time(= bitstring, maxlength(game 47: m21[!_31]), maxlength(game 47: m2_123[!_32])) + N * N * time(= bitstring, maxlength(game 47: m21[!_31]), maxlength(game 47: m2_118[!_32])) + time(sign2) + time(sskgen2) + time(concat1) + time(C) + time(kgen) + 3. * time(spkgen2) + time(pkgen2)
RESULT time(context for game 51) = time(T) * N2 + time(= tgs) * N2 + 4. * time(C) * N + 3. * time(= client) * N + time(= pkey) * N + time(= spkey) * N + time(concat1) * N + time(check2) * N + time(concat4) * N + time((bitstring, client, maxmac, maxmac), maxlength(game 51: m2_118[!_32])) * N + time(kgen) * N + time(concat5) * N + time(encsym) * N + time(Zconcat4) * N + time(kgen2) * N + time(encsym2) * N + time(Z) * N + time(enc2) * N + time((bitstring, client, maxmac, maxmac), maxlength(game 51: m2_123[!_32])) * N + N2 * time(= tgs) * N + 2. * N * N * time(check2) + 2. * N * N * time(padno) + 2. * N * N * time(= nonce) + 2. * N * N * time(= timest) + time(K) * N + 2. * time(padno) * N + time(acceptC1) * N + time(= maxmac) * N + 2. * time(= timest) * N + 2. * time(= [1,N]) * N + 3. * time(sskgen2) * N + 3. * time(sign2) * N + 4. * time(= signature) * N + 2. * time(= tgs) * N + 2. * time(= nonce) * N + N * N * time(= bitstring, maxlength(game 51: m21[!_31]), maxlength(game 51: m2_123[!_32])) + N * N * time(= bitstring, maxlength(game 51: m21[!_31]), maxlength(game 51: m2_118[!_32])) + time(sign2) + time(sskgen2) + time(concat1) + time(C) + time(kgen) + 3. * time(spkgen2) + time(pkgen2)
RESULT time(context for game 58) = time(T) * N2 + time(= tgs) * N2 + 4. * time(C) * N + 3. * time(= client) * N + time(= pkey) * N + time(= spkey) * N + time(concat1) * N + time(check2) * N + time((bitstring, client, maxmac, maxmac), maxlength(game 58: m2_118[!_32])) * N + time(encsym) * N + time(kgen) * N + time(concat5) * N + time(Zconcat4) * N + time(kgen2) * N + time(encsym2) * N + time(Z) * N + time(enc2) * N + time((bitstring, client, maxmac, maxmac), maxlength(game 58: m2_123[!_32])) * N + 2. * N2 * time(= tgs) * N + 2. * N * N * time(check2) + 2. * N * N * time(padno) + 2. * N * N * time(= nonce) + 2. * N * N * time(= timest) + time(K) * N + 2. * time(padno) * N + time(acceptC1) * N + time(= maxmac) * N + 2. * time(= timest) * N + 2. * time(= [1,N]) * N + 3. * time(sskgen2) * N + 3. * time(sign2) * N + 4. * time(= signature) * N + 2. * time(= tgs) * N + 2. * time(= nonce) * N + N * N * time(= bitstring, maxlength(game 58: m21[!_31]), maxlength(game 58: m2_123[!_32])) + N * N * time(= bitstring, maxlength(game 58: m21[!_31]), maxlength(game 58: m2_118[!_32])) + time(sign2) + time(sskgen2) + time(concat1) + time(C) + 3. * time(spkgen2) + time(pkgen2)
RESULT time(context for game 61) = time(T) * N2 + time(= tgs) * N2 + 4. * time(C) * N + 3. * time(= client) * N + time(= pkey) * N + time(= spkey) * N + time(concat1) * N + time(check2) * N + time((bitstring, client, maxmac, maxmac), maxlength(game 61: m2_118[!_32])) * N + time(encsym) * N + time(kgen) * N + time(concat5) * N + time(Zconcat4) * N + time(kgen2) * N + time(encsym2) * N + time(Z) * N + time(enc2) * N + time((bitstring, client, maxmac, maxmac), maxlength(game 61: m2_123[!_32])) * N + 2. * N2 * time(= tgs) * N + 2. * N * N * time(check2) + 2. * N * N * time(padno) + 2. * N * N * time(= nonce) + 2. * N * N * time(= timest) + time(K) * N + 2. * time(padno) * N + time(acceptC1) * N + time(= maxmac) * N + 2. * time(= timest) * N + 2. * time(= [1,N]) * N + 3. * time(sskgen2) * N + 3. * time(sign2) * N + 4. * time(= signature) * N + 2. * time(= tgs) * N + 2. * time(= nonce) * N + N * N * time(= bitstring, maxlength(game 61: m21[!_31]), maxlength(game 61: m2_123[!_32])) + N * N * time(= bitstring, maxlength(game 61: m21[!_31]), maxlength(game 61: m2_118[!_32])) + time(sign2) + time(sskgen2) + time(concat1) + time(C) + 3. * time(spkgen2) + time(pkgen2)
RESULT Could not prove event fullCK(K, T, N, w, x, y) ==> fullKC(C, T, N, w, z, y).
Please enter a command: 