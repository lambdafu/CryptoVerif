(* This file contains a variant of the OTR key exchange in 
which the encryption in the first message is removed:
B -> A: H(g^x)
A -> B: g^y
B -> A: g^x, ...
The hope was that it would help CryptoVerif by avoiding to
rely on the security of encryption to prove that messages
are sent in the right order.
It still does not work, but the extension of CryptoVerif
required to make it work is probably simpler. 
*)

(* set debugElsefindFacts = true. *)
set interactiveMode = true.

(*
crypto uf_cma(sign) rA
crypto uf_cma(sign) rB
insert 489 find j <= NA suchthat defined(y[j],hashgx[j]) && gy = gexp(g, y[j]) && hashgx[j] = SHA256(SHA256k, gexp(g, x_268)) then
insert 37 find k <= NB suchthat defined(x_268[k],gy[k]) && gx = gexp(g, x_268[k]) && gexp(g, y) = gy[k] then
crypto rom(hash2_6)
SArename s_269
SArename s_255
crypto cdh(gexp)
crypto rom(SHA256)
simplify
*)

param NA, NB, NSA, NRA, NSB, NRB.

type sha256_bits [large,fixed]. (* 256 bits, output of SHA256 *)
type sha1_bits [large,fixed].   (* 160 bits, output of SHA1 *)

(* Computational Diffie-Hellman assumption *)
type exp [large,bounded].
type G [large,bounded].
proba pCDH.
expand CDH(G, exp, g, gexp, mult, pCDH).

(* AES128-CTR *)

event repeated_counter.

define CTR_enc(key, cleartext, ciphertext, ctr, enc, dec, Z, Penc) { 

param N, N2.

fun enc(cleartext, key, ctr): ciphertext.
fun dec(ciphertext, key, ctr): cleartext.

fun enc2(cleartext, key, ctr): ciphertext.

(* The function Z returns for each bitstring, a bitstring
   of the same length, consisting only of zeroes. *)
fun Z(cleartext):cleartext.

forall m:cleartext, k:key, c:ctr; 
	dec(enc(m, k, c), k, c) = m.

equiv  ind_cpa(enc)
       ! N2 new k: key; ! N Oenc(x:cleartext, c:ctr) := enc(x, k, c) 
     <=(N2 * Penc(time + (N2-1)*(N*time(enc, maxlength(x)) + N*time(Z, maxlength(x))), N, maxlength(x)))=> 
       ! N2 new k: key; ! N Oenc(x:cleartext, c:ctr) := 
       	    	find i <= N suchthat defined(c[i],r[i]) && c = c[i] then
		     event_abort repeated_counter
	 	else
		     let r: ciphertext = enc2(Z(x), k, c) in
		     r.

}

type enc_key [large,fixed]. (* 128 bits *)
type ctr [fixed].
proba Penc.
expand CTR_enc(enc_key, bitstring, bitstring, ctr, senc, sdec, Z, Penc).

const zero_ctr: ctr.

(* UF-CMA MAC -- version without key generation function *)

define UF_CMA_mac_nokgen(mkey, macinput, macres, mac, check, Pmac) {

param N, N2, N3.

const mark: bitstring.

fun mac(macinput, mkey):macres.
fun check(macinput, mkey, macres): bool.

fun mac2(macinput, mkey):macres.
fun check2(macinput, mkey, macres): bool.

forall m:macinput, k:mkey;
	check(m, k, mac(m, k)).
forall m:macinput, k:mkey;
	check2(m, k, mac2(m, k)).

equiv uf_cma(mac)
      ! N3 new k:mkey;(
	 !N Omac(x: macinput) := mac(x, k),
	 !N2 Ocheck(m: macinput, ma: macres) := check(m, k, ma))
     <=(N3 * Pmac(time + (N3-1)*(N*time(mac,maxlength(x)) + N2*time(check,maxlength(m),maxlength(ma))), N, N2, max(maxlength(x), maxlength(m))))=> [computational]
      ! N3 new k:mkey [unchanged];(
	 !N Omac(x: macinput) := mac2(x, k),
	 !N2 Ocheck(m: macinput, ma: macres) := 
	    find j <= N suchthat defined(x[j]) && (m = x[j]) && check2(x[j], k, ma) then true else false).

equiv uf_cma_corrupt(mac)
      ! N3 new k:mkey;(
	 !N Omac(x: macinput) [useful_change] := mac(x, k),
	 !N2 Ocheck(m: macinput, ma: macres) [useful_change] := check(m, k, ma),
	 Ocorrupt() [10] := k)
     <=(N3 * Pmac(time + (N3-1)*(N*time(mac,maxlength(x)) + N2*time(check,maxlength(m),maxlength(ma))), N, N2, max(maxlength(x), maxlength(m))))=> [manual,computational]
      ! N3 new k:mkey [unchanged];(
	 !N Omac(x: macinput) := mac2(x, k),
	 !N2 Ocheck(m: macinput, ma: macres) := 
	    if defined(corrupt) then check2(m, k, ma) else
	    find j <= N suchthat defined(x[j]) && (m = x[j]) && check2(x[j], k, ma) then true else false,
	 Ocorrupt() := let corrupt: bitstring = mark in k).

}

proba PSHA256_HMAC160.
expand UF_CMA_mac_nokgen(sha256_bits, bitstring, sha1_bits, SHA256_HMAC160, SHA256_HMAC160_check, PSHA256_HMAC160).

proba PSHA1_HMAC.
expand UF_CMA_mac_nokgen(sha1_bits, bitstring, sha1_bits, SHA1_HMAC, SHA1_HMAC_check, PSHA1_HMAC).


type hashkey [large,fixed].

proba PSHA256_HMAC.
expand CollisionResistant_hash(hashkey, bitstring, sha256_bits, SHA256_HMAC, PSHA256_HMAC).

(* Hashing - Random oracle model *)

type keys6 [large, fixed].

expand ROM_hash(hashkey, G, sha256_bits, SHA256).
param qSHA256 [noninteractive].
channel sha256_in, sha256_out.
let SHA256_oracle = ! qSHA256 in(sha256_in, x:G); out(sha256_out, SHA256(SHA256k,x)). 

expand ROM_hash(hashkey, G, keys6, hash2_6).
param qhash2_6 [noninteractive].
channel hash2_6_in, hash2_6_out.
let hash2_6_oracle = ! qhash2_6 in(hash2_6_in, x:G); out(hash2_6_out, hash2_6(hash2_6k,x)). 




(* Signing - UF-CMA signatures *)
type keyseed [large,fixed].
type spkey [bounded].
type sskey [bounded].
type sseed [large,fixed].
type signature.
proba Psign.
proba Psigncoll.
expand UF_CMA_signature(keyseed, spkey, sskey, bitstring, signature, sseed, ssk, spk, sign, checksign, Psign, Psigncoll).

(* Key ids *)

type key_id.

const keyidA_init, keyidB_init: key_id.
fun incr(key_id):key_id [compos].

forall kid: key_id; incr(kid) <> keyidA_init.
forall kid: key_id; incr(kid) <> keyidB_init.

(* Type conversions and concatenations *)

type ssid [fixed].
fun extract1(keys6):ssid.
fun extract2(keys6):enc_key.
fun extract3(keys6):enc_key.
fun extract4(keys6):sha256_bits.
fun extract5(keys6):sha256_bits.
fun extract6(keys6):sha256_bits.
fun extract7(keys6):sha256_bits.

param N.

equiv cut
      ! N new r:keys6; (O1() := extract1(r), O2() := extract2(r), O3() := extract3(r), 
      	      	        O4() := extract4(r), O5() := extract5(r), O6() := extract6(r), 
			O7() := extract7(r))
   <=(0)=>
      ! N (O1() := new k1: ssid; k1, O2() := new k2:enc_key; k2, O3() := new k3: enc_key; k3,
           O4() := new k4: sha256_bits; k4, O5() := new k5: sha256_bits; k5, O6() := new k6: sha256_bits; k6, 
	   O7() := new k7: sha256_bits; k7).


fun GToBits(G):bitstring [compos].
fun enckeyToBits(enc_key):bitstring [compos].
fun sha256ToBits(sha256_bits):bitstring [compos].
fun concat1(G,G,spkey,key_id): bitstring [compos].
fun concat2(spkey,key_id,signature): bitstring [compos].
fun concat3(key_id,key_id,G,ctr,bitstring): bitstring [compos].

channel start, ch, chA1, chA2, chA3, chA4, chA40, chA50, chA5, chA6, chA7, chB0, chB1, chB2, chB3, chB4, chB50, chB5, chB6, chB7.

(* Security properties *)

(* Entity authentication *)

event Alice_session_with_Bob(spkey, ssid).
event Bob_session_with_Alice(spkey, ssid).
event Alice_starts_session_with(spkey, ssid).
event Bob_starts_session_with(spkey, ssid).

query pk:spkey, s:ssid; event inj:Bob_session_with_Alice(pk, s) ==> inj:Alice_starts_session_with(pk, s).
(* Currently cannot be proved because of weakness in the protocol.
query pk:spkey, s:ssid; event inj:Alice_session_with_Bob(pk, s) ==> inj:Bob_starts_session_with(pk, s). *)
query pk:spkey, s:ssid; event Alice_session_with_Bob(pk, s) ==> false.

let bobAKE =
        in(chB0, ());
	new x:exp; (* Picks a random value x (at least 320 bits) *)
	out(chB1, SHA256(SHA256k, gexp(g, x))); (* Sends Alice HASH(gx) *)
	in(chB2, gy:G); (* Receive gy from Alice *)
	(*
	Here I'm supposed to verify that gy is a legal value (2 <= gy <= modulus-2)
	This point can be omitted.
	*)
	let s = gexp(gy, x) in (* Computes s = (gy)x *)
	(* Computes two AES keys c, c' and four MAC keys m1, m1', m2, m2' by hashing s in various ways *)
	let keys = hash2_6(hash2_6k, s) in
	let ssid = extract1(keys) in
	let c    = extract2(keys) in 
	let c'   = extract3(keys) in 
	let m1   = extract4(keys) in
	let m2   = extract5(keys) in
	let m1'  = extract6(keys) in
	let m2'  = extract7(keys) in
	let mB = SHA256_HMAC(SHA256_HMACk, (concat1(gexp(g, x), gy, pubB, keyidB_init), m1)) in (* Computes MB = MACm1(gx, gy, pubB, keyidB) *)
	new rs1: sseed;
	let xB = concat2(pubB, keyidB_init, sign(sha256ToBits(mB), secB, rs1)) in (* Computes XB = pubB, keyidB, sigB(MB) *)
	let encxB = senc(xB, c, zero_ctr) in
	out(chB3, (gexp(g, x), encxB, SHA256_HMAC160(encxB, m2))); (* Sends Alice r, AESc(XB), MACm2(AESc(XB)) *)
	in(chB4, (encxA:bitstring, hmacencxA:sha1_bits)); (* Receive AESc'(XA), MACm2'(AESc'(XA)) from Alice *)
	if SHA256_HMAC160_check(encxA, m2', hmacencxA) then ( (* Uses m2' to verify MACm2'(AESc'(XA)) *)
		let concat2(pubX, keyidA_init', signmA) = sdec(encxA, c', zero_ctr) in (* Uses c' to decrypt AESc'(XA) to obtain XA = pubA, keyidA, sigA(MA) *)
		let mA = SHA256_HMAC(SHA256_HMACk, (concat1(gy, gexp(g, x), pubX, keyidA_init'), m1')) in (* Computes MA = MACm1'(gy, gx, pubA, keyidA) *)
		if checksign(sha256ToBits(mA), pubX, signmA) then ( (* Uses pubA to verify sigA(MA) *)
		        (*insert Bob_session_info(x, pubX);*)
			if pubX = pubA then
			event Bob_session_with_Alice(pubB, ssid)
		)
	).

let aliceAKE =
	in(chA1, (hashgx:sha256_bits)); (* TODO why is it useful to encrypt and hash g^x? 
		 		   			    Why is it more secure than just sending g^x in the clear? *)
	new y:exp; (* Picks a random value y (at least 320 bits) *)
	out(chA2, gexp(g, y)); (* Sends Bob gy *)
	in(chA3, (gx:G, encxB:bitstring, hmacencxB:sha1_bits));
	if (SHA256(SHA256k, gx) = hashgx) then (* Verifies that HASH(gx) matches the value sent earlier *)
		let s = gexp(gx, y) in (* 4.Computes s = (gx)y *)
		(* Computes two AES keys c, c' and four MAC keys m1, m1', m2, m2' by hashing s in various ways *)
		let keys = hash2_6(hash2_6k, s) in
		let ssid = extract1(keys) in
		let c    = extract2(keys) in 
		let c'   = extract3(keys) in 
		let m1   = extract4(keys) in
		let m2   = extract5(keys) in
		let m1'  = extract6(keys) in
		let m2'  = extract7(keys) in
		if SHA256_HMAC160_check(encxB, m2, hmacencxB) then ( (* Uses m2 to verify MACm2(AESc(XB)) *)
			let concat2(pubX, keyidB_init', signmB) = sdec(encxB, c, zero_ctr) in (* Uses c to decrypt AESc(XB) to obtain XB = pubB, keyidB, sigB(MB) *)
			let mB = SHA256_HMAC(SHA256_HMACk, (concat1(gx, gexp(g, y), pubX, keyidB_init'), m1)) in (* Computes MB = MACm1(gx, gy, pubB, keyidB) *)
			if checksign(sha256ToBits(mB), pubX, signmB) then ( (* Uses pubB to verify sigB(MB) *)
				let mA = SHA256_HMAC(SHA256_HMACk, (concat1(gexp(g, y), gx, pubA, keyidA_init), m1')) in (* Computes MA = MACm1'(gy, gx, pubA, keyidA) *)
				new rs2: sseed;
				let xA = concat2(pubA, keyidA_init, sign(sha256ToBits(mA), secA, rs2)) in (* Computes XA = pubA, keyidA, sigA(MA) *)
				let encxA = senc(xA, c', zero_ctr) in
				(* insert Alice_session_info(y, pubX); *)
				event Alice_starts_session_with(pubX, ssid);
				out(chA4, (encxA, SHA256_HMAC160(encxA, m2'))); (* Sends Bob AESc'(XA), MACm2'(AESc'(XA)) *)
				in(chA40, ());
				if pubX = pubB then
				event Alice_session_with_Bob(pubA, ssid)
			)
		).

(* Alice and Bob talk to dishonest participants as well,
so I use pubX instead of pubB (resp. pubA) *)

process
	in (start, ());
	new SHA256k: hashkey; (* Models the choice of the hash functions *)
	new hash2_6k:hashkey;
	new SHA256_HMACk: hashkey;
	new rA:keyseed;       (* Generation of signature keys *)
	new rB:keyseed;
	let pubA = spk(rA) in
	let secA = ssk(rA) in
	let pubB = spk(rB) in
	let secB = ssk(rB) in
	out(ch, (pubA, pubB, SHA256_HMACk));
	( ! NA aliceAKE | ! NB bobAKE | SHA256_oracle | hash2_6_oracle)


(* Game obtained after the proof steps:

crypto uf_cma(sign) rA
crypto uf_cma(sign) rB
insert 489 find j <= NA suchthat defined(y[j],hashgx[j]) && gy = gexp(g, y[j]) && hashgx[j] = SHA256(SHA256k, gexp(g, x_268)) then
insert 37 find k <= NB suchthat defined(x_268[k],gy[k]) && gx = gexp(g, x_268[k]) && gexp(g, y) = gy[k] then
crypto rom(hash2_6)
SArename s_269
SArename s_255
crypto cdh(gexp)
crypto rom(SHA256)
simplify

        in(start, ());
        new SHA256_HMACk: hashkey;
        new rA: keyseed;
        new rB: keyseed;
        out(ch, (@20_pkgen2(rA), @20_pkgen2(rB), SHA256_HMACk));
        (
          ! !_250 <= NA
          in(chA1[!_250], hashgx: sha256_bits);
          new y: exp;
          out(chA2[!_250], @5_exp'(g, y));
          in(chA3[!_250], (gx: G, encxB_254: bitstring, hmacencxB: sha1_bits));
          find [unique] @i_534 = @ri_533 <= NB suchthat defined(@14_x_516[@ri_533], @14_r_515[@ri_533]) && (gx = @14_x_516[@ri_533]) then
          (
            if (hashgx = @14_r_515[@i_534]) then
            if defined(gy[@i_534]) && (@5_exp'(g, y) = gy[@i_534]) then
            (
              let k <= NB = cst_[1,NB] in
              if defined(@15_r_365[@i_534]) then
              (
                let m2_261: sha256_bits = extract5(@15_r_365[@i_534]) in
                if SHA256_HMAC160_check(encxB_254, m2_261, hmacencxB) then
                let c_258: enc_key = extract2(@15_r_365[@i_534]) in
                let concat2(pubX_264: spkey, keyidB_init': key_id, signmB: signature) = sdec(encxB_254, c_258, zero_ctr) in
                if (pubX_264 = @20_pkgen2(rA)) then
                  yield
                else
                  let m1_260: sha256_bits = extract4(@15_r_365[@i_534]) in
                  let mB_265: sha256_bits = SHA256_HMAC(SHA256_HMACk, (concat1(gx, @5_exp'(g, y), pubX_264, keyidB_init'), m1_260)) in
                  let @20_m_339: bitstring = sha256ToBits(mB_265) in
                  if defined(@20_x_352[@i_534]) && (pubX_264 = @20_pkgen2(rB)) && (keyidB_init' = keyidB_init) && @20_check2(@20_m_339, pubX_264, signmB) then
                  (
                    let m1'_262: sha256_bits = extract6(@15_r_365[@i_534]) in
                    let mA_266: sha256_bits = SHA256_HMAC(SHA256_HMACk, (concat1(@5_exp'(g, y), gx, @20_pkgen2(rA), keyidA_init), m1'_262)) in
                    new rs2_447: sseed;
                    let @20_x_336: bitstring = sha256ToBits(mA_266) in
                    let xA: bitstring = concat2(@20_pkgen2(rA), keyidA_init, @20_sign2(@20_x_336, @20_skgen2(rA), rs2_447)) in
                    let c'_259: enc_key = extract3(@15_r_365[@i_534]) in
                    let encxA_267: bitstring = senc(xA, c'_259, zero_ctr) in
                    let ssid_257: ssid = extract1(@15_r_365[@i_534]) in
                    event Alice_starts_session_with(pubX_264, ssid_257);
                    let m2'_263: sha256_bits = extract7(@15_r_365[@i_534]) in
                    out(chA4[!_250], (encxA_267, SHA256_HMAC160(encxA_267, m2'_263)));
                    in(chA40[!_250], ());
                    event Alice_session_with_Bob(@20_pkgen2(rA), ssid_257)
                  )
                  else
                    if (pubX_264 = @20_pkgen2(rB)) then
                      yield
                    else
                      if checksign(@20_m_339, pubX_264, signmB) then
                      let m1'_262: sha256_bits = extract6(@15_r_365[@i_534]) in
                      let mA_266: sha256_bits = SHA256_HMAC(SHA256_HMACk, (concat1(@5_exp'(g, y), gx, @20_pkgen2(rA), keyidA_init), m1'_262)) in
                      new rs2_446: sseed;
                      let @20_x_336: bitstring = sha256ToBits(mA_266) in
                      let xA: bitstring = concat2(@20_pkgen2(rA), keyidA_init, @20_sign2(@20_x_336, @20_skgen2(rA), rs2_446)) in
                      let c'_259: enc_key = extract3(@15_r_365[@i_534]) in
                      let encxA_267: bitstring = senc(xA, c'_259, zero_ctr) in
                      let ssid_257: ssid = extract1(@15_r_365[@i_534]) in
                      event Alice_starts_session_with(pubX_264, ssid_257);
                      let m2'_263: sha256_bits = extract7(@15_r_365[@i_534]) in
                      out(chA4[!_250], (encxA_267, SHA256_HMAC160(encxA_267, m2'_263)));
                      in(chA40[!_250], ())
              )
              else
                new @15_r_361: keys6;
                let m2_261: sha256_bits = extract5(@15_r_361) in
                if SHA256_HMAC160_check(encxB_254, m2_261, hmacencxB) then
                let c_258: enc_key = extract2(@15_r_361) in
                let concat2(pubX_264: spkey, keyidB_init': key_id, signmB: signature) = sdec(encxB_254, c_258, zero_ctr) in
                if (pubX_264 = @20_pkgen2(rA)) then
                  yield
                else
                  let m1_260: sha256_bits = extract4(@15_r_361) in
                  let mB_265: sha256_bits = SHA256_HMAC(SHA256_HMACk, (concat1(gx, @5_exp'(g, y), pubX_264, keyidB_init'), m1_260)) in
                  let @20_m_339: bitstring = sha256ToBits(mB_265) in
                  if defined(@20_x_352[@i_534]) && (pubX_264 = @20_pkgen2(rB)) && (keyidB_init' = keyidB_init) && @20_check2(@20_m_339, pubX_264, signmB) then
                  (
                    let m1'_262: sha256_bits = extract6(@15_r_361) in
                    let mA_266: sha256_bits = SHA256_HMAC(SHA256_HMACk, (concat1(@5_exp'(g, y), gx, @20_pkgen2(rA), keyidA_init), m1'_262)) in
                    new rs2_441: sseed;
                    let @20_x_336: bitstring = sha256ToBits(mA_266) in
                    let xA: bitstring = concat2(@20_pkgen2(rA), keyidA_init, @20_sign2(@20_x_336, @20_skgen2(rA), rs2_441)) in
                    let c'_259: enc_key = extract3(@15_r_361) in
                    let encxA_267: bitstring = senc(xA, c'_259, zero_ctr) in
                    let ssid_257: ssid = extract1(@15_r_361) in
                    event Alice_starts_session_with(pubX_264, ssid_257);
                    let m2'_263: sha256_bits = extract7(@15_r_361) in
                    out(chA4[!_250], (encxA_267, SHA256_HMAC160(encxA_267, m2'_263)));
                    in(chA40[!_250], ());
                    event Alice_session_with_Bob(@20_pkgen2(rA), ssid_257)
                  )
                  else
                    if (pubX_264 = @20_pkgen2(rB)) then
                      yield
                    else
                      if checksign(@20_m_339, pubX_264, signmB) then
                      let m1'_262: sha256_bits = extract6(@15_r_361) in
                      let mA_266: sha256_bits = SHA256_HMAC(SHA256_HMACk, (concat1(@5_exp'(g, y), gx, @20_pkgen2(rA), keyidA_init), m1'_262)) in
                      new rs2_440: sseed;
                      let @20_x_336: bitstring = sha256ToBits(mA_266) in
                      let xA: bitstring = concat2(@20_pkgen2(rA), keyidA_init, @20_sign2(@20_x_336, @20_skgen2(rA), rs2_440)) in
                      let c'_259: enc_key = extract3(@15_r_361) in
                      let encxA_267: bitstring = senc(xA, c'_259, zero_ctr) in
                      let ssid_257: ssid = extract1(@15_r_361) in
                      event Alice_starts_session_with(pubX_264, ssid_257);
                      let m2'_263: sha256_bits = extract7(@15_r_361) in
                      out(chA4[!_250], (encxA_267, SHA256_HMAC160(encxA_267, m2'_263)));
                      in(chA40[!_250], ())
            )
            else
              let s_453: G = gexp(gx, y) in
              find [unique] @i_408 = @ri_407 <= NA suchthat defined(s_453[@ri_407], @15_r_359[@ri_407]) && (s_453 = s_453[@ri_407]) then
              (
                let m2_261: sha256_bits = extract5(@15_r_359[@i_408]) in
                if SHA256_HMAC160_check(encxB_254, m2_261, hmacencxB) then
                let c_258: enc_key = extract2(@15_r_359[@i_408]) in
                let concat2(pubX_264: spkey, keyidB_init': key_id, signmB: signature) = sdec(encxB_254, c_258, zero_ctr) in
                if (pubX_264 = @20_pkgen2(rA)) then
                  yield
                else
                  if (pubX_264 = @20_pkgen2(rB)) then
                    yield
                  else
                    let m1_260: sha256_bits = extract4(@15_r_359[@i_408]) in
                    let mB_265: sha256_bits = SHA256_HMAC(SHA256_HMACk, (concat1(gx, @5_exp'(g, y), pubX_264, keyidB_init'), m1_260)) in
                    let @20_m_339: bitstring = sha256ToBits(mB_265) in
                    if checksign(@20_m_339, pubX_264, signmB) then
                    let m1'_262: sha256_bits = extract6(@15_r_359[@i_408]) in
                    let mA_266: sha256_bits = SHA256_HMAC(SHA256_HMACk, (concat1(@5_exp'(g, y), gx, @20_pkgen2(rA), keyidA_init), m1'_262)) in
                    new rs2_552: sseed;
                    let @20_x_336: bitstring = sha256ToBits(mA_266) in
                    let xA: bitstring = concat2(@20_pkgen2(rA), keyidA_init, @20_sign2(@20_x_336, @20_skgen2(rA), rs2_552)) in
                    let c'_259: enc_key = extract3(@15_r_359[@i_408]) in
                    let encxA_267: bitstring = senc(xA, c'_259, zero_ctr) in
                    let ssid_257: ssid = extract1(@15_r_359[@i_408]) in
                    event Alice_starts_session_with(pubX_264, ssid_257);
                    let m2'_263: sha256_bits = extract7(@15_r_359[@i_408]) in
                    out(chA4[!_250], (encxA_267, SHA256_HMAC160(encxA_267, m2'_263)));
                    in(chA40[!_250], ())
              )
              orfind @i_404 = @ri_403 <= NB suchthat defined(s_451[@ri_403], @15_r_363[@ri_403]) && (s_453 = s_451[@ri_403]) then
              (
                let m2_261: sha256_bits = extract5(@15_r_363[@i_404]) in
                if SHA256_HMAC160_check(encxB_254, m2_261, hmacencxB) then
                let c_258: enc_key = extract2(@15_r_363[@i_404]) in
                let concat2(pubX_264: spkey, keyidB_init': key_id, signmB: signature) = sdec(encxB_254, c_258, zero_ctr) in
                if (pubX_264 = @20_pkgen2(rA)) then
                  yield
                else
                  if (pubX_264 = @20_pkgen2(rB)) then
                    yield
                  else
                    let m1_260: sha256_bits = extract4(@15_r_363[@i_404]) in
                    let mB_265: sha256_bits = SHA256_HMAC(SHA256_HMACk, (concat1(gx, @5_exp'(g, y), pubX_264, keyidB_init'), m1_260)) in
                    let @20_m_339: bitstring = sha256ToBits(mB_265) in
                    if checksign(@20_m_339, pubX_264, signmB) then
                    let m1'_262: sha256_bits = extract6(@15_r_363[@i_404]) in
                    let mA_266: sha256_bits = SHA256_HMAC(SHA256_HMACk, (concat1(@5_exp'(g, y), gx, @20_pkgen2(rA), keyidA_init), m1'_262)) in
                    new rs2_553: sseed;
                    let @20_x_336: bitstring = sha256ToBits(mA_266) in
                    let xA: bitstring = concat2(@20_pkgen2(rA), keyidA_init, @20_sign2(@20_x_336, @20_skgen2(rA), rs2_553)) in
                    let c'_259: enc_key = extract3(@15_r_363[@i_404]) in
                    let encxA_267: bitstring = senc(xA, c'_259, zero_ctr) in
                    let ssid_257: ssid = extract1(@15_r_363[@i_404]) in
                    event Alice_starts_session_with(pubX_264, ssid_257);
                    let m2'_263: sha256_bits = extract7(@15_r_363[@i_404]) in
                    out(chA4[!_250], (encxA_267, SHA256_HMAC160(encxA_267, m2'_263)));
                    in(chA40[!_250], ())
              )
              orfind @i_402 = @ri_401 <= NB suchthat defined(x_268[@ri_401], y[j[@ri_401]], @15_r_365[@ri_401], s_453[j[@ri_401]]) && (s_453 = @5_exp'(g, mult(x_268[@ri_401], y[j[@ri_401]]))) then
              (
                let m2_261: sha256_bits = extract5(@15_r_365[@i_402]) in
                if SHA256_HMAC160_check(encxB_254, m2_261, hmacencxB) then
                let c_258: enc_key = extract2(@15_r_365[@i_402]) in
                let concat2(pubX_264: spkey, keyidB_init': key_id, signmB: signature) = sdec(encxB_254, c_258, zero_ctr) in
                if (pubX_264 = @20_pkgen2(rA)) then
                  yield
                else
                  if (pubX_264 = @20_pkgen2(rB)) then
                    yield
                  else
                    let m1_260: sha256_bits = extract4(@15_r_365[@i_402]) in
                    let mB_265: sha256_bits = SHA256_HMAC(SHA256_HMACk, (concat1(gx, @5_exp'(g, y), pubX_264, keyidB_init'), m1_260)) in
                    let @20_m_339: bitstring = sha256ToBits(mB_265) in
                    if checksign(@20_m_339, pubX_264, signmB) then
                    let m1'_262: sha256_bits = extract6(@15_r_365[@i_402]) in
                    let mA_266: sha256_bits = SHA256_HMAC(SHA256_HMACk, (concat1(@5_exp'(g, y), gx, @20_pkgen2(rA), keyidA_init), m1'_262)) in
                    new rs2_554: sseed;
                    let @20_x_336: bitstring = sha256ToBits(mA_266) in
                    let xA: bitstring = concat2(@20_pkgen2(rA), keyidA_init, @20_sign2(@20_x_336, @20_skgen2(rA), rs2_554)) in
                    let c'_259: enc_key = extract3(@15_r_365[@i_402]) in
                    let encxA_267: bitstring = senc(xA, c'_259, zero_ctr) in
                    let ssid_257: ssid = extract1(@15_r_365[@i_402]) in
                    event Alice_starts_session_with(pubX_264, ssid_257);
                    let m2'_263: sha256_bits = extract7(@15_r_365[@i_402]) in
                    out(chA4[!_250], (encxA_267, SHA256_HMAC160(encxA_267, m2'_263)));
                    in(chA40[!_250], ())
              )
              orfind @i_400 = @ri_399 <= qhash2_6 suchthat defined(x_284[@ri_399], @15_r_367[@ri_399]) && (s_453 = x_284[@ri_399]) then
              (
                let m2_261: sha256_bits = extract5(@15_r_367[@i_400]) in
                if SHA256_HMAC160_check(encxB_254, m2_261, hmacencxB) then
                let c_258: enc_key = extract2(@15_r_367[@i_400]) in
                let concat2(pubX_264: spkey, keyidB_init': key_id, signmB: signature) = sdec(encxB_254, c_258, zero_ctr) in
                if (pubX_264 = @20_pkgen2(rA)) then
                  yield
                else
                  if (pubX_264 = @20_pkgen2(rB)) then
                    yield
                  else
                    let m1_260: sha256_bits = extract4(@15_r_367[@i_400]) in
                    let mB_265: sha256_bits = SHA256_HMAC(SHA256_HMACk, (concat1(gx, @5_exp'(g, y), pubX_264, keyidB_init'), m1_260)) in
                    let @20_m_339: bitstring = sha256ToBits(mB_265) in
                    if checksign(@20_m_339, pubX_264, signmB) then
                    let m1'_262: sha256_bits = extract6(@15_r_367[@i_400]) in
                    let mA_266: sha256_bits = SHA256_HMAC(SHA256_HMACk, (concat1(@5_exp'(g, y), gx, @20_pkgen2(rA), keyidA_init), m1'_262)) in
                    new rs2_555: sseed;
                    let @20_x_336: bitstring = sha256ToBits(mA_266) in
                    let xA: bitstring = concat2(@20_pkgen2(rA), keyidA_init, @20_sign2(@20_x_336, @20_skgen2(rA), rs2_555)) in
                    let c'_259: enc_key = extract3(@15_r_367[@i_400]) in
                    let encxA_267: bitstring = senc(xA, c'_259, zero_ctr) in
                    let ssid_257: ssid = extract1(@15_r_367[@i_400]) in
                    event Alice_starts_session_with(pubX_264, ssid_257);
                    let m2'_263: sha256_bits = extract7(@15_r_367[@i_400]) in
                    out(chA4[!_250], (encxA_267, SHA256_HMAC160(encxA_267, m2'_263)));
                    in(chA40[!_250], ())
              )
              else
                new @15_r_359: keys6;
                let m2_261: sha256_bits = extract5(@15_r_359) in
                if SHA256_HMAC160_check(encxB_254, m2_261, hmacencxB) then
                let c_258: enc_key = extract2(@15_r_359) in
                let concat2(pubX_264: spkey, keyidB_init': key_id, signmB: signature) = sdec(encxB_254, c_258, zero_ctr) in
                if (pubX_264 = @20_pkgen2(rA)) then
                  yield
                else
                  if (pubX_264 = @20_pkgen2(rB)) then
                    yield
                  else
                    let m1_260: sha256_bits = extract4(@15_r_359) in
                    let mB_265: sha256_bits = SHA256_HMAC(SHA256_HMACk, (concat1(gx, @5_exp'(g, y), pubX_264, keyidB_init'), m1_260)) in
                    let @20_m_339: bitstring = sha256ToBits(mB_265) in
                    if checksign(@20_m_339, pubX_264, signmB) then
                    let m1'_262: sha256_bits = extract6(@15_r_359) in
                    let mA_266: sha256_bits = SHA256_HMAC(SHA256_HMACk, (concat1(@5_exp'(g, y), gx, @20_pkgen2(rA), keyidA_init), m1'_262)) in
                    new rs2_551: sseed;
                    let @20_x_336: bitstring = sha256ToBits(mA_266) in
                    let xA: bitstring = concat2(@20_pkgen2(rA), keyidA_init, @20_sign2(@20_x_336, @20_skgen2(rA), rs2_551)) in
                    let c'_259: enc_key = extract3(@15_r_359) in
                    let encxA_267: bitstring = senc(xA, c'_259, zero_ctr) in
                    let ssid_257: ssid = extract1(@15_r_359) in
                    event Alice_starts_session_with(pubX_264, ssid_257);
                    let m2'_263: sha256_bits = extract7(@15_r_359) in
                    out(chA4[!_250], (encxA_267, SHA256_HMAC160(encxA_267, m2'_263)));
                    in(chA40[!_250], ())
          )
          orfind @i_532 = @ri_531 <= qSHA256 suchthat defined(x_283[@ri_531], @14_r_517[@ri_531]) && (gx = x_283[@ri_531]) then
          (
            if (hashgx = @14_r_517[@i_532]) then
            let s_453: G = gexp(gx, y) in
            find [unique] @i_408 = @ri_407 <= NA suchthat defined(s_453[@ri_407], @15_r_359[@ri_407]) && (s_453 = s_453[@ri_407]) then
            (
              let m2_261: sha256_bits = extract5(@15_r_359[@i_408]) in
              if SHA256_HMAC160_check(encxB_254, m2_261, hmacencxB) then
              let c_258: enc_key = extract2(@15_r_359[@i_408]) in
              let concat2(pubX_264: spkey, keyidB_init': key_id, signmB: signature) = sdec(encxB_254, c_258, zero_ctr) in
              let m1_260: sha256_bits = extract4(@15_r_359[@i_408]) in
              let mB_265: sha256_bits = SHA256_HMAC(SHA256_HMACk, (concat1(gx, @5_exp'(g, y), pubX_264, keyidB_init'), m1_260)) in
              let @20_m_339: bitstring = sha256ToBits(mB_265) in
              find @i_346 = @ri_345 <= NA suchthat defined(y[@ri_345], gx[@ri_345], m1'_262[@ri_345], @20_x_336[@ri_345]) && (gx = @5_exp'(g, y[@ri_345])) && (@5_exp'(g, y) = gx[@ri_345]) && (pubX_264 = @20_pkgen2(rA)) && (keyidB_init' = keyidA_init) && (m1_260 = m1'_262[@ri_345]) && @20_check2(@20_m_339, pubX_264, signmB) then
              (
                let m1'_262: sha256_bits = extract6(@15_r_359[@i_408]) in
                let mA_266: sha256_bits = SHA256_HMAC(SHA256_HMACk, (concat1(@5_exp'(g, y), gx, @20_pkgen2(rA), keyidA_init), m1'_262)) in
                new rs2_433: sseed;
                let @20_x_336: bitstring = sha256ToBits(mA_266) in
                let xA: bitstring = concat2(@20_pkgen2(rA), keyidA_init, @20_sign2(@20_x_336, @20_skgen2(rA), rs2_433)) in
                let c'_259: enc_key = extract3(@15_r_359[@i_408]) in
                let encxA_267: bitstring = senc(xA, c'_259, zero_ctr) in
                let ssid_257: ssid = extract1(@15_r_359[@i_408]) in
                event Alice_starts_session_with(pubX_264, ssid_257);
                let m2'_263: sha256_bits = extract7(@15_r_359[@i_408]) in
                out(chA4[!_250], (encxA_267, SHA256_HMAC160(encxA_267, m2'_263)));
                in(chA40[!_250], ())
              )
              else
                if (pubX_264 = @20_pkgen2(rA)) then
                  yield
                else
                  if (pubX_264 = @20_pkgen2(rB)) then
                    yield
                  else
                    if checksign(@20_m_339, pubX_264, signmB) then
                    let m1'_262: sha256_bits = extract6(@15_r_359[@i_408]) in
                    let mA_266: sha256_bits = SHA256_HMAC(SHA256_HMACk, (concat1(@5_exp'(g, y), gx, @20_pkgen2(rA), keyidA_init), m1'_262)) in
                    new rs2_557: sseed;
                    let @20_x_336: bitstring = sha256ToBits(mA_266) in
                    let xA: bitstring = concat2(@20_pkgen2(rA), keyidA_init, @20_sign2(@20_x_336, @20_skgen2(rA), rs2_557)) in
                    let c'_259: enc_key = extract3(@15_r_359[@i_408]) in
                    let encxA_267: bitstring = senc(xA, c'_259, zero_ctr) in
                    let ssid_257: ssid = extract1(@15_r_359[@i_408]) in
                    event Alice_starts_session_with(pubX_264, ssid_257);
                    let m2'_263: sha256_bits = extract7(@15_r_359[@i_408]) in
                    out(chA4[!_250], (encxA_267, SHA256_HMAC160(encxA_267, m2'_263)));
                    in(chA40[!_250], ())
            )
            orfind @i_404 = @ri_403 <= NB suchthat defined(s_451[@ri_403], @15_r_363[@ri_403]) && (s_453 = s_451[@ri_403]) then
            (
              let m2_261: sha256_bits = extract5(@15_r_363[@i_404]) in
              if SHA256_HMAC160_check(encxB_254, m2_261, hmacencxB) then
              let c_258: enc_key = extract2(@15_r_363[@i_404]) in
              let concat2(pubX_264: spkey, keyidB_init': key_id, signmB: signature) = sdec(encxB_254, c_258, zero_ctr) in
              let m1_260: sha256_bits = extract4(@15_r_363[@i_404]) in
              let mB_265: sha256_bits = SHA256_HMAC(SHA256_HMACk, (concat1(gx, @5_exp'(g, y), pubX_264, keyidB_init'), m1_260)) in
              let @20_m_339: bitstring = sha256ToBits(mB_265) in
              find @i_346 = @ri_345 <= NA suchthat defined(y[@ri_345], gx[@ri_345], m1'_262[@ri_345], @20_x_336[@ri_345]) && (gx = @5_exp'(g, y[@ri_345])) && (@5_exp'(g, y) = gx[@ri_345]) && (pubX_264 = @20_pkgen2(rA)) && (keyidB_init' = keyidA_init) && (m1_260 = m1'_262[@ri_345]) && @20_check2(@20_m_339, pubX_264, signmB) then
              (
                let m1'_262: sha256_bits = extract6(@15_r_363[@i_404]) in
                let mA_266: sha256_bits = SHA256_HMAC(SHA256_HMACk, (concat1(@5_exp'(g, y), gx, @20_pkgen2(rA), keyidA_init), m1'_262)) in
                new rs2_436: sseed;
                let @20_x_336: bitstring = sha256ToBits(mA_266) in
                let xA: bitstring = concat2(@20_pkgen2(rA), keyidA_init, @20_sign2(@20_x_336, @20_skgen2(rA), rs2_436)) in
                let c'_259: enc_key = extract3(@15_r_363[@i_404]) in
                let encxA_267: bitstring = senc(xA, c'_259, zero_ctr) in
                let ssid_257: ssid = extract1(@15_r_363[@i_404]) in
                event Alice_starts_session_with(pubX_264, ssid_257);
                let m2'_263: sha256_bits = extract7(@15_r_363[@i_404]) in
                out(chA4[!_250], (encxA_267, SHA256_HMAC160(encxA_267, m2'_263)));
                in(chA40[!_250], ())
              )
              else
                if (pubX_264 = @20_pkgen2(rA)) then
                  yield
                else
                  if (pubX_264 = @20_pkgen2(rB)) then
                    yield
                  else
                    if checksign(@20_m_339, pubX_264, signmB) then
                    let m1'_262: sha256_bits = extract6(@15_r_363[@i_404]) in
                    let mA_266: sha256_bits = SHA256_HMAC(SHA256_HMACk, (concat1(@5_exp'(g, y), gx, @20_pkgen2(rA), keyidA_init), m1'_262)) in
                    new rs2_558: sseed;
                    let @20_x_336: bitstring = sha256ToBits(mA_266) in
                    let xA: bitstring = concat2(@20_pkgen2(rA), keyidA_init, @20_sign2(@20_x_336, @20_skgen2(rA), rs2_558)) in
                    let c'_259: enc_key = extract3(@15_r_363[@i_404]) in
                    let encxA_267: bitstring = senc(xA, c'_259, zero_ctr) in
                    let ssid_257: ssid = extract1(@15_r_363[@i_404]) in
                    event Alice_starts_session_with(pubX_264, ssid_257);
                    let m2'_263: sha256_bits = extract7(@15_r_363[@i_404]) in
                    out(chA4[!_250], (encxA_267, SHA256_HMAC160(encxA_267, m2'_263)));
                    in(chA40[!_250], ())
            )
            orfind @i_402 = @ri_401 <= NB suchthat defined(x_268[@ri_401], y[j[@ri_401]], @15_r_365[@ri_401], s_453[j[@ri_401]]) && (s_453 = @5_exp'(g, mult(x_268[@ri_401], y[j[@ri_401]]))) then
            (
              let m2_261: sha256_bits = extract5(@15_r_365[@i_402]) in
              if SHA256_HMAC160_check(encxB_254, m2_261, hmacencxB) then
              let c_258: enc_key = extract2(@15_r_365[@i_402]) in
              let concat2(pubX_264: spkey, keyidB_init': key_id, signmB: signature) = sdec(encxB_254, c_258, zero_ctr) in
              if (pubX_264 = @20_pkgen2(rA)) then
                yield
              else
                if (pubX_264 = @20_pkgen2(rB)) then
                  yield
                else
                  let m1_260: sha256_bits = extract4(@15_r_365[@i_402]) in
                  let mB_265: sha256_bits = SHA256_HMAC(SHA256_HMACk, (concat1(gx, @5_exp'(g, y), pubX_264, keyidB_init'), m1_260)) in
                  let @20_m_339: bitstring = sha256ToBits(mB_265) in
                  if checksign(@20_m_339, pubX_264, signmB) then
                  let m1'_262: sha256_bits = extract6(@15_r_365[@i_402]) in
                  let mA_266: sha256_bits = SHA256_HMAC(SHA256_HMACk, (concat1(@5_exp'(g, y), gx, @20_pkgen2(rA), keyidA_init), m1'_262)) in
                  new rs2_559: sseed;
                  let @20_x_336: bitstring = sha256ToBits(mA_266) in
                  let xA: bitstring = concat2(@20_pkgen2(rA), keyidA_init, @20_sign2(@20_x_336, @20_skgen2(rA), rs2_559)) in
                  let c'_259: enc_key = extract3(@15_r_365[@i_402]) in
                  let encxA_267: bitstring = senc(xA, c'_259, zero_ctr) in
                  let ssid_257: ssid = extract1(@15_r_365[@i_402]) in
                  event Alice_starts_session_with(pubX_264, ssid_257);
                  let m2'_263: sha256_bits = extract7(@15_r_365[@i_402]) in
                  out(chA4[!_250], (encxA_267, SHA256_HMAC160(encxA_267, m2'_263)));
                  in(chA40[!_250], ())
            )
            orfind @i_400 = @ri_399 <= qhash2_6 suchthat defined(x_284[@ri_399], @15_r_367[@ri_399]) && (s_453 = x_284[@ri_399]) then
            (
              let m2_261: sha256_bits = extract5(@15_r_367[@i_400]) in
              if SHA256_HMAC160_check(encxB_254, m2_261, hmacencxB) then
              let c_258: enc_key = extract2(@15_r_367[@i_400]) in
              let concat2(pubX_264: spkey, keyidB_init': key_id, signmB: signature) = sdec(encxB_254, c_258, zero_ctr) in
              let m1_260: sha256_bits = extract4(@15_r_367[@i_400]) in
              let mB_265: sha256_bits = SHA256_HMAC(SHA256_HMACk, (concat1(gx, @5_exp'(g, y), pubX_264, keyidB_init'), m1_260)) in
              let @20_m_339: bitstring = sha256ToBits(mB_265) in
              find @i_346 = @ri_345 <= NA suchthat defined(y[@ri_345], gx[@ri_345], m1'_262[@ri_345], @20_x_336[@ri_345]) && (gx = @5_exp'(g, y[@ri_345])) && (@5_exp'(g, y) = gx[@ri_345]) && (pubX_264 = @20_pkgen2(rA)) && (keyidB_init' = keyidA_init) && (m1_260 = m1'_262[@ri_345]) && @20_check2(@20_m_339, pubX_264, signmB) then
              (
                let m1'_262: sha256_bits = extract6(@15_r_367[@i_400]) in
                let mA_266: sha256_bits = SHA256_HMAC(SHA256_HMACk, (concat1(@5_exp'(g, y), gx, @20_pkgen2(rA), keyidA_init), m1'_262)) in
                new rs2_439: sseed;
                let @20_x_336: bitstring = sha256ToBits(mA_266) in
                let xA: bitstring = concat2(@20_pkgen2(rA), keyidA_init, @20_sign2(@20_x_336, @20_skgen2(rA), rs2_439)) in
                let c'_259: enc_key = extract3(@15_r_367[@i_400]) in
                let encxA_267: bitstring = senc(xA, c'_259, zero_ctr) in
                let ssid_257: ssid = extract1(@15_r_367[@i_400]) in
                event Alice_starts_session_with(pubX_264, ssid_257);
                let m2'_263: sha256_bits = extract7(@15_r_367[@i_400]) in
                out(chA4[!_250], (encxA_267, SHA256_HMAC160(encxA_267, m2'_263)));
                in(chA40[!_250], ())
              )
              else
                if (pubX_264 = @20_pkgen2(rA)) then
                  yield
                else
                  if (pubX_264 = @20_pkgen2(rB)) then
                    yield
                  else
                    if checksign(@20_m_339, pubX_264, signmB) then
                    let m1'_262: sha256_bits = extract6(@15_r_367[@i_400]) in
                    let mA_266: sha256_bits = SHA256_HMAC(SHA256_HMACk, (concat1(@5_exp'(g, y), gx, @20_pkgen2(rA), keyidA_init), m1'_262)) in
                    new rs2_560: sseed;
                    let @20_x_336: bitstring = sha256ToBits(mA_266) in
                    let xA: bitstring = concat2(@20_pkgen2(rA), keyidA_init, @20_sign2(@20_x_336, @20_skgen2(rA), rs2_560)) in
                    let c'_259: enc_key = extract3(@15_r_367[@i_400]) in
                    let encxA_267: bitstring = senc(xA, c'_259, zero_ctr) in
                    let ssid_257: ssid = extract1(@15_r_367[@i_400]) in
                    event Alice_starts_session_with(pubX_264, ssid_257);
                    let m2'_263: sha256_bits = extract7(@15_r_367[@i_400]) in
                    out(chA4[!_250], (encxA_267, SHA256_HMAC160(encxA_267, m2'_263)));
                    in(chA40[!_250], ())
            )
            else
              new @15_r_359: keys6;
              let m2_261: sha256_bits = extract5(@15_r_359) in
              if SHA256_HMAC160_check(encxB_254, m2_261, hmacencxB) then
              let c_258: enc_key = extract2(@15_r_359) in
              let concat2(pubX_264: spkey, keyidB_init': key_id, signmB: signature) = sdec(encxB_254, c_258, zero_ctr) in
              let m1_260: sha256_bits = extract4(@15_r_359) in
              let mB_265: sha256_bits = SHA256_HMAC(SHA256_HMACk, (concat1(gx, @5_exp'(g, y), pubX_264, keyidB_init'), m1_260)) in
              let @20_m_339: bitstring = sha256ToBits(mB_265) in
              find @i_346 = @ri_345 <= NA suchthat defined(y[@ri_345], gx[@ri_345], m1'_262[@ri_345], @20_x_336[@ri_345]) && (gx = @5_exp'(g, y[@ri_345])) && (@5_exp'(g, y) = gx[@ri_345]) && (pubX_264 = @20_pkgen2(rA)) && (keyidB_init' = keyidA_init) && (m1_260 = m1'_262[@ri_345]) && @20_check2(@20_m_339, pubX_264, signmB) then
              (
                let m1'_262: sha256_bits = extract6(@15_r_359) in
                let mA_266: sha256_bits = SHA256_HMAC(SHA256_HMACk, (concat1(@5_exp'(g, y), gx, @20_pkgen2(rA), keyidA_init), m1'_262)) in
                new rs2_431: sseed;
                let @20_x_336: bitstring = sha256ToBits(mA_266) in
                let xA: bitstring = concat2(@20_pkgen2(rA), keyidA_init, @20_sign2(@20_x_336, @20_skgen2(rA), rs2_431)) in
                let c'_259: enc_key = extract3(@15_r_359) in
                let encxA_267: bitstring = senc(xA, c'_259, zero_ctr) in
                let ssid_257: ssid = extract1(@15_r_359) in
                event Alice_starts_session_with(pubX_264, ssid_257);
                let m2'_263: sha256_bits = extract7(@15_r_359) in
                out(chA4[!_250], (encxA_267, SHA256_HMAC160(encxA_267, m2'_263)));
                in(chA40[!_250], ())
              )
              else
                if (pubX_264 = @20_pkgen2(rA)) then
                  yield
                else
                  if (pubX_264 = @20_pkgen2(rB)) then
                    yield
                  else
                    if checksign(@20_m_339, pubX_264, signmB) then
                    let m1'_262: sha256_bits = extract6(@15_r_359) in
                    let mA_266: sha256_bits = SHA256_HMAC(SHA256_HMACk, (concat1(@5_exp'(g, y), gx, @20_pkgen2(rA), keyidA_init), m1'_262)) in
                    new rs2_556: sseed;
                    let @20_x_336: bitstring = sha256ToBits(mA_266) in
                    let xA: bitstring = concat2(@20_pkgen2(rA), keyidA_init, @20_sign2(@20_x_336, @20_skgen2(rA), rs2_556)) in
                    let c'_259: enc_key = extract3(@15_r_359) in
                    let encxA_267: bitstring = senc(xA, c'_259, zero_ctr) in
                    let ssid_257: ssid = extract1(@15_r_359) in
                    event Alice_starts_session_with(pubX_264, ssid_257);
                    let m2'_263: sha256_bits = extract7(@15_r_359) in
                    out(chA4[!_250], (encxA_267, SHA256_HMAC160(encxA_267, m2'_263)));
                    in(chA40[!_250], ())
          )
        ) | (
          ! !_251 <= NB
          in(chB0[!_251], ());
          new x_268: exp;
          let @14_x_516: G = @5_exp'(g, x_268) in
          new @14_r_515: sha256_bits;
          out(chB1[!_251], @14_r_515);
          in(chB2[!_251], gy: G);
          find j = j_357 <= NA suchthat defined(y[j_357], hashgx[j_357]) && (gy = @5_exp'(g, y[j_357])) && (hashgx[j_357] = @14_r_515) then
          (
            find [unique] @i_398 = @ri_397 <= NA suchthat defined(s_453[@ri_397], @15_r_359[@ri_397], gx[j], s_453[j]) && (s_453[@ri_397] = @5_exp'(g, mult(x_268, y[j]))) then
            (
              let c_272: enc_key = extract2(@15_r_359[@i_398]) in
              let m1_274: sha256_bits = extract4(@15_r_359[@i_398]) in
              let m2_275: sha256_bits = extract5(@15_r_359[@i_398]) in
              let m2'_277: sha256_bits = extract7(@15_r_359[@i_398]) in
              let mB_278: sha256_bits = SHA256_HMAC(SHA256_HMACk, (concat1(@5_exp'(g, x_268), gy, @20_pkgen2(rB), keyidB_init), m1_274)) in
              new rs1_426: sseed;
              let @20_x_352: bitstring = sha256ToBits(mB_278) in
              let xB: bitstring = concat2(@20_pkgen2(rB), keyidB_init, @20_sign2(@20_x_352, @20_skgen2(rB), rs1_426)) in
              let encxB_279: bitstring = senc(xB, c_272, zero_ctr) in
              out(chB3[!_251], (@5_exp'(g, x_268), encxB_279, SHA256_HMAC160(encxB_279, m2_275)));
              in(chB4[!_251], (encxA_280: bitstring, hmacencxA: sha1_bits));
              if SHA256_HMAC160_check(encxA_280, m2'_277, hmacencxA) then
              let c'_273: enc_key = extract3(@15_r_359[@i_398]) in
              let concat2(pubX_281: spkey, keyidA_init': key_id, signmA: signature) = sdec(encxA_280, c'_273, zero_ctr) in
              let m1'_276: sha256_bits = extract6(@15_r_359[@i_398]) in
              let mA_282: sha256_bits = SHA256_HMAC(SHA256_HMACk, (concat1(gy, @5_exp'(g, x_268), pubX_281, keyidA_init'), m1'_276)) in
              let @20_m_342: bitstring = sha256ToBits(mA_282) in
              if defined(@20_x_336[j]) && (@5_exp'(g, x_268) = gx[j]) && (pubX_281 = @20_pkgen2(rA)) && (keyidA_init' = keyidA_init) && @20_check2(@20_m_342, pubX_281, signmA) then
              let ssid_271: ssid = extract1(@15_r_359[@i_398]) in
              event Bob_session_with_Alice(@20_pkgen2(rB), ssid_271)
            )
            orfind  suchthat defined(@15_r_361[j]) then
            (
              let c_272: enc_key = extract2(@15_r_361[j]) in
              let m1_274: sha256_bits = extract4(@15_r_361[j]) in
              let m2_275: sha256_bits = extract5(@15_r_361[j]) in
              let m2'_277: sha256_bits = extract7(@15_r_361[j]) in
              let mB_278: sha256_bits = SHA256_HMAC(SHA256_HMACk, (concat1(@5_exp'(g, x_268), gy, @20_pkgen2(rB), keyidB_init), m1_274)) in
              new rs1_427: sseed;
              let @20_x_352: bitstring = sha256ToBits(mB_278) in
              let xB: bitstring = concat2(@20_pkgen2(rB), keyidB_init, @20_sign2(@20_x_352, @20_skgen2(rB), rs1_427)) in
              let encxB_279: bitstring = senc(xB, c_272, zero_ctr) in
              out(chB3[!_251], (@5_exp'(g, x_268), encxB_279, SHA256_HMAC160(encxB_279, m2_275)));
              in(chB4[!_251], (encxA_280: bitstring, hmacencxA: sha1_bits));
              if SHA256_HMAC160_check(encxA_280, m2'_277, hmacencxA) then
              let c'_273: enc_key = extract3(@15_r_361[j]) in
              let concat2(pubX_281: spkey, keyidA_init': key_id, signmA: signature) = sdec(encxA_280, c'_273, zero_ctr) in
              let m1'_276: sha256_bits = extract6(@15_r_361[j]) in
              let mA_282: sha256_bits = SHA256_HMAC(SHA256_HMACk, (concat1(gy, @5_exp'(g, x_268), pubX_281, keyidA_init'), m1'_276)) in
              let @20_m_342: bitstring = sha256ToBits(mA_282) in
              if defined(@20_x_336[j]) && (pubX_281 = @20_pkgen2(rA)) && (keyidA_init' = keyidA_init) && @20_check2(@20_m_342, pubX_281, signmA) then
              let ssid_271: ssid = extract1(@15_r_361[j]) in
              event Bob_session_with_Alice(@20_pkgen2(rB), ssid_271)
            )
            orfind @i_394 = @ri_393 <= NB suchthat defined(s_451[@ri_393], @15_r_363[@ri_393], gx[j], s_453[j]) && (s_451[@ri_393] = @5_exp'(g, mult(x_268, y[j]))) then
            (
              let c_272: enc_key = extract2(@15_r_363[@i_394]) in
              let m1_274: sha256_bits = extract4(@15_r_363[@i_394]) in
              let m2_275: sha256_bits = extract5(@15_r_363[@i_394]) in
              let m2'_277: sha256_bits = extract7(@15_r_363[@i_394]) in
              let mB_278: sha256_bits = SHA256_HMAC(SHA256_HMACk, (concat1(@5_exp'(g, x_268), gy, @20_pkgen2(rB), keyidB_init), m1_274)) in
              new rs1_428: sseed;
              let @20_x_352: bitstring = sha256ToBits(mB_278) in
              let xB: bitstring = concat2(@20_pkgen2(rB), keyidB_init, @20_sign2(@20_x_352, @20_skgen2(rB), rs1_428)) in
              let encxB_279: bitstring = senc(xB, c_272, zero_ctr) in
              out(chB3[!_251], (@5_exp'(g, x_268), encxB_279, SHA256_HMAC160(encxB_279, m2_275)));
              in(chB4[!_251], (encxA_280: bitstring, hmacencxA: sha1_bits));
              if SHA256_HMAC160_check(encxA_280, m2'_277, hmacencxA) then
              let c'_273: enc_key = extract3(@15_r_363[@i_394]) in
              let concat2(pubX_281: spkey, keyidA_init': key_id, signmA: signature) = sdec(encxA_280, c'_273, zero_ctr) in
              let m1'_276: sha256_bits = extract6(@15_r_363[@i_394]) in
              let mA_282: sha256_bits = SHA256_HMAC(SHA256_HMACk, (concat1(gy, @5_exp'(g, x_268), pubX_281, keyidA_init'), m1'_276)) in
              let @20_m_342: bitstring = sha256ToBits(mA_282) in
              if defined(@20_x_336[j]) && (@5_exp'(g, x_268) = gx[j]) && (pubX_281 = @20_pkgen2(rA)) && (keyidA_init' = keyidA_init) && @20_check2(@20_m_342, pubX_281, signmA) then
              let ssid_271: ssid = extract1(@15_r_363[@i_394]) in
              event Bob_session_with_Alice(@20_pkgen2(rB), ssid_271)
            )
            orfind @i_390 = @ri_389 <= qhash2_6 suchthat defined(x_284[@ri_389], @15_r_367[@ri_389], gx[j], s_453[j]) && (x_284[@ri_389] = @5_exp'(g, mult(x_268, y[j]))) then
            (
              let c_272: enc_key = extract2(@15_r_367[@i_390]) in
              let m1_274: sha256_bits = extract4(@15_r_367[@i_390]) in
              let m2_275: sha256_bits = extract5(@15_r_367[@i_390]) in
              let m2'_277: sha256_bits = extract7(@15_r_367[@i_390]) in
              let mB_278: sha256_bits = SHA256_HMAC(SHA256_HMACk, (concat1(@5_exp'(g, x_268), gy, @20_pkgen2(rB), keyidB_init), m1_274)) in
              new rs1_429: sseed;
              let @20_x_352: bitstring = sha256ToBits(mB_278) in
              let xB: bitstring = concat2(@20_pkgen2(rB), keyidB_init, @20_sign2(@20_x_352, @20_skgen2(rB), rs1_429)) in
              let encxB_279: bitstring = senc(xB, c_272, zero_ctr) in
              out(chB3[!_251], (@5_exp'(g, x_268), encxB_279, SHA256_HMAC160(encxB_279, m2_275)));
              in(chB4[!_251], (encxA_280: bitstring, hmacencxA: sha1_bits));
              if SHA256_HMAC160_check(encxA_280, m2'_277, hmacencxA) then
              let c'_273: enc_key = extract3(@15_r_367[@i_390]) in
              let concat2(pubX_281: spkey, keyidA_init': key_id, signmA: signature) = sdec(encxA_280, c'_273, zero_ctr) in
              let m1'_276: sha256_bits = extract6(@15_r_367[@i_390]) in
              let mA_282: sha256_bits = SHA256_HMAC(SHA256_HMACk, (concat1(gy, @5_exp'(g, x_268), pubX_281, keyidA_init'), m1'_276)) in
              let @20_m_342: bitstring = sha256ToBits(mA_282) in
              if defined(@20_x_336[j]) && (@5_exp'(g, x_268) = gx[j]) && (pubX_281 = @20_pkgen2(rA)) && (keyidA_init' = keyidA_init) && @20_check2(@20_m_342, pubX_281, signmA) then
              let ssid_271: ssid = extract1(@15_r_367[@i_390]) in
              event Bob_session_with_Alice(@20_pkgen2(rB), ssid_271)
            )
            else
              new @15_r_365: keys6;
              let c_272: enc_key = extract2(@15_r_365) in
              let m1_274: sha256_bits = extract4(@15_r_365) in
              let m2_275: sha256_bits = extract5(@15_r_365) in
              let m2'_277: sha256_bits = extract7(@15_r_365) in
              let mB_278: sha256_bits = SHA256_HMAC(SHA256_HMACk, (concat1(@5_exp'(g, x_268), gy, @20_pkgen2(rB), keyidB_init), m1_274)) in
              new rs1_425: sseed;
              let @20_x_352: bitstring = sha256ToBits(mB_278) in
              let xB: bitstring = concat2(@20_pkgen2(rB), keyidB_init, @20_sign2(@20_x_352, @20_skgen2(rB), rs1_425)) in
              let encxB_279: bitstring = senc(xB, c_272, zero_ctr) in
              out(chB3[!_251], (@5_exp'(g, x_268), encxB_279, SHA256_HMAC160(encxB_279, m2_275)));
              in(chB4[!_251], (encxA_280: bitstring, hmacencxA: sha1_bits));
              if SHA256_HMAC160_check(encxA_280, m2'_277, hmacencxA) then
              let c'_273: enc_key = extract3(@15_r_365) in
              let concat2(pubX_281: spkey, keyidA_init': key_id, signmA: signature) = sdec(encxA_280, c'_273, zero_ctr) in
              let m1'_276: sha256_bits = extract6(@15_r_365) in
              let mA_282: sha256_bits = SHA256_HMAC(SHA256_HMACk, (concat1(gy, @5_exp'(g, x_268), pubX_281, keyidA_init'), m1'_276)) in
              let @20_m_342: bitstring = sha256ToBits(mA_282) in
              if defined(gx[j], @20_x_336[j]) && (@5_exp'(g, x_268) = gx[j]) && (pubX_281 = @20_pkgen2(rA)) && (keyidA_init' = keyidA_init) && @20_check2(@20_m_342, pubX_281, signmA) then
              let ssid_271: ssid = extract1(@15_r_365) in
              event Bob_session_with_Alice(@20_pkgen2(rB), ssid_271)
          )
          else
            let s_451: G = gexp(gy, x_268) in
            find [unique] @i_388 = @ri_387 <= NA suchthat defined(s_453[@ri_387], @15_r_359[@ri_387]) && (s_451 = s_453[@ri_387]) then
            (
              let c_272: enc_key = extract2(@15_r_359[@i_388]) in
              let m1_274: sha256_bits = extract4(@15_r_359[@i_388]) in
              let m2_275: sha256_bits = extract5(@15_r_359[@i_388]) in
              let mB_278: sha256_bits = SHA256_HMAC(SHA256_HMACk, (concat1(@5_exp'(g, x_268), gy, @20_pkgen2(rB), keyidB_init), m1_274)) in
              new rs1_420: sseed;
              let @20_x_352: bitstring = sha256ToBits(mB_278) in
              let xB: bitstring = concat2(@20_pkgen2(rB), keyidB_init, @20_sign2(@20_x_352, @20_skgen2(rB), rs1_420)) in
              let encxB_279: bitstring = senc(xB, c_272, zero_ctr) in
              out(chB3[!_251], (@5_exp'(g, x_268), encxB_279, SHA256_HMAC160(encxB_279, m2_275)));
              in(chB4[!_251], (encxA_280: bitstring, hmacencxA: sha1_bits))
            )
            orfind @i_384 = @ri_383 <= NB suchthat defined(s_451[@ri_383], @15_r_363[@ri_383]) && (s_451 = s_451[@ri_383]) then
            (
              let c_272: enc_key = extract2(@15_r_363[@i_384]) in
              let m1_274: sha256_bits = extract4(@15_r_363[@i_384]) in
              let m2_275: sha256_bits = extract5(@15_r_363[@i_384]) in
              let mB_278: sha256_bits = SHA256_HMAC(SHA256_HMACk, (concat1(@5_exp'(g, x_268), gy, @20_pkgen2(rB), keyidB_init), m1_274)) in
              new rs1_422: sseed;
              let @20_x_352: bitstring = sha256ToBits(mB_278) in
              let xB: bitstring = concat2(@20_pkgen2(rB), keyidB_init, @20_sign2(@20_x_352, @20_skgen2(rB), rs1_422)) in
              let encxB_279: bitstring = senc(xB, c_272, zero_ctr) in
              out(chB3[!_251], (@5_exp'(g, x_268), encxB_279, SHA256_HMAC160(encxB_279, m2_275)));
              in(chB4[!_251], (encxA_280: bitstring, hmacencxA: sha1_bits))
            )
            orfind @i_382 = @ri_381 <= NB suchthat defined(x_268[@ri_381], y[j[@ri_381]], @15_r_365[@ri_381], s_453[j[@ri_381]]) && (s_451 = @5_exp'(g, mult(x_268[@ri_381], y[j[@ri_381]]))) then
            (
              let c_272: enc_key = extract2(@15_r_365[@i_382]) in
              let m1_274: sha256_bits = extract4(@15_r_365[@i_382]) in
              let m2_275: sha256_bits = extract5(@15_r_365[@i_382]) in
              let mB_278: sha256_bits = SHA256_HMAC(SHA256_HMACk, (concat1(@5_exp'(g, x_268), gy, @20_pkgen2(rB), keyidB_init), m1_274)) in
              new rs1_423: sseed;
              let @20_x_352: bitstring = sha256ToBits(mB_278) in
              let xB: bitstring = concat2(@20_pkgen2(rB), keyidB_init, @20_sign2(@20_x_352, @20_skgen2(rB), rs1_423)) in
              let encxB_279: bitstring = senc(xB, c_272, zero_ctr) in
              out(chB3[!_251], (@5_exp'(g, x_268), encxB_279, SHA256_HMAC160(encxB_279, m2_275)));
              in(chB4[!_251], (encxA_280: bitstring, hmacencxA: sha1_bits))
            )
            orfind @i_380 = @ri_379 <= qhash2_6 suchthat defined(x_284[@ri_379], @15_r_367[@ri_379]) && (s_451 = x_284[@ri_379]) then
            (
              let c_272: enc_key = extract2(@15_r_367[@i_380]) in
              let m1_274: sha256_bits = extract4(@15_r_367[@i_380]) in
              let m2_275: sha256_bits = extract5(@15_r_367[@i_380]) in
              let mB_278: sha256_bits = SHA256_HMAC(SHA256_HMACk, (concat1(@5_exp'(g, x_268), gy, @20_pkgen2(rB), keyidB_init), m1_274)) in
              new rs1_424: sseed;
              let @20_x_352: bitstring = sha256ToBits(mB_278) in
              let xB: bitstring = concat2(@20_pkgen2(rB), keyidB_init, @20_sign2(@20_x_352, @20_skgen2(rB), rs1_424)) in
              let encxB_279: bitstring = senc(xB, c_272, zero_ctr) in
              out(chB3[!_251], (@5_exp'(g, x_268), encxB_279, SHA256_HMAC160(encxB_279, m2_275)));
              in(chB4[!_251], (encxA_280: bitstring, hmacencxA: sha1_bits))
            )
            else
              new @15_r_363: keys6;
              let c_272: enc_key = extract2(@15_r_363) in
              let m1_274: sha256_bits = extract4(@15_r_363) in
              let m2_275: sha256_bits = extract5(@15_r_363) in
              let mB_278: sha256_bits = SHA256_HMAC(SHA256_HMACk, (concat1(@5_exp'(g, x_268), gy, @20_pkgen2(rB), keyidB_init), m1_274)) in
              new rs1_419: sseed;
              let @20_x_352: bitstring = sha256ToBits(mB_278) in
              let xB: bitstring = concat2(@20_pkgen2(rB), keyidB_init, @20_sign2(@20_x_352, @20_skgen2(rB), rs1_419)) in
              let encxB_279: bitstring = senc(xB, c_272, zero_ctr) in
              out(chB3[!_251], (@5_exp'(g, x_268), encxB_279, SHA256_HMAC160(encxB_279, m2_275)));
              in(chB4[!_251], (encxA_280: bitstring, hmacencxA: sha1_bits))
        ) | (
          ! !_252 <= qSHA256
          in(sha256_in[!_252], x_283: G);
          find [unique] @i_522 = @ri_521 <= NB suchthat defined(@14_x_516[@ri_521], @14_r_515[@ri_521]) && (x_283 = @14_x_516[@ri_521]) then
            out(sha256_out[!_252], @14_r_515[@i_522])
          orfind @i_520 = @ri_519 <= qSHA256 suchthat defined(x_283[@ri_519], @14_r_517[@ri_519]) && (x_283 = x_283[@ri_519]) then
            out(sha256_out[!_252], @14_r_517[@i_520])
          else
            new @14_r_517: sha256_bits;
            out(sha256_out[!_252], @14_r_517)
        ) | (
          ! !_253 <= qhash2_6
          in(hash2_6_in[!_253], x_284: G);
          find [unique] @i_378 = @ri_377 <= NA suchthat defined(s_453[@ri_377], @15_r_359[@ri_377]) && (x_284 = s_453[@ri_377]) then
            out(hash2_6_out[!_253], @15_r_359[@i_378])
          orfind @i_374 = @ri_373 <= NB suchthat defined(s_451[@ri_373], @15_r_363[@ri_373]) && (x_284 = s_451[@ri_373]) then
            out(hash2_6_out[!_253], @15_r_363[@i_374])
          orfind @i_372 = @ri_371 <= NB suchthat defined(x_268[@ri_371], y[j[@ri_371]], @15_r_365[@ri_371], s_453[j[@ri_371]]) && (x_284 = @5_exp'(g, mult(x_268[@ri_371], y[j[@ri_371]]))) then
            out(hash2_6_out[!_253], @15_r_365[@i_372])
          orfind @i_370 = @ri_369 <= qhash2_6 suchthat defined(x_284[@ri_369], @15_r_367[@ri_369]) && (x_284 = x_284[@ri_369]) then
            out(hash2_6_out[!_253], @15_r_367[@i_370])
          else
            new @15_r_367: keys6;
            out(hash2_6_out[!_253], @15_r_367)
        )


After SA_rename s_453

        in(start, ());
        new SHA256_HMACk: hashkey;
        new rA: keyseed;
        new rB: keyseed;
        out(ch, (@20_pkgen2(rA), @20_pkgen2(rB), SHA256_HMACk));
        (
          ! !_250 <= NA
          in(chA1[!_250], hashgx: sha256_bits);
          new y: exp;
          out(chA2[!_250], @5_exp'(g, y));
          in(chA3[!_250], (gx: G, encxB_254: bitstring, hmacencxB: sha1_bits));
          find [unique] @i_534 = @ri_533 <= NB suchthat defined(@14_x_516[@ri_533], @14_r_515[@ri_533]) && (gx = @14_x_516[@ri_533]) then
          (
            if (hashgx = @14_r_515[@i_534]) then
            if defined(j[@i_534], @15_r_365[@i_534]) && (!_250 = j[@i_534]) then
            (
              let m2_261: sha256_bits = extract5(@15_r_365[@i_534]) in
              if SHA256_HMAC160_check(encxB_254, m2_261, hmacencxB) then
              let c_258: enc_key = extract2(@15_r_365[@i_534]) in
              let concat2(pubX_264: spkey, keyidB_init': key_id, signmB: signature) = sdec(encxB_254, c_258, zero_ctr) in
              if (pubX_264 = @20_pkgen2(rA)) then
                yield
              else
                let m1_260: sha256_bits = extract4(@15_r_365[@i_534]) in
                let mB_265: sha256_bits = SHA256_HMAC(SHA256_HMACk, (concat1(gx, @5_exp'(g, y), pubX_264, keyidB_init'), m1_260)) in
                let @20_m_339: bitstring = sha256ToBits(mB_265) in
                if defined(@20_x_352[@i_534]) && (pubX_264 = @20_pkgen2(rB)) && (keyidB_init' = keyidB_init) && @20_check2(@20_m_339, pubX_264, signmB) then
                (
                  let m1'_262: sha256_bits = extract6(@15_r_365[@i_534]) in
                  let mA_266: sha256_bits = SHA256_HMAC(SHA256_HMACk, (concat1(@5_exp'(g, y), gx, @20_pkgen2(rA), keyidA_init), m1'_262)) in
                  new rs2_447: sseed;
                  let @20_x_336: bitstring = sha256ToBits(mA_266) in
                  let xA: bitstring = concat2(@20_pkgen2(rA), keyidA_init, @20_sign2(@20_x_336, @20_skgen2(rA), rs2_447)) in
                  let c'_259: enc_key = extract3(@15_r_365[@i_534]) in
                  let encxA_267: bitstring = senc(xA, c'_259, zero_ctr) in
                  let ssid_257: ssid = extract1(@15_r_365[@i_534]) in
                  event Alice_starts_session_with(pubX_264, ssid_257);
                  let m2'_263: sha256_bits = extract7(@15_r_365[@i_534]) in
                  out(chA4[!_250], (encxA_267, SHA256_HMAC160(encxA_267, m2'_263)));
                  in(chA40[!_250], ());
                  event Alice_session_with_Bob(@20_pkgen2(rA), ssid_257)
                )
                else
                  if (pubX_264 = @20_pkgen2(rB)) then
                    yield
                  else
                    if checksign(@20_m_339, pubX_264, signmB) then
                    let m1'_262: sha256_bits = extract6(@15_r_365[@i_534]) in
                    let mA_266: sha256_bits = SHA256_HMAC(SHA256_HMACk, (concat1(@5_exp'(g, y), gx, @20_pkgen2(rA), keyidA_init), m1'_262)) in
                    new rs2_446: sseed;
                    let @20_x_336: bitstring = sha256ToBits(mA_266) in
                    let xA: bitstring = concat2(@20_pkgen2(rA), keyidA_init, @20_sign2(@20_x_336, @20_skgen2(rA), rs2_446)) in
                    let c'_259: enc_key = extract3(@15_r_365[@i_534]) in
                    let encxA_267: bitstring = senc(xA, c'_259, zero_ctr) in
                    let ssid_257: ssid = extract1(@15_r_365[@i_534]) in
                    event Alice_starts_session_with(pubX_264, ssid_257);
                    let m2'_263: sha256_bits = extract7(@15_r_365[@i_534]) in
                    out(chA4[!_250], (encxA_267, SHA256_HMAC160(encxA_267, m2'_263)));
                    in(chA40[!_250], ())
            )
            else
              if defined(gy[@i_534]) && (@5_exp'(g, y) = gy[@i_534]) then
              (
                new @15_r_361: keys6;
                let m2_261: sha256_bits = extract5(@15_r_361) in
                if SHA256_HMAC160_check(encxB_254, m2_261, hmacencxB) then
                let c_258: enc_key = extract2(@15_r_361) in
                let concat2(pubX_264: spkey, keyidB_init': key_id, signmB: signature) = sdec(encxB_254, c_258, zero_ctr) in
                if (pubX_264 = @20_pkgen2(rA)) then
                  yield
                else
                  let m1_260: sha256_bits = extract4(@15_r_361) in
                  let mB_265: sha256_bits = SHA256_HMAC(SHA256_HMACk, (concat1(gx, @5_exp'(g, y), pubX_264, keyidB_init'), m1_260)) in
                  let @20_m_339: bitstring = sha256ToBits(mB_265) in
                  if defined(@20_x_352[@i_534]) && (pubX_264 = @20_pkgen2(rB)) && (keyidB_init' = keyidB_init) && @20_check2(@20_m_339, pubX_264, signmB) then
                  (
                    let m1'_262: sha256_bits = extract6(@15_r_361) in
                    let mA_266: sha256_bits = SHA256_HMAC(SHA256_HMACk, (concat1(@5_exp'(g, y), gx, @20_pkgen2(rA), keyidA_init), m1'_262)) in
                    new rs2_441: sseed;
                    let @20_x_336: bitstring = sha256ToBits(mA_266) in
                    let xA: bitstring = concat2(@20_pkgen2(rA), keyidA_init, @20_sign2(@20_x_336, @20_skgen2(rA), rs2_441)) in
                    let c'_259: enc_key = extract3(@15_r_361) in
                    let encxA_267: bitstring = senc(xA, c'_259, zero_ctr) in
                    let ssid_257: ssid = extract1(@15_r_361) in
                    event Alice_starts_session_with(pubX_264, ssid_257);
                    let m2'_263: sha256_bits = extract7(@15_r_361) in
                    out(chA4[!_250], (encxA_267, SHA256_HMAC160(encxA_267, m2'_263)));
                    in(chA40[!_250], ());
                    event Alice_session_with_Bob(@20_pkgen2(rA), ssid_257)
                  )
                  else
                    if (pubX_264 = @20_pkgen2(rB)) then
                      yield
                    else
                      if checksign(@20_m_339, pubX_264, signmB) then
                      let m1'_262: sha256_bits = extract6(@15_r_361) in
                      let mA_266: sha256_bits = SHA256_HMAC(SHA256_HMACk, (concat1(@5_exp'(g, y), gx, @20_pkgen2(rA), keyidA_init), m1'_262)) in
                      new rs2_440: sseed;
                      let @20_x_336: bitstring = sha256ToBits(mA_266) in
                      let xA: bitstring = concat2(@20_pkgen2(rA), keyidA_init, @20_sign2(@20_x_336, @20_skgen2(rA), rs2_440)) in
                      let c'_259: enc_key = extract3(@15_r_361) in
                      let encxA_267: bitstring = senc(xA, c'_259, zero_ctr) in
                      let ssid_257: ssid = extract1(@15_r_361) in
                      event Alice_starts_session_with(pubX_264, ssid_257);
                      let m2'_263: sha256_bits = extract7(@15_r_361) in
                      out(chA4[!_250], (encxA_267, SHA256_HMAC160(encxA_267, m2'_263)));
                      in(chA40[!_250], ())
              )
              else
                let s_561: G = gexp(gx, y) in
                find [unique] @i_408 = @ri_407 <= NA suchthat defined(s_561[@ri_407], @15_r_359[@ri_407]) && (s_561 = s_561[@ri_407]) then
                (
                  let m2_261: sha256_bits = extract5(@15_r_359[@i_408]) in
                  if SHA256_HMAC160_check(encxB_254, m2_261, hmacencxB) then
                  let c_258: enc_key = extract2(@15_r_359[@i_408]) in
                  let concat2(pubX_264: spkey, keyidB_init': key_id, signmB: signature) = sdec(encxB_254, c_258, zero_ctr) in
                  if (pubX_264 = @20_pkgen2(rA)) then
                    yield
                  else
                    if (pubX_264 = @20_pkgen2(rB)) then
                      yield
                    else
                      let m1_260: sha256_bits = extract4(@15_r_359[@i_408]) in
                      let mB_265: sha256_bits = SHA256_HMAC(SHA256_HMACk, (concat1(gx, @5_exp'(g, y), pubX_264, keyidB_init'), m1_260)) in
                      let @20_m_339: bitstring = sha256ToBits(mB_265) in
                      if checksign(@20_m_339, pubX_264, signmB) then
                      let m1'_262: sha256_bits = extract6(@15_r_359[@i_408]) in
                      let mA_266: sha256_bits = SHA256_HMAC(SHA256_HMACk, (concat1(@5_exp'(g, y), gx, @20_pkgen2(rA), keyidA_init), m1'_262)) in
                      new rs2_575: sseed;
                      let @20_x_336: bitstring = sha256ToBits(mA_266) in
                      let xA: bitstring = concat2(@20_pkgen2(rA), keyidA_init, @20_sign2(@20_x_336, @20_skgen2(rA), rs2_575)) in
                      let c'_259: enc_key = extract3(@15_r_359[@i_408]) in
                      let encxA_267: bitstring = senc(xA, c'_259, zero_ctr) in
                      let ssid_257: ssid = extract1(@15_r_359[@i_408]) in
                      event Alice_starts_session_with(pubX_264, ssid_257);
                      let m2'_263: sha256_bits = extract7(@15_r_359[@i_408]) in
                      out(chA4[!_250], (encxA_267, SHA256_HMAC160(encxA_267, m2'_263)));
                      in(chA40[!_250], ())
                )
                orfind @i_408 = @ri_407 <= NA suchthat defined(s_562[@ri_407], @15_r_359[@ri_407]) && (s_561 = s_562[@ri_407]) then
                (
                  let m2_261: sha256_bits = extract5(@15_r_359[@i_408]) in
                  if SHA256_HMAC160_check(encxB_254, m2_261, hmacencxB) then
                  let c_258: enc_key = extract2(@15_r_359[@i_408]) in
                  let concat2(pubX_264: spkey, keyidB_init': key_id, signmB: signature) = sdec(encxB_254, c_258, zero_ctr) in
                  if (pubX_264 = @20_pkgen2(rA)) then
                    yield
                  else
                    if (pubX_264 = @20_pkgen2(rB)) then
                      yield
                    else
                      let m1_260: sha256_bits = extract4(@15_r_359[@i_408]) in
                      let mB_265: sha256_bits = SHA256_HMAC(SHA256_HMACk, (concat1(gx, @5_exp'(g, y), pubX_264, keyidB_init'), m1_260)) in
                      let @20_m_339: bitstring = sha256ToBits(mB_265) in
                      if checksign(@20_m_339, pubX_264, signmB) then
                      let m1'_262: sha256_bits = extract6(@15_r_359[@i_408]) in
                      let mA_266: sha256_bits = SHA256_HMAC(SHA256_HMACk, (concat1(@5_exp'(g, y), gx, @20_pkgen2(rA), keyidA_init), m1'_262)) in
                      new rs2_576: sseed;
                      let @20_x_336: bitstring = sha256ToBits(mA_266) in
                      let xA: bitstring = concat2(@20_pkgen2(rA), keyidA_init, @20_sign2(@20_x_336, @20_skgen2(rA), rs2_576)) in
                      let c'_259: enc_key = extract3(@15_r_359[@i_408]) in
                      let encxA_267: bitstring = senc(xA, c'_259, zero_ctr) in
                      let ssid_257: ssid = extract1(@15_r_359[@i_408]) in
                      event Alice_starts_session_with(pubX_264, ssid_257);
                      let m2'_263: sha256_bits = extract7(@15_r_359[@i_408]) in
                      out(chA4[!_250], (encxA_267, SHA256_HMAC160(encxA_267, m2'_263)));
                      in(chA40[!_250], ())
                )
                orfind @i_404 = @ri_403 <= NB suchthat defined(s_451[@ri_403], @15_r_363[@ri_403]) && (s_561 = s_451[@ri_403]) then
                (
                  let m2_261: sha256_bits = extract5(@15_r_363[@i_404]) in
                  if SHA256_HMAC160_check(encxB_254, m2_261, hmacencxB) then
                  let c_258: enc_key = extract2(@15_r_363[@i_404]) in
                  let concat2(pubX_264: spkey, keyidB_init': key_id, signmB: signature) = sdec(encxB_254, c_258, zero_ctr) in
                  if (pubX_264 = @20_pkgen2(rA)) then
                    yield
                  else
                    if (pubX_264 = @20_pkgen2(rB)) then
                      yield
                    else
                      let m1_260: sha256_bits = extract4(@15_r_363[@i_404]) in
                      let mB_265: sha256_bits = SHA256_HMAC(SHA256_HMACk, (concat1(gx, @5_exp'(g, y), pubX_264, keyidB_init'), m1_260)) in
                      let @20_m_339: bitstring = sha256ToBits(mB_265) in
                      if checksign(@20_m_339, pubX_264, signmB) then
                      let m1'_262: sha256_bits = extract6(@15_r_363[@i_404]) in
                      let mA_266: sha256_bits = SHA256_HMAC(SHA256_HMACk, (concat1(@5_exp'(g, y), gx, @20_pkgen2(rA), keyidA_init), m1'_262)) in
                      new rs2_553: sseed;
                      let @20_x_336: bitstring = sha256ToBits(mA_266) in
                      let xA: bitstring = concat2(@20_pkgen2(rA), keyidA_init, @20_sign2(@20_x_336, @20_skgen2(rA), rs2_553)) in
                      let c'_259: enc_key = extract3(@15_r_363[@i_404]) in
                      let encxA_267: bitstring = senc(xA, c'_259, zero_ctr) in
                      let ssid_257: ssid = extract1(@15_r_363[@i_404]) in
                      event Alice_starts_session_with(pubX_264, ssid_257);
                      let m2'_263: sha256_bits = extract7(@15_r_363[@i_404]) in
                      out(chA4[!_250], (encxA_267, SHA256_HMAC160(encxA_267, m2'_263)));
                      in(chA40[!_250], ())
                )
                orfind @i_402 = @ri_401 <= NB suchthat defined(x_268[@ri_401], y[j[@ri_401]], @15_r_365[@ri_401], s_561[j[@ri_401]]) && (s_561 = @5_exp'(g, mult(x_268[@ri_401], y[j[@ri_401]]))) then
                (
                  let m2_261: sha256_bits = extract5(@15_r_365[@i_402]) in
                  if SHA256_HMAC160_check(encxB_254, m2_261, hmacencxB) then
                  let c_258: enc_key = extract2(@15_r_365[@i_402]) in
                  let concat2(pubX_264: spkey, keyidB_init': key_id, signmB: signature) = sdec(encxB_254, c_258, zero_ctr) in
                  if (pubX_264 = @20_pkgen2(rA)) then
                    yield
                  else
                    if (pubX_264 = @20_pkgen2(rB)) then
                      yield
                    else
                      let m1_260: sha256_bits = extract4(@15_r_365[@i_402]) in
                      let mB_265: sha256_bits = SHA256_HMAC(SHA256_HMACk, (concat1(gx, @5_exp'(g, y), pubX_264, keyidB_init'), m1_260)) in
                      let @20_m_339: bitstring = sha256ToBits(mB_265) in
                      if checksign(@20_m_339, pubX_264, signmB) then
                      let m1'_262: sha256_bits = extract6(@15_r_365[@i_402]) in
                      let mA_266: sha256_bits = SHA256_HMAC(SHA256_HMACk, (concat1(@5_exp'(g, y), gx, @20_pkgen2(rA), keyidA_init), m1'_262)) in
                      new rs2_577: sseed;
                      let @20_x_336: bitstring = sha256ToBits(mA_266) in
                      let xA: bitstring = concat2(@20_pkgen2(rA), keyidA_init, @20_sign2(@20_x_336, @20_skgen2(rA), rs2_577)) in
                      let c'_259: enc_key = extract3(@15_r_365[@i_402]) in
                      let encxA_267: bitstring = senc(xA, c'_259, zero_ctr) in
                      let ssid_257: ssid = extract1(@15_r_365[@i_402]) in
                      event Alice_starts_session_with(pubX_264, ssid_257);
                      let m2'_263: sha256_bits = extract7(@15_r_365[@i_402]) in
                      out(chA4[!_250], (encxA_267, SHA256_HMAC160(encxA_267, m2'_263)));
                      in(chA40[!_250], ())
                )
                orfind @i_400 = @ri_399 <= qhash2_6 suchthat defined(x_284[@ri_399], @15_r_367[@ri_399]) && (s_561 = x_284[@ri_399]) then
                (
                  let m2_261: sha256_bits = extract5(@15_r_367[@i_400]) in
                  if SHA256_HMAC160_check(encxB_254, m2_261, hmacencxB) then
                  let c_258: enc_key = extract2(@15_r_367[@i_400]) in
                  let concat2(pubX_264: spkey, keyidB_init': key_id, signmB: signature) = sdec(encxB_254, c_258, zero_ctr) in
                  if (pubX_264 = @20_pkgen2(rA)) then
                    yield
                  else
                    if (pubX_264 = @20_pkgen2(rB)) then
                      yield
                    else
                      let m1_260: sha256_bits = extract4(@15_r_367[@i_400]) in
                      let mB_265: sha256_bits = SHA256_HMAC(SHA256_HMACk, (concat1(gx, @5_exp'(g, y), pubX_264, keyidB_init'), m1_260)) in
                      let @20_m_339: bitstring = sha256ToBits(mB_265) in
                      if checksign(@20_m_339, pubX_264, signmB) then
                      let m1'_262: sha256_bits = extract6(@15_r_367[@i_400]) in
                      let mA_266: sha256_bits = SHA256_HMAC(SHA256_HMACk, (concat1(@5_exp'(g, y), gx, @20_pkgen2(rA), keyidA_init), m1'_262)) in
                      new rs2_555: sseed;
                      let @20_x_336: bitstring = sha256ToBits(mA_266) in
                      let xA: bitstring = concat2(@20_pkgen2(rA), keyidA_init, @20_sign2(@20_x_336, @20_skgen2(rA), rs2_555)) in
                      let c'_259: enc_key = extract3(@15_r_367[@i_400]) in
                      let encxA_267: bitstring = senc(xA, c'_259, zero_ctr) in
                      let ssid_257: ssid = extract1(@15_r_367[@i_400]) in
                      event Alice_starts_session_with(pubX_264, ssid_257);
                      let m2'_263: sha256_bits = extract7(@15_r_367[@i_400]) in
                      out(chA4[!_250], (encxA_267, SHA256_HMAC160(encxA_267, m2'_263)));
                      in(chA40[!_250], ())
                )
                else
                  new @15_r_359: keys6;
                  let m2_261: sha256_bits = extract5(@15_r_359) in
                  if SHA256_HMAC160_check(encxB_254, m2_261, hmacencxB) then
                  let c_258: enc_key = extract2(@15_r_359) in
                  let concat2(pubX_264: spkey, keyidB_init': key_id, signmB: signature) = sdec(encxB_254, c_258, zero_ctr) in
                  if (pubX_264 = @20_pkgen2(rA)) then
                    yield
                  else
                    if (pubX_264 = @20_pkgen2(rB)) then
                      yield
                    else
                      let m1_260: sha256_bits = extract4(@15_r_359) in
                      let mB_265: sha256_bits = SHA256_HMAC(SHA256_HMACk, (concat1(gx, @5_exp'(g, y), pubX_264, keyidB_init'), m1_260)) in
                      let @20_m_339: bitstring = sha256ToBits(mB_265) in
                      if checksign(@20_m_339, pubX_264, signmB) then
                      let m1'_262: sha256_bits = extract6(@15_r_359) in
                      let mA_266: sha256_bits = SHA256_HMAC(SHA256_HMACk, (concat1(@5_exp'(g, y), gx, @20_pkgen2(rA), keyidA_init), m1'_262)) in
                      new rs2_551: sseed;
                      let @20_x_336: bitstring = sha256ToBits(mA_266) in
                      let xA: bitstring = concat2(@20_pkgen2(rA), keyidA_init, @20_sign2(@20_x_336, @20_skgen2(rA), rs2_551)) in
                      let c'_259: enc_key = extract3(@15_r_359) in
                      let encxA_267: bitstring = senc(xA, c'_259, zero_ctr) in
                      let ssid_257: ssid = extract1(@15_r_359) in
                      event Alice_starts_session_with(pubX_264, ssid_257);
                      let m2'_263: sha256_bits = extract7(@15_r_359) in
                      out(chA4[!_250], (encxA_267, SHA256_HMAC160(encxA_267, m2'_263)));
                      in(chA40[!_250], ())
          )
          orfind @i_532 = @ri_531 <= qSHA256 suchthat defined(x_283[@ri_531], @14_r_517[@ri_531]) && (gx = x_283[@ri_531]) then
          (
            if (hashgx = @14_r_517[@i_532]) then
            let s_562: G = gexp(gx, y) in
            find [unique] @i_408 = @ri_407 <= NA suchthat defined(s_561[@ri_407], @15_r_359[@ri_407]) && (s_562 = s_561[@ri_407]) then
            (
              let m2_261: sha256_bits = extract5(@15_r_359[@i_408]) in
              if SHA256_HMAC160_check(encxB_254, m2_261, hmacencxB) then
              let c_258: enc_key = extract2(@15_r_359[@i_408]) in
              let concat2(pubX_264: spkey, keyidB_init': key_id, signmB: signature) = sdec(encxB_254, c_258, zero_ctr) in
              let m1_260: sha256_bits = extract4(@15_r_359[@i_408]) in
              let mB_265: sha256_bits = SHA256_HMAC(SHA256_HMACk, (concat1(gx, @5_exp'(g, y), pubX_264, keyidB_init'), m1_260)) in
              let @20_m_339: bitstring = sha256ToBits(mB_265) in
              find @i_346 = @ri_345 <= NA suchthat defined(y[@ri_345], gx[@ri_345], m1'_262[@ri_345], @20_x_336[@ri_345]) && (gx = @5_exp'(g, y[@ri_345])) && (@5_exp'(g, y) = gx[@ri_345]) && (pubX_264 = @20_pkgen2(rA)) && (keyidB_init' = keyidA_init) && (m1_260 = m1'_262[@ri_345]) && @20_check2(@20_m_339, pubX_264, signmB) then
              (
                let m1'_262: sha256_bits = extract6(@15_r_359[@i_408]) in
                let mA_266: sha256_bits = SHA256_HMAC(SHA256_HMACk, (concat1(@5_exp'(g, y), gx, @20_pkgen2(rA), keyidA_init), m1'_262)) in
                new rs2_580: sseed;
                let @20_x_336: bitstring = sha256ToBits(mA_266) in
                let xA: bitstring = concat2(@20_pkgen2(rA), keyidA_init, @20_sign2(@20_x_336, @20_skgen2(rA), rs2_580)) in
                let c'_259: enc_key = extract3(@15_r_359[@i_408]) in
                let encxA_267: bitstring = senc(xA, c'_259, zero_ctr) in
                let ssid_257: ssid = extract1(@15_r_359[@i_408]) in
                event Alice_starts_session_with(pubX_264, ssid_257);
                let m2'_263: sha256_bits = extract7(@15_r_359[@i_408]) in
                out(chA4[!_250], (encxA_267, SHA256_HMAC160(encxA_267, m2'_263)));
                in(chA40[!_250], ())
              )
              else
                if (pubX_264 = @20_pkgen2(rA)) then
                  yield
                else
                  if (pubX_264 = @20_pkgen2(rB)) then
                    yield
                  else
                    if checksign(@20_m_339, pubX_264, signmB) then
                    let m1'_262: sha256_bits = extract6(@15_r_359[@i_408]) in
                    let mA_266: sha256_bits = SHA256_HMAC(SHA256_HMACk, (concat1(@5_exp'(g, y), gx, @20_pkgen2(rA), keyidA_init), m1'_262)) in
                    new rs2_579: sseed;
                    let @20_x_336: bitstring = sha256ToBits(mA_266) in
                    let xA: bitstring = concat2(@20_pkgen2(rA), keyidA_init, @20_sign2(@20_x_336, @20_skgen2(rA), rs2_579)) in
                    let c'_259: enc_key = extract3(@15_r_359[@i_408]) in
                    let encxA_267: bitstring = senc(xA, c'_259, zero_ctr) in
                    let ssid_257: ssid = extract1(@15_r_359[@i_408]) in
                    event Alice_starts_session_with(pubX_264, ssid_257);
                    let m2'_263: sha256_bits = extract7(@15_r_359[@i_408]) in
                    out(chA4[!_250], (encxA_267, SHA256_HMAC160(encxA_267, m2'_263)));
                    in(chA40[!_250], ())
            )
            orfind @i_408 = @ri_407 <= NA suchthat defined(s_562[@ri_407], @15_r_359[@ri_407]) && (s_562 = s_562[@ri_407]) then
            (
              let m2_261: sha256_bits = extract5(@15_r_359[@i_408]) in
              if SHA256_HMAC160_check(encxB_254, m2_261, hmacencxB) then
              let c_258: enc_key = extract2(@15_r_359[@i_408]) in
              let concat2(pubX_264: spkey, keyidB_init': key_id, signmB: signature) = sdec(encxB_254, c_258, zero_ctr) in
              let m1_260: sha256_bits = extract4(@15_r_359[@i_408]) in
              let mB_265: sha256_bits = SHA256_HMAC(SHA256_HMACk, (concat1(gx, @5_exp'(g, y), pubX_264, keyidB_init'), m1_260)) in
              let @20_m_339: bitstring = sha256ToBits(mB_265) in
              find @i_346 = @ri_345 <= NA suchthat defined(y[@ri_345], gx[@ri_345], m1'_262[@ri_345], @20_x_336[@ri_345]) && (gx = @5_exp'(g, y[@ri_345])) && (@5_exp'(g, y) = gx[@ri_345]) && (pubX_264 = @20_pkgen2(rA)) && (keyidB_init' = keyidA_init) && (m1_260 = m1'_262[@ri_345]) && @20_check2(@20_m_339, pubX_264, signmB) then
              (
                let m1'_262: sha256_bits = extract6(@15_r_359[@i_408]) in
                let mA_266: sha256_bits = SHA256_HMAC(SHA256_HMACk, (concat1(@5_exp'(g, y), gx, @20_pkgen2(rA), keyidA_init), m1'_262)) in
                new rs2_582: sseed;
                let @20_x_336: bitstring = sha256ToBits(mA_266) in
                let xA: bitstring = concat2(@20_pkgen2(rA), keyidA_init, @20_sign2(@20_x_336, @20_skgen2(rA), rs2_582)) in
                let c'_259: enc_key = extract3(@15_r_359[@i_408]) in
                let encxA_267: bitstring = senc(xA, c'_259, zero_ctr) in
                let ssid_257: ssid = extract1(@15_r_359[@i_408]) in
                event Alice_starts_session_with(pubX_264, ssid_257);
                let m2'_263: sha256_bits = extract7(@15_r_359[@i_408]) in
                out(chA4[!_250], (encxA_267, SHA256_HMAC160(encxA_267, m2'_263)));
                in(chA40[!_250], ())
              )
              else
                if (pubX_264 = @20_pkgen2(rA)) then
                  yield
                else
                  if (pubX_264 = @20_pkgen2(rB)) then
                    yield
                  else
                    if checksign(@20_m_339, pubX_264, signmB) then
                    let m1'_262: sha256_bits = extract6(@15_r_359[@i_408]) in
                    let mA_266: sha256_bits = SHA256_HMAC(SHA256_HMACk, (concat1(@5_exp'(g, y), gx, @20_pkgen2(rA), keyidA_init), m1'_262)) in
                    new rs2_581: sseed;
                    let @20_x_336: bitstring = sha256ToBits(mA_266) in
                    let xA: bitstring = concat2(@20_pkgen2(rA), keyidA_init, @20_sign2(@20_x_336, @20_skgen2(rA), rs2_581)) in
                    let c'_259: enc_key = extract3(@15_r_359[@i_408]) in
                    let encxA_267: bitstring = senc(xA, c'_259, zero_ctr) in
                    let ssid_257: ssid = extract1(@15_r_359[@i_408]) in
                    event Alice_starts_session_with(pubX_264, ssid_257);
                    let m2'_263: sha256_bits = extract7(@15_r_359[@i_408]) in
                    out(chA4[!_250], (encxA_267, SHA256_HMAC160(encxA_267, m2'_263)));
                    in(chA40[!_250], ())
            )
            orfind @i_404 = @ri_403 <= NB suchthat defined(s_451[@ri_403], @15_r_363[@ri_403]) && (s_562 = s_451[@ri_403]) then
            (
              let m2_261: sha256_bits = extract5(@15_r_363[@i_404]) in
              if SHA256_HMAC160_check(encxB_254, m2_261, hmacencxB) then
              let c_258: enc_key = extract2(@15_r_363[@i_404]) in
              let concat2(pubX_264: spkey, keyidB_init': key_id, signmB: signature) = sdec(encxB_254, c_258, zero_ctr) in
              let m1_260: sha256_bits = extract4(@15_r_363[@i_404]) in
              let mB_265: sha256_bits = SHA256_HMAC(SHA256_HMACk, (concat1(gx, @5_exp'(g, y), pubX_264, keyidB_init'), m1_260)) in
              let @20_m_339: bitstring = sha256ToBits(mB_265) in
              find @i_346 = @ri_345 <= NA suchthat defined(y[@ri_345], gx[@ri_345], m1'_262[@ri_345], @20_x_336[@ri_345]) && (gx = @5_exp'(g, y[@ri_345])) && (@5_exp'(g, y) = gx[@ri_345]) && (pubX_264 = @20_pkgen2(rA)) && (keyidB_init' = keyidA_init) && (m1_260 = m1'_262[@ri_345]) && @20_check2(@20_m_339, pubX_264, signmB) then
              (
                let m1'_262: sha256_bits = extract6(@15_r_363[@i_404]) in
                let mA_266: sha256_bits = SHA256_HMAC(SHA256_HMACk, (concat1(@5_exp'(g, y), gx, @20_pkgen2(rA), keyidA_init), m1'_262)) in
                new rs2_436: sseed;
                let @20_x_336: bitstring = sha256ToBits(mA_266) in
                let xA: bitstring = concat2(@20_pkgen2(rA), keyidA_init, @20_sign2(@20_x_336, @20_skgen2(rA), rs2_436)) in
                let c'_259: enc_key = extract3(@15_r_363[@i_404]) in
                let encxA_267: bitstring = senc(xA, c'_259, zero_ctr) in
                let ssid_257: ssid = extract1(@15_r_363[@i_404]) in
                event Alice_starts_session_with(pubX_264, ssid_257);
                let m2'_263: sha256_bits = extract7(@15_r_363[@i_404]) in
                out(chA4[!_250], (encxA_267, SHA256_HMAC160(encxA_267, m2'_263)));
                in(chA40[!_250], ())
              )
              else
                if (pubX_264 = @20_pkgen2(rA)) then
                  yield
                else
                  if (pubX_264 = @20_pkgen2(rB)) then
                    yield
                  else
                    if checksign(@20_m_339, pubX_264, signmB) then
                    let m1'_262: sha256_bits = extract6(@15_r_363[@i_404]) in
                    let mA_266: sha256_bits = SHA256_HMAC(SHA256_HMACk, (concat1(@5_exp'(g, y), gx, @20_pkgen2(rA), keyidA_init), m1'_262)) in
                    new rs2_558: sseed;
                    let @20_x_336: bitstring = sha256ToBits(mA_266) in
                    let xA: bitstring = concat2(@20_pkgen2(rA), keyidA_init, @20_sign2(@20_x_336, @20_skgen2(rA), rs2_558)) in
                    let c'_259: enc_key = extract3(@15_r_363[@i_404]) in
                    let encxA_267: bitstring = senc(xA, c'_259, zero_ctr) in
                    let ssid_257: ssid = extract1(@15_r_363[@i_404]) in
                    event Alice_starts_session_with(pubX_264, ssid_257);
                    let m2'_263: sha256_bits = extract7(@15_r_363[@i_404]) in
                    out(chA4[!_250], (encxA_267, SHA256_HMAC160(encxA_267, m2'_263)));
                    in(chA40[!_250], ())
            )
            orfind @i_402 = @ri_401 <= NB suchthat defined(x_268[@ri_401], y[j[@ri_401]], @15_r_365[@ri_401], s_561[j[@ri_401]]) && (s_562 = @5_exp'(g, mult(x_268[@ri_401], y[j[@ri_401]]))) then
            (
              let m2_261: sha256_bits = extract5(@15_r_365[@i_402]) in
              if SHA256_HMAC160_check(encxB_254, m2_261, hmacencxB) then
              let c_258: enc_key = extract2(@15_r_365[@i_402]) in
              let concat2(pubX_264: spkey, keyidB_init': key_id, signmB: signature) = sdec(encxB_254, c_258, zero_ctr) in
              if (pubX_264 = @20_pkgen2(rA)) then
                yield
              else
                if (pubX_264 = @20_pkgen2(rB)) then
                  yield
                else
                  let m1_260: sha256_bits = extract4(@15_r_365[@i_402]) in
                  let mB_265: sha256_bits = SHA256_HMAC(SHA256_HMACk, (concat1(gx, @5_exp'(g, y), pubX_264, keyidB_init'), m1_260)) in
                  let @20_m_339: bitstring = sha256ToBits(mB_265) in
                  if checksign(@20_m_339, pubX_264, signmB) then
                  let m1'_262: sha256_bits = extract6(@15_r_365[@i_402]) in
                  let mA_266: sha256_bits = SHA256_HMAC(SHA256_HMACk, (concat1(@5_exp'(g, y), gx, @20_pkgen2(rA), keyidA_init), m1'_262)) in
                  new rs2_583: sseed;
                  let @20_x_336: bitstring = sha256ToBits(mA_266) in
                  let xA: bitstring = concat2(@20_pkgen2(rA), keyidA_init, @20_sign2(@20_x_336, @20_skgen2(rA), rs2_583)) in
                  let c'_259: enc_key = extract3(@15_r_365[@i_402]) in
                  let encxA_267: bitstring = senc(xA, c'_259, zero_ctr) in
                  let ssid_257: ssid = extract1(@15_r_365[@i_402]) in
                  event Alice_starts_session_with(pubX_264, ssid_257);
                  let m2'_263: sha256_bits = extract7(@15_r_365[@i_402]) in
                  out(chA4[!_250], (encxA_267, SHA256_HMAC160(encxA_267, m2'_263)));
                  in(chA40[!_250], ())
            )
            orfind @i_400 = @ri_399 <= qhash2_6 suchthat defined(x_284[@ri_399], @15_r_367[@ri_399]) && (s_562 = x_284[@ri_399]) then
            (
              let m2_261: sha256_bits = extract5(@15_r_367[@i_400]) in
              if SHA256_HMAC160_check(encxB_254, m2_261, hmacencxB) then
              let c_258: enc_key = extract2(@15_r_367[@i_400]) in
              let concat2(pubX_264: spkey, keyidB_init': key_id, signmB: signature) = sdec(encxB_254, c_258, zero_ctr) in
              let m1_260: sha256_bits = extract4(@15_r_367[@i_400]) in
              let mB_265: sha256_bits = SHA256_HMAC(SHA256_HMACk, (concat1(gx, @5_exp'(g, y), pubX_264, keyidB_init'), m1_260)) in
              let @20_m_339: bitstring = sha256ToBits(mB_265) in
              find @i_346 = @ri_345 <= NA suchthat defined(y[@ri_345], gx[@ri_345], m1'_262[@ri_345], @20_x_336[@ri_345]) && (gx = @5_exp'(g, y[@ri_345])) && (@5_exp'(g, y) = gx[@ri_345]) && (pubX_264 = @20_pkgen2(rA)) && (keyidB_init' = keyidA_init) && (m1_260 = m1'_262[@ri_345]) && @20_check2(@20_m_339, pubX_264, signmB) then
              (
                let m1'_262: sha256_bits = extract6(@15_r_367[@i_400]) in
                let mA_266: sha256_bits = SHA256_HMAC(SHA256_HMACk, (concat1(@5_exp'(g, y), gx, @20_pkgen2(rA), keyidA_init), m1'_262)) in
                new rs2_439: sseed;
                let @20_x_336: bitstring = sha256ToBits(mA_266) in
                let xA: bitstring = concat2(@20_pkgen2(rA), keyidA_init, @20_sign2(@20_x_336, @20_skgen2(rA), rs2_439)) in
                let c'_259: enc_key = extract3(@15_r_367[@i_400]) in
                let encxA_267: bitstring = senc(xA, c'_259, zero_ctr) in
                let ssid_257: ssid = extract1(@15_r_367[@i_400]) in
                event Alice_starts_session_with(pubX_264, ssid_257);
                let m2'_263: sha256_bits = extract7(@15_r_367[@i_400]) in
                out(chA4[!_250], (encxA_267, SHA256_HMAC160(encxA_267, m2'_263)));
                in(chA40[!_250], ())
              )
              else
                if (pubX_264 = @20_pkgen2(rA)) then
                  yield
                else
                  if (pubX_264 = @20_pkgen2(rB)) then
                    yield
                  else
                    if checksign(@20_m_339, pubX_264, signmB) then
                    let m1'_262: sha256_bits = extract6(@15_r_367[@i_400]) in
                    let mA_266: sha256_bits = SHA256_HMAC(SHA256_HMACk, (concat1(@5_exp'(g, y), gx, @20_pkgen2(rA), keyidA_init), m1'_262)) in
                    new rs2_560: sseed;
                    let @20_x_336: bitstring = sha256ToBits(mA_266) in
                    let xA: bitstring = concat2(@20_pkgen2(rA), keyidA_init, @20_sign2(@20_x_336, @20_skgen2(rA), rs2_560)) in
                    let c'_259: enc_key = extract3(@15_r_367[@i_400]) in
                    let encxA_267: bitstring = senc(xA, c'_259, zero_ctr) in
                    let ssid_257: ssid = extract1(@15_r_367[@i_400]) in
                    event Alice_starts_session_with(pubX_264, ssid_257);
                    let m2'_263: sha256_bits = extract7(@15_r_367[@i_400]) in
                    out(chA4[!_250], (encxA_267, SHA256_HMAC160(encxA_267, m2'_263)));
                    in(chA40[!_250], ())
            )
            else
              new @15_r_359: keys6;
              let m2_261: sha256_bits = extract5(@15_r_359) in
              if SHA256_HMAC160_check(encxB_254, m2_261, hmacencxB) then
              let c_258: enc_key = extract2(@15_r_359) in
              let concat2(pubX_264: spkey, keyidB_init': key_id, signmB: signature) = sdec(encxB_254, c_258, zero_ctr) in
              let m1_260: sha256_bits = extract4(@15_r_359) in
              let mB_265: sha256_bits = SHA256_HMAC(SHA256_HMACk, (concat1(gx, @5_exp'(g, y), pubX_264, keyidB_init'), m1_260)) in
              let @20_m_339: bitstring = sha256ToBits(mB_265) in
              find @i_346 = @ri_345 <= NA suchthat defined(y[@ri_345], gx[@ri_345], m1'_262[@ri_345], @20_x_336[@ri_345]) && (gx = @5_exp'(g, y[@ri_345])) && (@5_exp'(g, y) = gx[@ri_345]) && (pubX_264 = @20_pkgen2(rA)) && (keyidB_init' = keyidA_init) && (m1_260 = m1'_262[@ri_345]) && @20_check2(@20_m_339, pubX_264, signmB) then
              (
                let m1'_262: sha256_bits = extract6(@15_r_359) in
                let mA_266: sha256_bits = SHA256_HMAC(SHA256_HMACk, (concat1(@5_exp'(g, y), gx, @20_pkgen2(rA), keyidA_init), m1'_262)) in
                new rs2_431: sseed;
                let @20_x_336: bitstring = sha256ToBits(mA_266) in
                let xA: bitstring = concat2(@20_pkgen2(rA), keyidA_init, @20_sign2(@20_x_336, @20_skgen2(rA), rs2_431)) in
                let c'_259: enc_key = extract3(@15_r_359) in
                let encxA_267: bitstring = senc(xA, c'_259, zero_ctr) in
                let ssid_257: ssid = extract1(@15_r_359) in
                event Alice_starts_session_with(pubX_264, ssid_257);
                let m2'_263: sha256_bits = extract7(@15_r_359) in
                out(chA4[!_250], (encxA_267, SHA256_HMAC160(encxA_267, m2'_263)));
                in(chA40[!_250], ())
              )
              else
                if (pubX_264 = @20_pkgen2(rA)) then
                  yield
                else
                  if (pubX_264 = @20_pkgen2(rB)) then
                    yield
                  else
                    if checksign(@20_m_339, pubX_264, signmB) then
                    let m1'_262: sha256_bits = extract6(@15_r_359) in
                    let mA_266: sha256_bits = SHA256_HMAC(SHA256_HMACk, (concat1(@5_exp'(g, y), gx, @20_pkgen2(rA), keyidA_init), m1'_262)) in
                    new rs2_556: sseed;
                    let @20_x_336: bitstring = sha256ToBits(mA_266) in
                    let xA: bitstring = concat2(@20_pkgen2(rA), keyidA_init, @20_sign2(@20_x_336, @20_skgen2(rA), rs2_556)) in
                    let c'_259: enc_key = extract3(@15_r_359) in
                    let encxA_267: bitstring = senc(xA, c'_259, zero_ctr) in
                    let ssid_257: ssid = extract1(@15_r_359) in
                    event Alice_starts_session_with(pubX_264, ssid_257);
                    let m2'_263: sha256_bits = extract7(@15_r_359) in
                    out(chA4[!_250], (encxA_267, SHA256_HMAC160(encxA_267, m2'_263)));
                    in(chA40[!_250], ())
          )
        ) | (
          ! !_251 <= NB
          in(chB0[!_251], ());
          new x_268: exp;
          let @14_x_516: G = @5_exp'(g, x_268) in
          new @14_r_515: sha256_bits;
          out(chB1[!_251], @14_r_515);
          in(chB2[!_251], gy: G);
          find j = j_357 <= NA suchthat defined(y[j_357], hashgx[j_357]) && (gy = @5_exp'(g, y[j_357])) && (hashgx[j_357] = @14_r_515) then
          (
            find [unique]  suchthat defined(@15_r_361[j]) then
            (
              let c_272: enc_key = extract2(@15_r_361[j]) in
              let m1_274: sha256_bits = extract4(@15_r_361[j]) in
              let m2_275: sha256_bits = extract5(@15_r_361[j]) in
              let m2'_277: sha256_bits = extract7(@15_r_361[j]) in
              let mB_278: sha256_bits = SHA256_HMAC(SHA256_HMACk, (concat1(@5_exp'(g, x_268), gy, @20_pkgen2(rB), keyidB_init), m1_274)) in
              new rs1_427: sseed;
              let @20_x_352: bitstring = sha256ToBits(mB_278) in
              let xB: bitstring = concat2(@20_pkgen2(rB), keyidB_init, @20_sign2(@20_x_352, @20_skgen2(rB), rs1_427)) in
              let encxB_279: bitstring = senc(xB, c_272, zero_ctr) in
              out(chB3[!_251], (@5_exp'(g, x_268), encxB_279, SHA256_HMAC160(encxB_279, m2_275)));
              in(chB4[!_251], (encxA_280: bitstring, hmacencxA: sha1_bits));
              if SHA256_HMAC160_check(encxA_280, m2'_277, hmacencxA) then
              let c'_273: enc_key = extract3(@15_r_361[j]) in
              let concat2(pubX_281: spkey, keyidA_init': key_id, signmA: signature) = sdec(encxA_280, c'_273, zero_ctr) in
              let m1'_276: sha256_bits = extract6(@15_r_361[j]) in
              let mA_282: sha256_bits = SHA256_HMAC(SHA256_HMACk, (concat1(gy, @5_exp'(g, x_268), pubX_281, keyidA_init'), m1'_276)) in
              let @20_m_342: bitstring = sha256ToBits(mA_282) in
              if defined(@20_x_336[j]) && (pubX_281 = @20_pkgen2(rA)) && (keyidA_init' = keyidA_init) && @20_check2(@20_m_342, pubX_281, signmA) then
              let ssid_271: ssid = extract1(@15_r_361[j]) in
              event Bob_session_with_Alice(@20_pkgen2(rB), ssid_271)
            )
            orfind @i_394 = @ri_393 <= NB suchthat defined(s_451[@ri_393], @15_r_363[@ri_393], s_561[j]) && (s_451[@ri_393] = @5_exp'(g, mult(x_268, y[j]))) then
            (
              let c_272: enc_key = extract2(@15_r_363[@i_394]) in
              let m1_274: sha256_bits = extract4(@15_r_363[@i_394]) in
              let m2_275: sha256_bits = extract5(@15_r_363[@i_394]) in
              let m2'_277: sha256_bits = extract7(@15_r_363[@i_394]) in
              let mB_278: sha256_bits = SHA256_HMAC(SHA256_HMACk, (concat1(@5_exp'(g, x_268), gy, @20_pkgen2(rB), keyidB_init), m1_274)) in
              new rs1_571: sseed;
              let @20_x_352: bitstring = sha256ToBits(mB_278) in
              let xB: bitstring = concat2(@20_pkgen2(rB), keyidB_init, @20_sign2(@20_x_352, @20_skgen2(rB), rs1_571)) in
              let encxB_279: bitstring = senc(xB, c_272, zero_ctr) in
              out(chB3[!_251], (@5_exp'(g, x_268), encxB_279, SHA256_HMAC160(encxB_279, m2_275)));
              in(chB4[!_251], (encxA_280: bitstring, hmacencxA: sha1_bits));
              if SHA256_HMAC160_check(encxA_280, m2'_277, hmacencxA) then
              let c'_273: enc_key = extract3(@15_r_363[@i_394]) in
              let concat2(pubX_281: spkey, keyidA_init': key_id, signmA: signature) = sdec(encxA_280, c'_273, zero_ctr) in
              let m1'_276: sha256_bits = extract6(@15_r_363[@i_394]) in
              let mA_282: sha256_bits = SHA256_HMAC(SHA256_HMACk, (concat1(gy, @5_exp'(g, x_268), pubX_281, keyidA_init'), m1'_276)) in
              let @20_m_342: bitstring = sha256ToBits(mA_282) in
              if defined(@20_x_336[j]) && (pubX_281 = @20_pkgen2(rA)) && (keyidA_init' = keyidA_init) && @20_check2(@20_m_342, pubX_281, signmA) then
              let ssid_271: ssid = extract1(@15_r_363[@i_394]) in
              event Bob_session_with_Alice(@20_pkgen2(rB), ssid_271)
            )
            orfind @i_390 = @ri_389 <= qhash2_6 suchthat defined(x_284[@ri_389], @15_r_367[@ri_389], s_561[j]) && (x_284[@ri_389] = @5_exp'(g, mult(x_268, y[j]))) then
            (
              let c_272: enc_key = extract2(@15_r_367[@i_390]) in
              let m1_274: sha256_bits = extract4(@15_r_367[@i_390]) in
              let m2_275: sha256_bits = extract5(@15_r_367[@i_390]) in
              let m2'_277: sha256_bits = extract7(@15_r_367[@i_390]) in
              let mB_278: sha256_bits = SHA256_HMAC(SHA256_HMACk, (concat1(@5_exp'(g, x_268), gy, @20_pkgen2(rB), keyidB_init), m1_274)) in
              new rs1_573: sseed;
              let @20_x_352: bitstring = sha256ToBits(mB_278) in
              let xB: bitstring = concat2(@20_pkgen2(rB), keyidB_init, @20_sign2(@20_x_352, @20_skgen2(rB), rs1_573)) in
              let encxB_279: bitstring = senc(xB, c_272, zero_ctr) in
              out(chB3[!_251], (@5_exp'(g, x_268), encxB_279, SHA256_HMAC160(encxB_279, m2_275)));
              in(chB4[!_251], (encxA_280: bitstring, hmacencxA: sha1_bits));
              if SHA256_HMAC160_check(encxA_280, m2'_277, hmacencxA) then
              let c'_273: enc_key = extract3(@15_r_367[@i_390]) in
              let concat2(pubX_281: spkey, keyidA_init': key_id, signmA: signature) = sdec(encxA_280, c'_273, zero_ctr) in
              let m1'_276: sha256_bits = extract6(@15_r_367[@i_390]) in
              let mA_282: sha256_bits = SHA256_HMAC(SHA256_HMACk, (concat1(gy, @5_exp'(g, x_268), pubX_281, keyidA_init'), m1'_276)) in
              let @20_m_342: bitstring = sha256ToBits(mA_282) in
              if defined(@20_x_336[j]) && (pubX_281 = @20_pkgen2(rA)) && (keyidA_init' = keyidA_init) && @20_check2(@20_m_342, pubX_281, signmA) then
              let ssid_271: ssid = extract1(@15_r_367[@i_390]) in
              event Bob_session_with_Alice(@20_pkgen2(rB), ssid_271)
            )
            else
              new @15_r_365: keys6;
              let c_272: enc_key = extract2(@15_r_365) in
              let m1_274: sha256_bits = extract4(@15_r_365) in
              let m2_275: sha256_bits = extract5(@15_r_365) in
              let m2'_277: sha256_bits = extract7(@15_r_365) in
              let mB_278: sha256_bits = SHA256_HMAC(SHA256_HMACk, (concat1(@5_exp'(g, x_268), gy, @20_pkgen2(rB), keyidB_init), m1_274)) in
              new rs1_425: sseed;
              let @20_x_352: bitstring = sha256ToBits(mB_278) in
              let xB: bitstring = concat2(@20_pkgen2(rB), keyidB_init, @20_sign2(@20_x_352, @20_skgen2(rB), rs1_425)) in
              let encxB_279: bitstring = senc(xB, c_272, zero_ctr) in
              out(chB3[!_251], (@5_exp'(g, x_268), encxB_279, SHA256_HMAC160(encxB_279, m2_275)));
              in(chB4[!_251], (encxA_280: bitstring, hmacencxA: sha1_bits));
              if SHA256_HMAC160_check(encxA_280, m2'_277, hmacencxA) then
              let c'_273: enc_key = extract3(@15_r_365) in
              let concat2(pubX_281: spkey, keyidA_init': key_id, signmA: signature) = sdec(encxA_280, c'_273, zero_ctr) in
              let m1'_276: sha256_bits = extract6(@15_r_365) in
              let mA_282: sha256_bits = SHA256_HMAC(SHA256_HMACk, (concat1(gy, @5_exp'(g, x_268), pubX_281, keyidA_init'), m1'_276)) in
              let @20_m_342: bitstring = sha256ToBits(mA_282) in
              if defined(gx[j], @20_x_336[j]) && (@5_exp'(g, x_268) = gx[j]) && (pubX_281 = @20_pkgen2(rA)) && (keyidA_init' = keyidA_init) && @20_check2(@20_m_342, pubX_281, signmA) then
              let ssid_271: ssid = extract1(@15_r_365) in
              event Bob_session_with_Alice(@20_pkgen2(rB), ssid_271)
          )
          else
            let s_451: G = gexp(gy, x_268) in
            find [unique] @i_388 = @ri_387 <= NA suchthat defined(s_561[@ri_387], @15_r_359[@ri_387]) && (s_451 = s_561[@ri_387]) then
            (
              let c_272: enc_key = extract2(@15_r_359[@i_388]) in
              let m1_274: sha256_bits = extract4(@15_r_359[@i_388]) in
              let m2_275: sha256_bits = extract5(@15_r_359[@i_388]) in
              let mB_278: sha256_bits = SHA256_HMAC(SHA256_HMACk, (concat1(@5_exp'(g, x_268), gy, @20_pkgen2(rB), keyidB_init), m1_274)) in
              new rs1_563: sseed;
              let @20_x_352: bitstring = sha256ToBits(mB_278) in
              let xB: bitstring = concat2(@20_pkgen2(rB), keyidB_init, @20_sign2(@20_x_352, @20_skgen2(rB), rs1_563)) in
              let encxB_279: bitstring = senc(xB, c_272, zero_ctr) in
              out(chB3[!_251], (@5_exp'(g, x_268), encxB_279, SHA256_HMAC160(encxB_279, m2_275)));
              in(chB4[!_251], (encxA_280: bitstring, hmacencxA: sha1_bits))
            )
            orfind @i_388 = @ri_387 <= NA suchthat defined(s_562[@ri_387], @15_r_359[@ri_387]) && (s_451 = s_562[@ri_387]) then
            (
              let c_272: enc_key = extract2(@15_r_359[@i_388]) in
              let m1_274: sha256_bits = extract4(@15_r_359[@i_388]) in
              let m2_275: sha256_bits = extract5(@15_r_359[@i_388]) in
              let mB_278: sha256_bits = SHA256_HMAC(SHA256_HMACk, (concat1(@5_exp'(g, x_268), gy, @20_pkgen2(rB), keyidB_init), m1_274)) in
              new rs1_564: sseed;
              let @20_x_352: bitstring = sha256ToBits(mB_278) in
              let xB: bitstring = concat2(@20_pkgen2(rB), keyidB_init, @20_sign2(@20_x_352, @20_skgen2(rB), rs1_564)) in
              let encxB_279: bitstring = senc(xB, c_272, zero_ctr) in
              out(chB3[!_251], (@5_exp'(g, x_268), encxB_279, SHA256_HMAC160(encxB_279, m2_275)));
              in(chB4[!_251], (encxA_280: bitstring, hmacencxA: sha1_bits))
            )
            orfind @i_384 = @ri_383 <= NB suchthat defined(s_451[@ri_383], @15_r_363[@ri_383]) && (s_451 = s_451[@ri_383]) then
            (
              let c_272: enc_key = extract2(@15_r_363[@i_384]) in
              let m1_274: sha256_bits = extract4(@15_r_363[@i_384]) in
              let m2_275: sha256_bits = extract5(@15_r_363[@i_384]) in
              let mB_278: sha256_bits = SHA256_HMAC(SHA256_HMACk, (concat1(@5_exp'(g, x_268), gy, @20_pkgen2(rB), keyidB_init), m1_274)) in
              new rs1_422: sseed;
              let @20_x_352: bitstring = sha256ToBits(mB_278) in
              let xB: bitstring = concat2(@20_pkgen2(rB), keyidB_init, @20_sign2(@20_x_352, @20_skgen2(rB), rs1_422)) in
              let encxB_279: bitstring = senc(xB, c_272, zero_ctr) in
              out(chB3[!_251], (@5_exp'(g, x_268), encxB_279, SHA256_HMAC160(encxB_279, m2_275)));
              in(chB4[!_251], (encxA_280: bitstring, hmacencxA: sha1_bits))
            )
            orfind @i_382 = @ri_381 <= NB suchthat defined(x_268[@ri_381], y[j[@ri_381]], @15_r_365[@ri_381], s_561[j[@ri_381]]) && (s_451 = @5_exp'(g, mult(x_268[@ri_381], y[j[@ri_381]]))) then
            (
              let c_272: enc_key = extract2(@15_r_365[@i_382]) in
              let m1_274: sha256_bits = extract4(@15_r_365[@i_382]) in
              let m2_275: sha256_bits = extract5(@15_r_365[@i_382]) in
              let mB_278: sha256_bits = SHA256_HMAC(SHA256_HMACk, (concat1(@5_exp'(g, x_268), gy, @20_pkgen2(rB), keyidB_init), m1_274)) in
              new rs1_565: sseed;
              let @20_x_352: bitstring = sha256ToBits(mB_278) in
              let xB: bitstring = concat2(@20_pkgen2(rB), keyidB_init, @20_sign2(@20_x_352, @20_skgen2(rB), rs1_565)) in
              let encxB_279: bitstring = senc(xB, c_272, zero_ctr) in
              out(chB3[!_251], (@5_exp'(g, x_268), encxB_279, SHA256_HMAC160(encxB_279, m2_275)));
              in(chB4[!_251], (encxA_280: bitstring, hmacencxA: sha1_bits))
            )
            orfind @i_380 = @ri_379 <= qhash2_6 suchthat defined(x_284[@ri_379], @15_r_367[@ri_379]) && (s_451 = x_284[@ri_379]) then
            (
              let c_272: enc_key = extract2(@15_r_367[@i_380]) in
              let m1_274: sha256_bits = extract4(@15_r_367[@i_380]) in
              let m2_275: sha256_bits = extract5(@15_r_367[@i_380]) in
              let mB_278: sha256_bits = SHA256_HMAC(SHA256_HMACk, (concat1(@5_exp'(g, x_268), gy, @20_pkgen2(rB), keyidB_init), m1_274)) in
              new rs1_424: sseed;
              let @20_x_352: bitstring = sha256ToBits(mB_278) in
              let xB: bitstring = concat2(@20_pkgen2(rB), keyidB_init, @20_sign2(@20_x_352, @20_skgen2(rB), rs1_424)) in
              let encxB_279: bitstring = senc(xB, c_272, zero_ctr) in
              out(chB3[!_251], (@5_exp'(g, x_268), encxB_279, SHA256_HMAC160(encxB_279, m2_275)));
              in(chB4[!_251], (encxA_280: bitstring, hmacencxA: sha1_bits))
            )
            else
              new @15_r_363: keys6;
              let c_272: enc_key = extract2(@15_r_363) in
              let m1_274: sha256_bits = extract4(@15_r_363) in
              let m2_275: sha256_bits = extract5(@15_r_363) in
              let mB_278: sha256_bits = SHA256_HMAC(SHA256_HMACk, (concat1(@5_exp'(g, x_268), gy, @20_pkgen2(rB), keyidB_init), m1_274)) in
              new rs1_419: sseed;
              let @20_x_352: bitstring = sha256ToBits(mB_278) in
              let xB: bitstring = concat2(@20_pkgen2(rB), keyidB_init, @20_sign2(@20_x_352, @20_skgen2(rB), rs1_419)) in
              let encxB_279: bitstring = senc(xB, c_272, zero_ctr) in
              out(chB3[!_251], (@5_exp'(g, x_268), encxB_279, SHA256_HMAC160(encxB_279, m2_275)));
              in(chB4[!_251], (encxA_280: bitstring, hmacencxA: sha1_bits))
        ) | (
          ! !_252 <= qSHA256
          in(sha256_in[!_252], x_283: G);
          find [unique] @i_522 = @ri_521 <= NB suchthat defined(@14_x_516[@ri_521], @14_r_515[@ri_521]) && (x_283 = @14_x_516[@ri_521]) then
            out(sha256_out[!_252], @14_r_515[@i_522])
          orfind @i_520 = @ri_519 <= qSHA256 suchthat defined(x_283[@ri_519], @14_r_517[@ri_519]) && (x_283 = x_283[@ri_519]) then
            out(sha256_out[!_252], @14_r_517[@i_520])
          else
            new @14_r_517: sha256_bits;
            out(sha256_out[!_252], @14_r_517)
        ) | (
          ! !_253 <= qhash2_6
          in(hash2_6_in[!_253], x_284: G);
          find [unique] @i_378 = @ri_377 <= NA suchthat defined(s_561[@ri_377], @15_r_359[@ri_377]) && (x_284 = s_561[@ri_377]) then
            out(hash2_6_out[!_253], @15_r_359[@i_378])
          orfind @i_378 = @ri_377 <= NA suchthat defined(s_562[@ri_377], @15_r_359[@ri_377]) && (x_284 = s_562[@ri_377]) then
            out(hash2_6_out[!_253], @15_r_359[@i_378])
          orfind @i_374 = @ri_373 <= NB suchthat defined(s_451[@ri_373], @15_r_363[@ri_373]) && (x_284 = s_451[@ri_373]) then
            out(hash2_6_out[!_253], @15_r_363[@i_374])
          orfind @i_372 = @ri_371 <= NB suchthat defined(x_268[@ri_371], y[j[@ri_371]], @15_r_365[@ri_371], s_561[j[@ri_371]]) && (x_284 = @5_exp'(g, mult(x_268[@ri_371], y[j[@ri_371]]))) then
            out(hash2_6_out[!_253], @15_r_365[@i_372])
          orfind @i_370 = @ri_369 <= qhash2_6 suchthat defined(x_284[@ri_369], @15_r_367[@ri_369]) && (x_284 = x_284[@ri_369]) then
            out(hash2_6_out[!_253], @15_r_367[@i_370])
          else
            new @15_r_367: keys6;
            out(hash2_6_out[!_253], @15_r_367)
        )

s_561[j[@ri_371]] defined =>
j[@ri_371] defined
find j = j_357 <= NA suchthat defined(y[j_357], hashgx[j_357]) && (gy = @5_exp'(g, y[j_357])) && (hashgx[j_357] = @14_r_515) then
defined(y[j[@ri_371]], hashgx[j[@ri_371]]) && (gy = @5_exp'(g, y[j[@ri_371]])) && (hashgx[j[@ri_371]] = @14_r_515)

in session j[@ri_371] of Alice, s_561[j[@ri_371]] is defined in the else branch of:
- if defined(gy[@i_534]) && (@5_exp'(g, y) = gy[@i_534]) then
- if defined(j[@i_534], @15_r_365[@i_534]) && (!_250 = j[@i_534]) then
and in the "then" branch of:
          find [unique] @i_534 = @ri_533 <= NB suchthat defined(@14_x_516[@ri_533], @14_r_515[@ri_533]) && (gx = @14_x_516[@ri_533]) then
          (
            if (hashgx = @14_r_515[@i_534]) then

so 
gx[j[@ri_371]] = @14_x_516[@i_534[j[@ri_371]]]
hashgx[j[@ri_371]] = @14_r_515[@i_534[j[@ri_371]]]
since hashgx[j[@ri_371]] = @14_r_515, we have
@14_r_515 = @14_r_515[@i_534[j[@ri_371]]]
so by elimination of collisions !_251 = @i_534[j[@ri_371]]  (!_251 is the current index in Bob; it can be omitted from variable indices)
gx[j[@ri_371]] = @14_x_516

At the definition of s_561[j[@ri_371]]
not(defined(gy[@i_534[j[@ri_371]]]) && (@5_exp'(g, y[j[@ri_371]]) = gy[@i_534[j[@ri_371]]])
not(defined(j[@i_534[j[@ri_371]]], @15_r_365[@i_534[j[@ri_371]]]) && (j[@ri_371] = j[@i_534[j[@ri_371]]])
that is
not(defined(gy[!_251]) && (@5_exp'(g, y[j[@ri_371]]) = gy[!_251])
not(defined(j[!_251], @15_r_365[!_251]) && (j[@ri_371] = j[!_251])
or, omitting !_251:
not(defined(gy) && (@5_exp'(g, y[j[@ri_371]]) = gy)
not(defined(j, @15_r_365]) && (j[@ri_371] = j)

either gy is defined before s_561[j[@ri_371]], and we have not(@5_exp'(g, y[j[@ri_371]]) = gy) => contradiction
or gy is defined after s_561[j[@ri_371]], and 
gx[j[@ri_371]] (defined before s_561[j[@ri_371]]) cannot depend on @14_x_516 (output after the definition of gy), so contradiction as well,
but CryptoVerif fails to prove that. (Only the variables defined after the definition of gy are considered not to depend on gy in
Simplify1.get_facts_of_elsefind_facts. @14_x_516 = @5_exp'(g, x_268) is defined before gy but not used in any output before gy. 
It is still used in find conditions, but in ways that always fail as long as it is not output, so its definition could actually
be moved after the definition of gy. Again, CryptoVerif cannot do this move because of the find conditions that use @14_x_516.)
*)
