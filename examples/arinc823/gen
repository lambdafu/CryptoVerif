#!/bin/bash

##Please update to correspond to the location of ProVerif/CryptoVerif on your computer
TIMER=../../../xtime
CRYPTOVERIF="../../../cryptoverif -lib ../arinc823"

if [ -x $TIMER ]
then
    PROG=$TIMER
else
    PROG=
fi

## Build the library of primitives for CryptoVerif

cat ../../default.cvl arinc823prim.cvl > arinc823.cvl

## Analysis of the shared-key protocol, in CryptoVerif

cd sharedkey

(
for prop in SECRECY AUTHENTICATION UKS KEY_SECRECY 
do

for prot in ORIGINAL SINGLE_TU REPLAY_PROT
do

echo PROTOCOL shared-key CV $prop.$prot

file=arinc823-secret-key.$prop.$prot
m4 -D$prop -D$prot arinc823-secret-key.$prop.m4.cv > $file.cv
$PROG $CRYPTOVERIF $file.cv > $file.result < /dev/null
egrep '(RESULT Could|All queries proved)' $file.result
grep system $file.result | grep user

done
done
) | tee results

## Analysis of the public-key protocol, in CryptoVerif

cd ../publickey

function analyzecv()
{
echo PROTOCOL public-key CV $1

$PROG $CRYPTOVERIF arinc823-public-key.$1.cv > arinc823-public-key.$1.result < /dev/null
egrep '(RESULT Could|All queries proved)' arinc823-public-key.$1.result
grep system arinc823-public-key.$1.result | grep user
}

(
# Analyze the original protocol

for i in NOREPLAY_PROT REPLAY_PROT
do

    for j in SECRECY AUTHENTICATION KEY_SECRECY
    do
    
	m4 -D$i arinc823-public-key.$j.m4.cv > arinc823-public-key.$j.$i.cv
	analyzecv $j.$i

    done

done

# Analyze the fixed protocol

for j in REPLAY_PROT #NOREPLAY_PROT 
do

m4 -D$j arinc823-public-key.fixed.KEY_SECRECY.m4.cv > arinc823-public-key.fixed.KEY_SECRECY.$j.cv
analyzecv fixed.KEY_SECRECY.$j

m4 -D$j arinc823-public-key.fixed.SECRECY.m4.cv > arinc823-public-key.fixed.SECRECY.$j.cv
analyzecv fixed.SECRECY.$j

for k in COMPROMISE_U COMPROMISE_V NO_COMPROMISE
do 

m4 -D$j -D$k arinc823-public-key.fixed.AUTHENTICATION.m4.cv > arinc823-public-key.fixed.AUTHENTICATION.$k.$j.cv
analyzecv  fixed.AUTHENTICATION.$k.$j

done
done

) | tee results

## Build the full summary

cd ..

(
echo SHARED KEY PROTOCOL
echo
egrep '(PROTOCOL|RESULT Could|All queries proved|system)' sharedkey/results
echo
echo PUBLIC KEY PROTOCOL
echo
egrep '(PROTOCOL|RESULT Could|All queries proved|system)' publickey/results
 
) | tee results
