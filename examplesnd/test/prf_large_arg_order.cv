type T1.
type T2 [bounded].
type T3.
type key [fixed].
type R [fixed, large].

proba Pprf.

fun f(T1, T2, T3, key):R.

equiv(prf(f)) special prf("key_last", f, Pprf, (k, r, x, y, z, u), ("large")).

event bad.
query event(bad) ==> false.

channel c.

process
in(c, (x:T1, y:T2, z:T3, r: R));
new k:key;
if f(x,y,z,k) = r then
event bad

(* EXPECTED
All queries proved.
0.080s (user 0.076s + system 0.004s), max rss 15992K
END *)
