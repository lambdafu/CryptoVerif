type nonce [large, fixed].

proba Pcoll.

fun g(nonce,nonce,nonce): bool.

collision  x <-R nonce; forall y: nonce, z: nonce;
	   return(g(x,y,z)) <=(Pcoll)=> return(false) if y independent-of x && y = z.

channel c.
param N.
event bad.

query event(bad) ==> false.

process
        (!N
        in(c,());
	y <-R nonce;
	out(c,y))
	|
	(in(c,());
	x <-R nonce;
	out(c,x);
	in(c,());
	find j <=N suchthat defined(y[j]) then
	if g(x,y[j],y[j]) then
	event bad)

(* EXPECTED
All queries proved.
0.084s (user 0.076s + system 0.008s), max rss 15848K
END *)
