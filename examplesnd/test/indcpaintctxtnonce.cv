(* Trivial running example for conference paper. *)
param N.
param N2.
param N3.

type mkey [bounded].
type mkeyseed [fixed].
type key [fixed].
type keyseed [fixed].
type seed [fixed].
type macs [bounded].

fun keyToBitstring(key):bitstring [data].

(* Shared-key generation *)
expand keygen(keyseed, key, kgen).

(* Shared-key encryption (IND-CPA and INT-CTXT Stream cipher) *)
proba Penc.
proba Pencctxt.
type nonce.
expand IND_CPA_INT_CTXT_sym_enc_nonce(key, bitstring, bitstring, nonce, enc, dec, injbot, Z, Penc, Pencctxt).

(* The function Z returns for each bitstring, a bitstring
   of the same length, consisting only of zeroes. *)
const Zkey : bitstring.
equation forall y:key;
	Z(keyToBitstring(y)) = Zkey.

(* Queries *)
query secret k2 [cv_onesession].
query secret k3 [cv_onesession].

query secret k2.
query secret k3.

(* Channels and Processes *)
channel cA, cB, start, c.

let processA(Kab:key) =
	in(cA, n: nonce);
	find k <= N suchthat defined(n[k],k2[k]) && n[k] = n then yield else
	new k2 : key;
	let ea1 = enc(keyToBitstring(k2), Kab, n) in
	out(cA, ea1).

let processB(Kab:key) =
	in(cB, (ea:bitstring, na: nonce));
	let injbot(keyToBitstring(k3:key)) = dec(ea, Kab, na) in
	out(cB, ()).

process
	in(start, ());
	new rKab: keyseed;
	let Kab = kgen(rKab) in
	out(c, ());
	((! N processA(Kab)) |
	 (! N processB(Kab)))

(* EXPECTED
RESULT Could not prove secrecy of k3.
0.092s (user 0.088s + system 0.004s), max rss 16816K
END *)
