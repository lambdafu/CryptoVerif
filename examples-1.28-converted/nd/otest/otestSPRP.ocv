(* Trivial running example for conference paper. *)

param N.
param N2.
param N3.

type mkey [bounded].
type mkeyseed [fixed].
type key [fixed,large].
type keyseed [fixed].
type seed [fixed].
type macs [bounded].

fun keyToBitstring(key):bitstring [data].

(* Shared-key encryption (PRP) *)

proba Penc.

expand SPRP_cipher(keyseed, key, key, kgen, enc, dec, Penc).


(* Queries *)

query secret k2 [cv_onesession].
query secret k3 [cv_onesession].

query secret k2.
query secret k3.

event endB(key).
event beginA(key).

query x: key;
  event(endB(x)) ==> event(beginA(x)) public_vars k2, k3. (* Wrong because decryption always succeeds *)





process 
	Ostart() :=
rKab <-R keyseed;
Kab: key <- kgen(rKab);
return();
((
  foreach iA <= N do
  OA() :=
  k2 <-R key;
  ea1: key <- enc(k2, Kab);
  event beginA(ea1);
  return(ea1)
) | (
  foreach iB <= N do
  OB(ea: key) :=
  k3: key <- dec(ea, Kab);
  event endB(ea);
  return()
))



(* EXPECTED
RESULT Could not prove event(endB(x)) ==> event(beginA(x)) with public variables k2, k3; secrecy of k3.
0.016s (user 0.008s + system 0.008s), max rss 10724K
END *)
