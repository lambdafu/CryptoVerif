type D.

(* set interactiveMode = true. *)

fun xor(D,D):D.
const neut:D.
equation builtin ACUN(xor,neut).

fun f(D):bitstring.
fun h(D):bitstring.
fun g(D,D,D): bitstring.
fun i(D):bitstring.
fun j(D):bitstring.

const zero, one, two, three: D. 
equation forall x:D, y:D, z:D; f(xor(x,xor(y,z))) = g(x,y,z).
equation forall y:D; h(xor(one,xor(y,two))) = g(one,y,two).

equation forall x:D, y:D; i(xor(zero,xor(x,xor(y,one)))) = g(x,y,x).
equation forall x:D, y:D; j(xor(zero,xor(x,xor(one,y)))) = g(x,y,x).

channel c.

process in(c, ());
out(c, f(xor(zero, xor(one, two))));
in(c, ());
out(c, f(xor(xor(zero, one), two)));
in(c, ());
out(c, f(xor(xor(zero, one), xor(two, three))));
in(c, ());
out(c, h(xor(xor(zero, one), xor(two, three))));
in(c, ());
out(c, h(xor(xor(zero, one), xor(zero, two))));
in(c, ());
out(c, h(xor(xor(zero, one), xor(two, xor(one, zero)))));
in(c, ());
out(c, i(xor(xor(zero, one), xor(two, three))));
in(c, ());
out(c, j(xor(xor(zero, one), xor(two, xor(zero, one)))));
in(c, ());
out(c, j(xor(xor(zero, one), xor(two, xor(one, zero)))));
in(c, ());
out(c, f(xor(neut, xor(one, two))));
in(c, ());
out(c, f(xor(xor(neut, one), two)));
in(c, ());
out(c, f(xor(xor(neut, one), xor(two, three))));
in(c, ());
out(c, h(xor(xor(neut, one), xor(two, three))));
in(c, ());
out(c, h(xor(xor(neut, one), xor(two, neut))));
in(c, ());
out(c, h(xor(xor(neut, one), xor(two, xor(neut, one)))));
in(c, ());
out(c, i(xor(xor(neut, one), xor(two, xor(neut, one)))));
in(c, ());
out(c, j(xor(xor(neut, one), xor(two, xor(neut, one)))));
in(c, ());
out(c, j(xor(xor(neut, one), xor(two, xor(one, neut)))))



(* EXPECTED
All queries proved.
0.016s (user 0.012s + system 0.004s), max rss 10312K
END *)
