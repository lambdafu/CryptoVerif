
(* Signed Diffie-Hellman protocol *)

proof {
crypto uf_cma(sign);
auto
}

param N, N2.

type host.
type keyseed [large,fixed].
type seed [fixed].
type pkey [bounded].
type skey [bounded].
type blocksize.
type signature.

type Z [large,fixed].
type G [large,fixed].
type K [large,fixed].
type D [fixed].

(* the CDH assumption *) 

proba pCDH.

expand CDH(G, Z, g, exp, mult, pCDH).

(* h in the random oracle model *)

type hashkey [fixed].

expand ROM_hash(hashkey, G, D, h).

param nH [noninteractive].
channel hc1, hc2.


(* signatures *)

fun concatB(host, host, G, G):blocksize [data].
    
proba Psign.
proba Psigncoll.

expand UF_CMA_signature(keyseed, pkey, skey, blocksize, signature, seed, skgen, pkgen, sign, check, Psign, Psigncoll).

const A,B:host.

(* query *)
query secret keyA.

channel start, cstart, cA1, cA2, cA3, cA4, cA5, cA6, cB1, cB2, cB3, cB4, cB5, cH, cHret, cK.







process
	in(start, ());
new hk: hashkey;
new rkB: keyseed;
let skB: skey = skgen(rkB) in
let pkB: pkey = pkgen(rkB) in
out(cstart, pkB);
((
  ! i_1 <= N
  in(cA1[i_1], hostB: host);
  new a_1: Z;
  let ga: G = exp(g, a_1) in
  out(cA2[i_1], (A, hostB, ga));
  in(cA3[i_1], (=A, =hostB, gb_1: G, s: signature));
  find j2 = j2_1 <= N2 suchthat defined(Khost[j2_1], Rkey[j2_1]) && (Khost[j2_1] = hostB) then
  let pkhostB: pkey = Rkey[j2] in
  if check(concatB(A, hostB, ga, gb_1), pkhostB, s) then
  new r2_1: seed;
  let gab: G = exp(gb_1, a_1) in
  let kA: D = h(hk, gab) in
  if hostB = B then
  (
    let keyA: D = kA
  )
  else
    out(cA6[i_1], kA)
) | (
  ! i_2 <= N
  in(cB1[i_2], (hostA: host, =B, ga_1: G));
  new b_1: Z;
  let gb_2: G = exp(g, b_1) in
  new r1_1: seed;
  let gab_1: G = exp(ga_1, b_1) in
  let kB: D = h(hk, gab_1) in
  out(cB2[i_2], (hostA, B, gb_2, sign(concatB(hostA, B, ga_1, gb_2), skB, r1_1)))
) | (
  ! i_3 <= nH
  in(hc1[i_3], x_3: G);
  out(hc2[i_3], h(hk, x_3))
) | (
  ! i_4 <= N2
  in(cK[i_4], (Khost: host, Kkey: pkey));
  let Rkey: pkey = (if Khost = B then pkB else Kkey)
))




(* EXPECTED
All queries proved.
0.084s (user 0.076s + system 0.008s), max rss 13284K
END *)
