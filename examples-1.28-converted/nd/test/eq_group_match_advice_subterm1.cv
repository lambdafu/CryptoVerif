type D.

(* set interactiveMode = true. *)

fun mult(D,D):D.
fun inv(D):D.
const neut:D.
equation group(mult,inv,neut).

fun h(D):bitstring.
fun g(D,D,D,D): D.

const zero, one, two, three: D. 

channel c.
proba Peq.
param n.

equiv
  ! n O(x: D, y: D, z: D, t: D) := return(mult(x,mult(y,mult(z,t)))) [all]
<=(Peq)=>
  ! n O(x: D, y: D, z: D, t: D) := return(g(x,y,z,t)).


process in(c, ());
out(c, h(inv(mult(mult(zero, one), mult(two, zero)))));
in(c, ());
let z: D = mult(zero, one) in
out(c, h(mult(z, mult(two, zero))));
in(c, ());
let t: D = mult(two, zero) in
out(c, h(mult(z, t)));
in(c, ());
let x: D = inv(mult(z, t)) in
out(c, h(x));
in(c, ());
out(c, (mult(zero, one) = mult(two, zero)));
in(c, ());
out(c, (mult(t, one) = zero))




(* EXPECTED
All queries proved.
0.024s (user 0.020s + system 0.004s), max rss 41040K
END *)
