(* There may be a bug in the way CryptoVerif counts the number of comparisons 
with the password pw, because the index of find j does not occur in the
expression "pw = y", although y in fact depends on it.
However, I don't manage to exhibit the bug, because 
- if the expression "let y = m[j] in pw = y" is left as it is, the 
simplification cannot eliminate collisions.
- if the expression "let y = m[j] in pw = y" is changed into "pw =
m[j]", CryptoVerif eliminates collisions and correctly counts the
number of comparisons with the password pw, by replacing the index of
find j with a new replication index (function new_repl_index in
simplify.ml) *)

param N.
param N2.
param N3.

type nonce [large,fixed].
type passwd [large,fixed].

(* Queries *)

query secret M [cv_onesession].

channel c1, c2, c3, c4, c5, c6, c7, c8, c9, start, finish.



process 
	((
  ! i_1 <= N
  in(start[i_1], ());
  new pw: passwd;
  new M: nonce;
  find j_2 = j_3 <= N2 suchthat defined(m[j_3]) && (let y: passwd = m[j_3] in (pw = y)) then
  out(c1[i_1], M)
) | (
  ! i_2 <= N2
  in(c3[i_2], m: passwd)
))



(* EXPECTED
All queries proved.
0.020s (user 0.016s + system 0.004s), max rss 10900K
END *)
