type D.

(* set interactiveMode = true. *)

fun xor(D,D):D.
const neut:D.
equation builtin ACUN(xor,neut).

fun g(D): D.
fun h(D):D.
const zero, one, two, three, four: D. 
const zero', one', two', three', four': D. 
equation forall x:D; xor(zero,xor(h(x),one)) = g(x).

channel c.

process in(c, ());
out(c, xor(zero, xor(one, h(two))));
in(c, ());
out(c, xor(xor(zero, one), h(two)));
in(c, ());
out(c, xor(xor(zero, one), xor(h(two), three)));
in(c, ());
out(c, xor(xor(xor(zero, one), h(two)), three));
in(c, ());
out(c, xor(xor(zero, one), xor(h(two), zero)));
in(c, ());
out(c, xor(xor(zero, one), xor(h(two), xor(three, one))));
in(c, ());
out(c, xor(xor(zero, one), xor(h(two), xor(zero, one))));
in(c, ());
out(c, xor(xor(zero, one), xor(h(two), xor(three, one))));
in(c, ());
out(c, xor(xor(zero, one), xor(h(two), xor(one', zero'))));
in(c, ());
out(c, (xor(zero, one) = h(two)));
in(c, ());
out(c, (xor(xor(zero, one), xor(h(two), xor(three, four))) = xor(xor(zero, one), xor(two', xor(three', four')))));
in(c, ());
out(c, (xor(xor(zero, one), xor(h(two), xor(three, four))) = xor(xor(zero', one'), xor(two', xor(three', four')))))



(* EXPECTED
All queries proved.
0.016s (user 0.016s + system 0.000s), max rss 10280K
END *)
