

param N.

type G [large, fixed].
type hashinput.
type hash [fixed].
type host.

proof {
show_game
}

(* Queries *)

query secret s.

channel c1, c2, c3, c4, c5, c6, c7, c8, c9,  
	start, finish.






process 
	(((
  ! i_1 <= N
  in(c1[i_1], (x: G, y: G, a: hash, b: hash));
  let z: hash = (if x = y then a else b)
) | (
  ! i_2 <= N
  in(c3[i_2], (x': G, c: hash));
  find j'' = j''_1 <= N suchthat defined(x[j''_1]) && (x[j''_1] = x') then
  find j_2 = j_3 <= N, j' = j'_1 <= N suchthat defined(j''[j'_1]) && (j_3 = j''[j'_1]) && (j'_1 = j_3) then
  new s: G;
  out(c4[i_2], s)
))

)


(* EXPECTED
RESULT Could not prove secrecy of s.
0.016s (user 0.016s + system 0.000s), max rss 10796K
END *)
