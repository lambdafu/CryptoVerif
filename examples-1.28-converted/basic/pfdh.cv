(* PFDH signature scheme
   The prover finds the same probability as for FDH, not the better
   reduction by J.S.Coron. This is ok, because we do not give the
   hypothesis of random self-reducibility.
 *)

(*
set interactiveMode = true.

Proof:

crypto hash
crypto mf r r_35 r_38
crypto f r
success

The prover finds the proof automatically, like for fdh, but is unable to find
the better reduction which exists for this scheme...
*)

param qS.

type pkey [bounded].
type skey [bounded].
type keyseed [large,fixed].
type seed [(*large,*)fixed].
type D [(*large,*)fixed].

(* One-way trapdoor permutation *)

proba POW.

expand OW_trapdoor_perm(keyseed, pkey, skey, D, pkgen, skgen, f, mf, POW).

(* Hash function, random oracle model *)

type hashkey [fixed].

expand ROM_hash(hashkey, bitstring, D, hash).

param qH [noninteractive].
channel hc1, hc2.


(* Queries *)

event bad.
query event(bad) ==> false.

channel c0, c1, c2, c3, c4, c5, start.





process 
	(in(start, ());
new hk: hashkey;
new r_2: keyseed;
let sk: skey = skgen(r_2) in
let pk: pkey = pkgen(r_2) in
out(c0, pk);
((
  ! i_1 <= qH
  in(hc1[i_1], x_2: bitstring);
  out(hc2[i_1], hash(hk, x_2))
) | (
  ! i_2 <= qS
  in(c1[i_2], m: bitstring);
  new sr_1: seed;
  out(c2[i_2], (sr_1, mf(sk, hash(hk, (m, sr_1)))))
) | (
  in(c3, (m2: bitstring, sr_2: seed, s: D));
  if f(pk, s) = hash(hk, (m2, sr_2)) then
  find j_7 = j_8 <= qS suchthat defined(m[j_8]) && (m2 = m[j_8]) then
    yield
  else
    event bad
))

)


(* EXPECTED
All queries proved.
0.056s (user 0.048s + system 0.008s), max rss 40864K
END *)
