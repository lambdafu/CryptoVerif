#!/bin/sh
set -e

CWD=$(pwd)

DIR=$(basename "$CWD")
if [ "$DIR" != "distrib" ]
then
    echo "This script must be executed from within the 'distrib' directory."
    exit 2
fi

VERSION=$1
YEAR=`date +%Y`
DEST="$CWD"/../website/copy
DESTD="$DEST"/cryptoverif"$VERSION"

if [ -z "$1" ]
then
    echo "Please indicate a version number as first argument."
    exit 2
fi


if [ ! -d "$DEST" ]
then
    echo "Directory '$DEST' does not exist. Please create it."
    exit 2
fi

if [ -d "$DESTD" ]
then
    echo "Directory '$DESTD' already exists. Please remove it."
    exit 2
fi

echo "Creating release of CryptoVerif version '$VERSION'"

cd ..
# We are now in the root directory of CryptoVerif.

set +e # Don't fail the script if there are no files to be removed.
rm *~ */*~ */*/*~ */*/*/*~
set -e

# Build header file
sed "s/YEAR/$YEAR/g" distrib/head.ml > distrib/head_year_tmp.ml

# Build src/version.ml
mv src/version.ml src/version.ml-tmp
echo "let version = \"$VERSION\"" > src/version.ml

# Build the manual
cd docs
pdflatex manual.tex
bibtex manual
pdflatex manual.tex
pdflatex manual.tex
cd ..

mkdir "$DESTD"

sed "s/VERSION/$VERSION/g;s/YEAR/$YEAR/g" README > "$DESTD"/README

mkdir "$DESTD"/cryptolib "$DESTD"/docs "$DESTD"/examples "$DESTD"/examples/basic "$DESTD"/examples/obasic "$DESTD"/examples/kerberos "$DESTD"/examples/hpke "$DESTD"/examples/arinc823 "$DESTD"/examples/arinc823/sharedkey "$DESTD"/examples/arinc823/publickey "$DESTD"/examples/textsecure "$DESTD"/examples/tls13 "$DESTD"/examples/tls13/PRFODH "$DESTD"/examples/wireguard "$DESTD"/examples/noiseNK "$DESTD"/src "$DESTD"/tests "$DESTD"/emacs "$DESTD"/cv2OCaml "$DESTD"/cv2OCaml/nspk "$DESTD"/cv2OCaml/wlsk "$DESTD"/cv2OCaml/ssh "$DESTD"/cv2fstar "$DESTD"/cv2fstar/cv2fstar "$DESTD"/cv2fstar/cv2fstar/src "$DESTD"/cv2fstar/cv2fstar/lib "$DESTD"/cv2fstar/nspk "$DESTD"/cv2fstar/nspk/src "$DESTD"/cv2fstar/nspk/tests

for i in CHANGES LICENSE build build.bat test docs/manual.pdf emacs/* cv2OCaml/nspk/README cv2OCaml/wlsk/README cv2OCaml/ssh/README cv2OCaml/nspk/build.sh cv2OCaml/wlsk/build.sh cv2OCaml/ssh/build.sh cv2OCaml/ssh/prepare cv2fstar/README.md cv2fstar/cv2fstar/Makefile cv2fstar/cv2fstar/Makefile.include cv2fstar/cv2fstar/src/Makefile cv2fstar/nspk/Makefile cv2fstar/nspk/Makefile.include cv2fstar/nspk/execution cv2fstar/nspk/src/Makefile examples/arinc823/prepare examples/kerberos/prepare examples/kerberos/*.pcv examples/kerberos/*.m4.cv examples/hpke/README.md examples/hpke/prepare examples/hpke/common.*.ocvl examples/hpke/lib.*.ocvl examples/hpke/*.m4.ocv examples/hpke/keyschedule.auth.prf.ocv examples/textsecure/prepare examples/tls13/README.md examples/wireguard/preamble.cvl examples/wireguard/separator.cvl examples/wireguard/prepare examples/noiseNK/prepare src/rusage.c
do
    cp "$i" "$DESTD/$i"
done

for i in src/*.ml src/*.mli src/*.mll cv2OCaml/base.ml* cv2OCaml/crypto*.ml* cv2OCaml/nspk/A*.ml cv2OCaml/nspk/B*.ml cv2OCaml/nspk/S*.ml  cv2OCaml/nspk/test.ml cv2OCaml/nspk/nspk3tbl.ocv cv2OCaml/wlsk/init.ml cv2OCaml/wlsk/keygen.ml cv2OCaml/wlsk/resp.ml cv2OCaml/wlsk/server.ml cv2OCaml/wlsk/test_wlsk.ml cv2OCaml/wlsk/woolamskcorr_tbl.cv cv2OCaml/ssh/ssh*.ml* cv2OCaml/ssh/add_key.ml cv2OCaml/ssh/ssh.ocv cv2OCaml/ssh/ssh-secrecy-key.m4.ocv cv2OCaml/ssh/ssh-secrecy-key-indiff.ocv cv2fstar/cv2fstar/lib/Lib_RandomSequence.ml cv2fstar/cv2fstar/src/*.fst cv2fstar/cv2fstar/src/*.fsti cv2fstar/nspk/nsl.ocv cv2fstar/nspk/src/Application.fst cv2fstar/nspk/src/Application.fsti cv2fstar/nspk/src/NSL.Equations.fst cv2fstar/nspk/src/NSL.Functions.fst cv2fstar/nspk/src/NSL.Types.fst cv2fstar/nspk/tests/test.ml examples/basic/* examples/obasic/* examples/arinc823/arinc823prim.cvl examples/arinc823/*/*.m4.cv examples/arinc823/*/*.ocv examples/textsecure/*.m4.cv examples/textsecure/*.ocv examples/tls13/*.cv* examples/tls13/PRFODH/*.cv examples/wireguard/hashgen.ml examples/wireguard/WG.25519.dos.cv examples/wireguard/*.m4.cv examples/noiseNK/*.cv cryptolib/commonlib.cvl cryptolib/crypto.pvl cryptolib/*.ocv
do
    if [ -f "$i" ]
    then
        cat distrib/head_year_tmp.ml "$i" > "$DESTD"/"$i"
    fi
done

for i in src/*.mly
do
    if [ -f "$i" ]
    then
        (echo "%{"; cat distrib/head_year_tmp.ml; echo "%}"; cat "$i") > "$DESTD"/"$i"
    fi
done

cp "$DESTD"/cv2OCaml/crypto_real.ml "$DESTD"/cv2OCaml/crypto.ml

rm "$DESTD"/src/*lexer.ml "$DESTD"/src/*parser.ml "$DESTD"/src/*parser.mli "$DESTD"/src/profile.ml*

cd "$DEST"

tar -czf "$DEST"/cryptoverif"$VERSION".tar.gz cryptoverif"$VERSION"
cp "$DESTD"/docs/manual.pdf "$DEST"/manual.pdf

rm -r "$DESTD"

cd "$CWD"/..

if uname -a | grep -E -q \(Cygwin\)\|\(MINGW\)
then

    echo "Creating binary release of CryptoVerif version '$VERSION'."
    
    # We are now in the root directory of CryptoVerif.
    mkdir "$DESTD"
    
    # Build executables
    ./build
    
    # Build wireguard.cvl
    cd examples/wireguard
    ./prepare
    cd ../..

    sed "s/VERSION/$VERSION/g;s/YEAR/$YEAR/g" distrib/READMEBIN > "$DESTD"/READMEBIN
    
    mkdir "$DESTD"/docs "$DESTD"/examples "$DESTD"/examples/basic "$DESTD"/examples/obasic "$DESTD"/examples/kerberos "$DESTD"/examples/hpke "$DESTD"/examples/arinc823 "$DESTD"/examples/arinc823/sharedkey "$DESTD"/examples/arinc823/publickey "$DESTD"/examples/textsecure "$DESTD"/examples/tls13 "$DESTD"/examples/tls13/PRFODH "$DESTD"/examples/wireguard "$DESTD"/examples/noiseNK "$DESTD"/tests "$DESTD"/emacs "$DESTD"/cv2OCaml "$DESTD"/cv2OCaml/nspk "$DESTD"/cv2OCaml/wlsk "$DESTD"/cv2OCaml/ssh "$DESTD"/cv2fstar "$DESTD"/cv2fstar/cv2fstar "$DESTD"/cv2fstar/cv2fstar/src "$DESTD"/cv2fstar/cv2fstar/lib "$DESTD"/cv2fstar/nspk "$DESTD"/cv2fstar/nspk/src "$DESTD"/cv2fstar/nspk/tests
    
    for i in CHANGES LICENSE test cryptoverif.exe cryptogen.exe analyze.exe addexpectedtags.exe docs/manual.pdf emacs/* cv2OCaml/nspk/README cv2OCaml/wlsk/README cv2OCaml/ssh/README cv2OCaml/nspk/build.sh cv2OCaml/wlsk/build.sh cv2OCaml/ssh/build.sh cv2OCaml/ssh/prepare cv2fstar/README.md cv2fstar/cv2fstar/Makefile cv2fstar/cv2fstar/Makefile.include cv2fstar/cv2fstar/src/Makefile cv2fstar/nspk/Makefile cv2fstar/nspk/Makefile.include cv2fstar/nspk/execution cv2fstar/nspk/src/Makefile examples/arinc823/prepare examples/kerberos/prepare examples/kerberos/*.pcv examples/kerberos/*.m4.cv examples/hpke/README.md examples/hpke/prepare examples/hpke/common.*.ocvl examples/hpke/lib.*.ocvl examples/hpke/*.m4.ocv examples/hpke/keyschedule.auth.prf.ocv examples/textsecure/prepare examples/tls13/README.md examples/wireguard/prepare examples/noiseNK/prepare
    do
	cp "$i" "$DESTD/$i"
    done

    for i in default.cvl default.ocvl cryptoverif.pvl cv2OCaml/base.ml* cv2OCaml/crypto*.ml* cv2OCaml/nspk/A*.ml cv2OCaml/nspk/B*.ml cv2OCaml/nspk/S*.ml  cv2OCaml/nspk/test.ml cv2OCaml/nspk/nspk3tbl.ocv cv2OCaml/wlsk/init.ml cv2OCaml/wlsk/keygen.ml cv2OCaml/wlsk/resp.ml cv2OCaml/wlsk/server.ml cv2OCaml/wlsk/test_wlsk.ml cv2OCaml/wlsk/woolamskcorr_tbl.cv cv2OCaml/ssh/ssh*.ml* cv2OCaml/ssh/add_key.ml cv2OCaml/ssh/ssh.ocv cv2OCaml/ssh/ssh-secrecy-key.m4.ocv cv2OCaml/ssh/ssh-secrecy-key-indiff.ocv cv2fstar/cv2fstar/lib/Lib_RandomSequence.ml cv2fstar/cv2fstar/src/*.fst cv2fstar/cv2fstar/src/*.fsti cv2fstar/nspk/nsl.ocv cv2fstar/nspk/src/Application.fst cv2fstar/nspk/src/Application.fsti cv2fstar/nspk/src/NSL.Equations.fst cv2fstar/nspk/src/NSL.Functions.fst cv2fstar/nspk/src/NSL.Types.fst cv2fstar/nspk/tests/test.ml examples/basic/* examples/obasic/* examples/arinc823/arinc823prim.cvl examples/arinc823/*/*.m4.cv examples/arinc823/*/*.ocv examples/textsecure/*.m4.cv examples/textsecure/*.ocv examples/tls13/*.cv* examples/tls13/PRFODH/*.cv examples/wireguard/mylib.cvl examples/wireguard/WG.25519.dos.cv examples/wireguard/*.m4.cv examples/noiseNK/*.cv examples/noiseNK/mylib.cvl
    do
	if [ -f "$i" ]
	then
	    cat distrib/head_year_tmp.ml "$i" > "$DESTD"/"$i"
	fi
    done

    cp "$DESTD"/cv2OCaml/crypto_real.ml "$DESTD"/cv2OCaml/crypto.ml
    
    cd "$DEST"
    
    zip -r "$DEST"/cryptoverifbin"$VERSION".zip cryptoverif"$VERSION"
    rm -r "$DESTD"
    
else
    echo Could not build Windows binary distribution.
    echo You need to be under cygwin or mingw for that.
fi

# Remove temporary files
cd "$CWD"/..
mv src/version.ml-tmp src/version.ml
rm distrib/head_year_tmp.ml

cd "$CWD"
