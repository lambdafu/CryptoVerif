#!/bin/sh

set -e

SRC="parsing_helper.mli parsing_helper.ml occ_map.mli occ_map.ml types.ml ptree.mli settings.mli settings.ml parser.mli parser.ml lexer.ml terms.mli terms.ml array_ref.mli array_ref.ml incompatible.mli incompatible.ml info_from_term.mli info_from_term.ml def.mli def.ml match_eq.mli match_eq.ml stringmap.mli stringmap.ml polynom.mli polynom.ml display.mli display.ml  displaytex.mli displaytex.ml computeruntime.mli computeruntime.ml proba.mli proba.ml check.mli check.ml syntax.mli syntax.ml facts.mli facts.ml depanal.mli depanal.ml facts_of_elsefind.mli facts_of_elsefind.ml unique.mli unique.ml improved_def.mli improved_def.ml transf_auto_sa_rename.mli transf_auto_sa_rename.ml transf_simplify_nonexpanded.mli transf_simplify_nonexpanded.ml transf_expand.mli transf_expand.ml transf_sarename.mli transf_sarename.ml transf_remove_assign.mli transf_remove_assign.ml transf_move.mli transf_move.ml transf_insert_event.mli transf_insert_event.ml transf_globaldepanal.mli transf_globaldepanal.ml transf_merge.mli transf_merge.ml transf_simplify.mli transf_simplify.ml transf_crypto.mli transf_crypto.ml transf_insert_replace.mli transf_insert_replace.ml transf_tables.mli transf_tables.ml check_distinct.mli check_distinct.ml check_corresp.mli check_corresp.ml success.mli success.ml invariants.mli invariants.ml instruct.mli instruct.ml implementation.mli implementation.ml version.mli version.ml main.ml"

cd src

ocamlyacc -v parser.mly
ocamllex lexer.mll

case X$1 in
    Xnative | X )
	ocamlopt -o ../cryptoverif unix.cmxa str.cmxa $SRC;;
    Xdebug )
	ocamlc -g -o ../cryptoverif unix.cma str.cma $SRC;;
    Xprofile )
	ocamlopt -I /usr/include -o ../cryptoverif str.cmxa unix.cmxa profileprim.c profile.mli profile.ml $SRC;;
    *)
	echo Unknown option
esac

if [ -f xtime.c ]
then
    gcc -o ../xtime xtime.c
fi

cd ..

cd cryptolib
ocamlopt -o ../cryptogen cryptogen.ml

../cryptogen -args-from-to 1 10 all > gen.cvl
../cryptogen -out oracles -args-from-to 1 10 all > gen.ocvl
../cryptogen -out proverif -args-from-to 1 10 all > gen.pvl

cat commonlib.cvl gen.cvl > ../default.cvl
cat commonlib.cvl gen.ocvl > ../default.ocvl
cat crypto.pvl gen.pvl > ../cryptoverif.pvl

cd ..
